Building websites has definitely become more than just writing code.
Head First Web Design shows you what you need to know to give your users an appealing and satisfying experience.
Head First Web Design really demystifies the web design process and makes it possible for any web programmer to give it a try.
Finally a developer can fully understand the whole process of  creating a GREAT website.
You feel as though you are working through an actual design process instead of  just reading a how-to manual.
Wouldn’t it be dreamy if there was a web design book.
O’Reilly Media books may be purchased for educational, business, or sales promotional use.
Many of  the designations used by manufacturers and sellers to distinguish their products are claimed as trademarks.
Where those designations appear in this book, and O’Reilly Media, Inc., was aware of  a trademark claim, the designations have been printed in caps or initial caps.
While every precaution has been taken in the preparation of  this book, the publisher and the authors assume no responsibility for errors or omissions, or for damages resulting from the use of  the information contained herein.
No personas were harmed in the making of  this book.
To my Mom—for helping me realize my dreams and inspiring me to follow them.
In addition to a wide variety of  academic papers and conference presentations, Ethan has written a number of books on interactive design & web design.
When he’s not being professorial, he’s a world class comic book nerd (Killowog is so his favorite Green Lantern), a sci-fi dork (he’ll argue to the grave that Tom Baker is the best Doctor ever), and an avid player of  all sorts of  games (digital, board, and tabletop)
Jeff  Siarto is a user experience and web designer fresh out of  grad school at Michigan State University.
Jeff  was a student of  the standards-based web design movement—aspiring to the likes of  Cederholm, Zeldman and Meyer—and worked as a web developer throughout his college years before signing on to co-author Head First Web Design in his second year of grad school.
In addition to building websites, he also works to improve online courses and open education through simple, usable design.
Jeff  currently calls Chicago home and works as a freelance web developer and part time Iron Chef  challenger.
When he’s not working, he likes to cook and eat (mostly eat) and make endless design changes to his blog at www.siarto.com.
Here you are trying to learn something, while here your brain is doing you a favor by making sure the learning doesn’t stick.
Beauty is in the eye of your user1 building beautiful web pages.
Paper covers rock Tired of  butting heads with a picky client? Yeah, you know the type...
In this chapter, you’ll learn how to work smart before.
Coming up with a theme and visual metaphor for your.
A little shaky on your site navigation? When it comes to the Web, users are impatient.
That’s why you’ve got to spend a lot of time getting your site’s.
Park Hyatt Tokyo Information, images and thoughts from this hotel.
Pictures of people and friends that Mark met along the way.
Short clips of video Mark took with his digital camera.Media.
A collection of menus Mark picked up from various eateries around the country.
Follow the Golden Rule It pays to be a good listener...
We’ve been talking about user-centered design for a few chapters, but here’s where.
Find out how a few easy presses of the calculator, a.
Her laptop (which is a little old, but all she can really afford right now) is her primary computer–and where she does all of her web browsing.
A good color palette can draw your audience into your site, give them a powerful feeling of immersion, and keep.
And when it comes to color and web design, it’s not just.
By the end of this chapter, you’ll not only be.
How do you really make sure your users never get lost? In this chapter, we’ll look at.
Writing for the Web is just like any other kind of  writing, right? Actually, writing for the Web is completely different than writing for print.
People don’t read text on the Web like they read text on a printed page.
While Dave Arneson was brought into the partnership as a game designer, and left shortly thereafter, Brian Blume entered as a funder.
Blume believed that Cavaliers and Roundheads was not generating enough revenue, and encouraged Gygax and Kaye to focus their efforts on releasing Dungeons & Dragons.
There is considerable debate as to the contributions that Dave Arneson made to the initial development of  Dungeons & Dragons.
Main Heading A little body text to give the user some context and a.
Inaccessibility Kills Who’s missing out on experiencing your website right now? You may have a beautiful, well-laid out, easily navigable site...
Good design is all about really listening to your users.
Whatever method you use, its all about “hearing” what your.
If you do, your site will meet the needs of your audience and be.
Can be administered in lots of  ways (paper, online, by phone, in person)
Participants can often complete the survey at their own leisure.
Collects information on a very specific topic from those who have a stake in the topic.
Benefits from a trained facilitator Public environment may intimidate some participants.
Keeping your site fresh So you’ve built a bunch of  awesome websites.
Now it’s time to kick back, relax, and watch the visitor numbers grow, right? Whoa, not so fast.
Business in a web design book? Are you kidding me? You’ve mastered pre-production, information architecture, navigation, color, and even accessibility.
What’s left in your path to web design mastery? Well, you’re.
A static website with a front page, an About page, a contact page, and three separate product pages.
Trilobite’s site has to work on all sorts of devices, too.
Trilobite wants to appear cutting edge to represent their work on iPhone apps.
Several different designs (paper is fine) to choose from, and an ability to provide design feedback that will get incorporated into the final site.
Low-key usability testing to make sure there aren’t any problems before the site goes live.
The Top Ten Things (we didn’t cover) We’ve really covered a lot of  ground in this book.
The thing is, there are some important topics and tidbits that didn’t quite fit into any of the.
We feel pretty strongly about these and think that if we didn’t.
Well, it’s not really a chapter; it’s more like an.
But it’s an awesome appendix of the top ten best.
However, the potential of  the web to deliver full scale applications didn’t hit the mainstream till Google introduced Gmail, quickly followed by Google Maps, web based applications with rich user interfaces and PC-equivalent interactivity.
The collection of  technologies used by Google was christened AJAX, in a seminal essay by Jesse James Garrett of  web design firm Adaptive Path.
The first of  those principles was “The web as platform.” Yet that was also a rallying cry of  Web 1.0 darling, Netscape, which went down in flames after a heated battle with Microsoft.
What’s more, two of  our initial Web 1.0 exemplars, DoubleClick and Akamai, were both pioneers in treating the web as a platform.
People don’t often think of  it as “web services,” but in fact, ad serving was the first widely deployed web service, and the first widely deployed “mashup” (to use another term that has gained currency of  late)
The bursting of  the dot-com bubble in the fall of 2001 marked a turning point for the web.
Many people concluded that the web was overhyped, when, in fact, bubbles and consequent shakeouts appear to be a common feature of  all technological revolutions.
Shakeouts typically mark the point at which an ascendant technology is ready to take its place at center stage.
I can’t believe they put that in a Web Design book.
Do you need to understand web design for a course, your line of work, or you simply want to impress people at parties with your vast knowledge of The Golden Ratio and the Web Content Accessibility Guidelines?
Do you consider yourself a web developer (working in a fun environment like PHP, Ruby on Rails, .NET) and want to become a better web designer?
Are you an accomplished web or graphic designer looking for a reference book?
Are you comfortable with XHTML & CSS but don’t have any experience with web design?
Are you someone who doesn’t have any experience with HTML/XHTML & CSS?
Are you someone who likes to build webpages with tools like Frontpage and Dreamweaver, so you don’t ever have to look at code?
It was built that way, and it helps you stay alive.
So what does your brain do with all the routine, ordinary, normal things you encounter? Everything it can to stop them from interfering with the brain’s real job—recording things that matter.
It doesn’t bother saving the boring things; they never make it past the “this is obviously not important” filter.
How does your brain know what’s important? Suppose you’re out for a day hike and a tiger jumps in front of  you, what happens inside your head and body?
This must be important! Don’t forget it! But imagine you’re at home, or in a library.
Or trying to learn some tough technical topic your boss thinks will take a week, ten days at the most.
We think of a “Head First” reade r as a learner.
Which would you pay mo re attention to: a stimulat.
If  you really want to learn, and you want to learn more quickly and more deeply, pay attention to how you pay attention.
Most of  us did not take courses on metacognition or learning theory when we were growing up.
We were expected to learn, but rarely taught to learn.
But we assume that if  you’re holding this book, you really want to learn how to design user-friendly websites.
And you probably don’t want to spend a lot of  time.
If  you want to use what you read in this book, you need to remember what you read.
To get the most from this book, or any book or learning experience, take responsibility for your brain.
The trick is to get your brain to see the new material you’re learning as Really Important.
Otherwise, you’re in for a constant battle, with your brain doing its best to keep the new content from sticking.
So just how DO you get your brain to treat Web Design like it was a hungry tiger? There’s the slow, tedious way, or the faster, more effective way.
You obviously know that you are able to learn and remember even the dullest of  topics if  you keep pounding the same thing into your brain.
With enough repetition, your brain says, “This doesn’t feel important to him, but he keeps looking at the same thing over and over and over, so I suppose it must be.”
The faster way is to do anything that increases brain activity, especially different types of  brain activity.
The things on the previous page are a big part of  the solution, and they’re all things that have been proven to help your brain work in your favor.
For example, studies show that putting words within the pictures they describe (as opposed to somewhere else in the page, like a caption or in the body text) causes your brain to try to makes sense of  how the words and picture relate, and this causes more neurons to fire.
More neurons firing = more chances for your brain to get that this is something worth paying attention to, and possibly recording.
A conversational style helps because people tend to pay more attention when they perceive that they’re in a conversation, since they’re expected to follow along and hold up their end.
The amazing thing is, your brain doesn’t necessarily care that the “conversation” is between you and a book! On the other hand, if  the writing style is formal and dry, your brain perceives it the same way you experience being lectured to while sitting in a roomful of  passive attendees.
Here’s what WE did: We used pictures, because your brain is tuned for visuals, not text.
As far as your brain’s concerned, a picture really is worth a thousand words.
And when text and pictures work together, we embedded the text in the pictures because your brain works more effectively when the text is within the thing the text refers to, as opposed to in a caption or buried in the text somewhere.
We used redundancy, saying the same thing in different ways and with different media types, and multiple senses, to increase the chance that the content gets coded into more than one area of  your brain.
We used concepts and pictures in unexpected ways because your brain is tuned for novelty, and we used pictures and ideas with at least some emotional content, because your brain is tuned to pay attention to the biochemistry of  emotions.
That which causes you to feel something is more likely to be remembered, even if  that feeling is nothing more than a little humor, surprise, or interest.
We used a personalized, conversational style, because your brain is tuned to pay more attention when it believes you’re in a conversation than if  it thinks you’re passively listening to a presentation.
We included more than 80 activities, because your brain is tuned to learn and remember more when you do things than when you read about things.
We used multiple learning styles, because you might prefer step-by-step procedures, while someone else wants to understand the big picture first, and someone else just wants to see an example.
But regardless of  your own learning preference, everyone benefits from seeing the same content represented in multiple ways.
We include content for both sides of  your brain, because the more of  your brain you engage, the more likely you are to learn and remember, and the longer you can stay focused.
Since working one side of  the brain often means giving the other side a chance to rest, you can be more productive at learning for a longer period of  time.
And we included stories and exercises that present more than one point of  view, because your brain is tuned to learn more deeply when it’s forced to make evaluations and judgments.
We included challenges, with exercises, and by asking questions that don’t always have a straight answer, because your brain is tuned to learn and remember when it has to work at something.
Think about it—you can’t get your body in shape just by watching people at the gym.
But we did our best to make sure that when you’re working hard, it’s on the right things.
That you’re not spending one extra dendrite processing a hard-to-understand example, or parsing difficult, jargon-laden, or overly terse text.
In stories, examples, pictures, etc., because, well, because you’re a person.
And your brain pays more attention to people than it does to things.
These tips are a starting point; listen to your brain and figure out what works for you and what doesn’t.
Your brain works best in a nice bath of  fluid.
Dehydration (which can happen before you ever feel thirsty) decreases cognitive function.
There’s only one way to become an experienced web designer: design and build websites.
Now, this might mean building layouts on paper, doing card sorts to develop your information architecture, or writing lots of  CSS.
The point is that you will never become a great web designer if  you just read about it—you need to do it.
We’re going to give you a lot of  practice: every chapter has exercises that pose problems for you to solve or asks questions that you need to think about.
Don’t just skip over them—a lot of  the learning happens when you work on the exercises.
We included a solution to each exercise, so don’t be afraid to peek at the solution if  you get stuck, but try to solve the problem before you look at the solution.
And definitely get it working before you move on to the next part of  the book.
Groaning over a bad joke is still better than feeling nothing at all.
If  you find yourself  starting to skim the surface or forget what you just read, it’s time for a break.
Once you go past a certain point, you won’t learn faster by trying to shove more in, and you might even hurt the process.
If you’re trying to understand something, or increase your chance of  remembering it later, say it out loud.
Better still, try to explain it out loud to someone else.
You’ll learn more quickly, and you might uncover ideas you hadn’t known were there when you were reading about it.
Part of  the learning (especially the transfer to long-term memory) happens after you put the book down.
Your brain needs time on its own, to do more processing.
If  you put in something new during that processing time, some of  what you just learned will be lost.
They’re not optional sidebars, they’re part of  the core content! Don’t skip them.
Here’s what YOU can do to bend your brain into submission.
We put them in, but if  we did them for you, that would be like having someone else do your workouts for you.
There’s plenty of  evidence that physical activity while learning can increase the learning.
When the book asks you a question, don’t just skip to the answer.
The more deeply you force your brain to think, the better chance you have of  learning and remembering.
The more you understand, the less you have to memorize.
Read Me This is a learning experience, not a reference book.
We deliberately stripped out everything that might get in the way of  learning whatever it is we’re working on at that point in the book.
And the first time through, you need to begin at the beginning because the book makes assumptions about what you’ve already seen and learned.
We start off by teaching one of the most important concepts in web design—the design process—and then we move on to more specific design topics.
The design process is the foundation for developing a great-looking website.
Each step gets you closer to better pages, and along the way, you create everything from a visual metaphor to a map of  the site’s content.
Once you understand the overall design process, you can then dive into the details and begin building beautiful websites.
All of  the code that you write during the course of  going through this book is standards compliant.
There will be no tables for layout, no style information in your markup, and all those <p> tags will be properly closed.
All of the code in this book is available on the Head First site.
Most of  the projects in this book will require you to download the code for that particular chapter.
Actually, you should just download all the code from the beginning so that you have it ready when the time comes.
Sometimes we will ask you to make changes to code that already exists and will provide and “before” and “after” version of  the markup and stylesheets.
We assume that you have a working knowledge of  XHTML and CSS and, therefore, don’t make it a point to explain every nuance of  the code.
The important stuff  is covered, and the downloadable examples are well documented.
Remember, we’re trying to make you a better designer not teach you the ins and outs of  XHTML and CSS.
We introduce storyboarding in this book as method for quickly mocking up design ideas without committing tons of  time to code.
Sometimes these are referred to as “storyboads,” but other times we use the term “comp” (or composition) in reference to the same thing.
While we’ve taken every measure to make sure that our code is cross-browser compatible, you should use a modern browser (IE7+, Safari, Firefox) when putting together the sites in this book.
While older browsers (notably IE6 and below) will work, you results may vary, as those browsers are buggy and incredibly finicky.
The exercises and activities are not add-ons; they’re part of  the core content of  the book.
Some of  them are to help with memory, some are for understanding, and some will help you apply what you’ve learned.
One distinct difference in a Head First book is that we want you to really get it.
And we want you to finish the book remembering what you’ve learned.
Most reference books don’t have retention and recall as a goal, but this book is about learning, so you’ll see some of  the same concepts come up more than once.
Our markup and CSS examples are as lean as possible.
Our readers tell us that it’s frustrating to wade through 200 lines of  markup or CSS looking for the two lines they need to understand.
Most examples in this book are shown within the smallest possible context so that the part you’re trying to learn is clear and simple.
Don’t expect all of  the examples to be robust—or even complete.
They are written specifically for learning and aren’t always fully-functional.
We’ve placed files (markup, CSS, images, complete pages) on the Web so you can copy and paste them into your text/markup/code editor.
Johannes de Jong is an old dinosaur mainframer that loves to go over to the wild side—building websites, from time to time.
His latest experiment is a Google Maps site built with Apex from Oracle, and yes, he will use this book to redesign it.
She is a hard core Christian, wife, daughter, reader and GEEK.
She loves coding so much that she even does it in her free time.
Corey McGlone has been involved in web development for ten years and has spent the last seven years working primarily in web application development for Schnieder Logistics, Relion Corporation, and Mayo Clinic.
He’s an avid music lover, is married, and has one little boy at home.
Pauline McNamara has worked with university e-Learning projects in Switzerland for the past 6 years, most recently at the Swiss Federal Institute of  Technology in Zurich.
Her current learning passion involves raising an adorable puppy with her partner (who’s also adorable)
Even though he was overloaded with a ton of  other books, he always had great feedback and suggestions for how to make our book sharper, smoother, and a far more effective learning tool.
A huge thanks must go out to Lou Barr, who took chapters that we thought looked awesome to begin with, and made them look incredibly polished (and even awesomer)—and we are really grateful for this.
First off, to my wife Jenn, who damn near deserves sainthood for putting up with the sheer number of  hours I’ve put into this book (and away from her) and the grumpy mood that I was almost constantly in as a result.
To my son Sam, who one day (somewhere in the middle of  me writing the book) asked, “Daddy, are you ever going to stop working so you can play with me?” The book is done, Sam.
Let’s do something fun! To my daughter Taylor, who, while she most likely won’t admit it, probably thinks it’s cool to see her name (and picture) in the book.
To my colleagues at MATRIX (especially Mark Kornbluh and Dean Rehberger) for their support (particularly, when I was in the thick of  finishing the book off)
To my grad students Joe, Pete, and Steen, who made it their morning ritual (especially near the end) to stick their heads in my office to see how the book was doing.
And to my big moose of  a chocolate lab Oscar—just because.
To Allie, for putting up with months of  me working until two in the morning.
Also, your InDesign tips were essential to the production of  this book; without them, all the images would be stretched and pixelated.
You guys have been an inspiration to me, and I love you all very much.
You guys gave me an opportunity to work in one of  the best IT offices in Michigan and allowed me the freedom to develop the skills I needed to write this book.
I am forever grateful for the path you guys have lead me down, and this book wouldn’t have been possible without your support.
To Sanders Kleinfeld, Caitrin McCullough, Karen Shaner, who all kept various aspects of  the production process running smoothly.
To Brittany Smith, the book’s Production Editor, who made sure that when the book went to production, everything ran smoothly and efficiently.
Finally, to Laurie Petrycki, who had faith in our abilities and our vision enough to let us write this book in the first place.
It’s a virtual library that lets you easily search thousands of  top tech books, cut and paste code samples, download chapters, and find quick answers when you need the most accurate, current information.
I know he said you’re just another boring one-column waitress, Mom, but I think you’re the best...
Then you’ve got to write for the Web, know your.
Red Lantern Design’s been producing small sites for local businesses for several years, and now Jane wants to expand their client-base.
The old Red Lantern webmaster used a WYSIWYG editor to create the company’s own site, and now no one can edit the files.
Jane’s hired you to build a new site that will bring Red Lantern up to modern web standards and bag the company more lucrative clients.
I’ve bought a kiosk at an international business conference in a week.
I don’t know a thing about web design, but I know you do.
So you need to design a really impressive new website as quickly and efficiently as possible.
Take a look at the screenshot and, using your web design expertise, annotate it.
Your answers may be a little different, so don’t worry if you didn’t catch all of these.
One column? That’s it? Seems pretty bland for a web design studio’s site!
Shouldn’t there be something to grab potential clients’ interest on the front page? Like news or a featured project...
There’s not much contrast between the menu and the background image, or the body text and the gray center column.
Very Zen, but it doesn’t exactly say “This company is a young, dynamic, exciting web design trailblazer.”
Where do you start? There’s not a lot that’s good about the existing Red Lantern site—the logo’s nice, but that’s a pretty damning comment on the rest of  the design if  that’s all there is to like.
But if  there’s so much wrong, how can we figure out what to work on next? Where would you start?
Is Joe right? Is there anything else to do? Where would you start?
Are you kidding me? How am I supposed to know where to start? I’ve got a whole bunch of stuff I need to do, so you tell me.
The fact you’re still asking yourself  those questions without opening a text editor is a good sign.
The answer to both is, always follow a design process.
A design process structures your project so that you stay on task and don’t go off  in every different direction all at once without accomplishing anything but stress, stress, and more stress.
A process is really just a workflow that determines the order you do things on a web design project.
It’s their dream home, they’ve got a ton of  ideas on their wishlist, and you also need to include the usual things you’d expect to find in a house: walls, floors roof, kitchen, bedroom, bathroom, living areas...
Now ask yourself  where you’d start? Would you build the walls first? Would you pick out fabrics, or draw up a blueprint? Which one is going to pay off two weeks from now? Two months? Two years?
Draw up a blueprint FIRST So building a website is a lot like building a house.
If  you start with a blueprint, you’ll know exactly where you’re headed at every step: foundations, load-bearing walls, and so on.
So, if you’ve got bad IA, chances are, you’ll have a bad navigation system as well.
If  your site doesn’t have solid IA, it will feel disorganized and confusing to users.
And that will make users go someplace else to get what they’re looking for.
Break down your content into logical chunks that are related to each other in an ordered hierarchy.
What content do you have for the Red Lantern site? How will you order it? Will you need any more material?
And finally the two categories of printed books are listed under the “Print Books” section.
In this typical “reverse branching bush” IA diagram, the “Products” section is under the “Home” section.Turn your book upside-down.
Start the Information Architecture process by asking Jane about the content she wants for the site.
Here’s a memo from Jane telling you what sections she wants on the site.
Write down a one or two word description for that “chunk” of content.
Let’s have a section of the site where we put.
We definitely need a se ction of the site where.
I think it would be good to have a section of.
Once you’ve worked out the sections of information for the Red Lantern Design site, you can start to build your Information Architecture diagram.
Fill in the spaces provided with your individual sections from the facing page.
Your IA diagram will always start with your home or main page at the top of the hierarchy.
Remember, each new row is a subsection of the section above.
What “chunks” of content might live in these two sections?
You started the Information Architecture process by asking Jane about the content she wants on the site.
Jane let you know what she thought the sections should be.
Here are some possible one or two word descriptions for each “chunk” of content.
Let’s have a section of the site where we put.
We definitely need a se ction of the site where.
I think it would be good to have a section of.
Given these “chunks” of information, how does your IA diagram look?
Under “Services,” we added our two chunks from Jane’s memo.
We shortened “News & Updates” to just “News” since it means the same thing and will save space in the menu.
We added the “About Us” section to the home page.
This will orient users arriving there and give them a quick explanation of Red Lantern and what the company does.
Q: Do IA diagrams always have to look like a reverse branching bush?
A: No, though the reverse branching bush is probably the most common way IA diagrams are done.
Honestly, any kind of diagram that accurately and clearly represents the sections and subsections of content (and the hierarchical relationship between them) works just fine.
Q: Will the people I design sites for always be as clear as Jane about what sections they want?
You’ll be amazed at the extra details about sections and design ideas that come from just talking to people.
Just because they may not know the names that sections on a site are commonly called, doesn’t mean they don’t have a clear idea about what they want their site to contain.
Then it’s up to you to organize the sections logically and hierarchically.
Q: Couldn’t I just skip this part of the process? This IA diagram and the one on page 7 look pretty similar...
A: No! Don’t skip IA, as it can often determine parts of the design when you come to lay out the site.
Besides, although there are some similarities of structure, every site is different, and some sites will have a lot of subsections.
The more content you have and the deeper your IA diagram, the more complex your navigation system will be.
You’ll not only need top level navigation, but second tier navigation as well.
Q: Is an IA diagram just like a sitemap? The “chunks” just look like links...
A: An IA diagram shows a hierarchical relationship between sections and subsections of content in a site.
It isn’t meant to show links between sections, but you will use it when you put together the navigation for your site.
C’mon, all we need for good navigation is some buttons that link to all the pages in our IA diagram, and we’re good to go...
Will that be enough to help your users find their way around the site? You need to think about navigation twice in the design process? First, you need to think about your navigational elements—yes, things like buttons and nav bars—while you work on the overall layout of  the site.
Navigation will show up again when you begin writing the code and building the layout elements that have to do with users finding their way around the site, as well as linking your pages together.
But don’t jump the gun, you need to start by organizing your top level navigation.
Information Architecture isn’t just important for organizing your site’s information; it’s a big deal for your navigation as well.
So, when it comes to building your site’s navigation, keep your IA diagram close at hand.
Top level navigation is usually the most prominent navigational element—the tabbed nav bar at the top of  the page, the vertical nav menu in a secondary column, etc.
More often that not, your top level navigation links to those sections one tier below the home page in your IA diagram.
Draw a few sketches of the kinds of menu you’re already familiar with and start thinking about which menu type would suit the Red Lantern site.
Because you moved the “About Us” section to the home page of Red Lantern Design’s site, it’s easy to circle the top level navigation elements in your IA diagram.
Which top level navigation design do you think will work best for the Red Lantern Design site? If you don’t know, how do you think you’ll work it out?
Horizontal tabs are used for to p level navigation on.
In this case, the buttons become visible on mouse over, which is a nice, subtle touch.
Back when people first started adding menus to their sites, this was the most popular type of menu.
Vertical tabs for top level navigation styled with CSS and images add a real notebook feel to this site.
The point of  the top level navigation is to show your users where they are within your site’s main structure.
We’ll come back to navigation in a lot more detail in Chapter 6, but for now, you need to ask yourself  how you’ll style the menu on the Red Lantern site.
Time to start thinking about which menu type would suit the site and where it would fit on the page.
Show Jane some basic design sketches So you’ve got the main content mapped out.
What will you need to do next? At this stage, it’s a good idea to show Jane some basic design sketches...
Having a clear idea of where you want to put the building blocks on screen saves valuable development time.
Hold it right there! IA diagrams, sketching designs on paper...
What’s with all the drawing? I thought this was a book on WEB design.
Sketches keep the focus on functionality Your first sketches should be black and white and drawn on paper.
Your designs should show Jane some basic layouts with the content she’s requested in various configurations on the page.
The sketches should make Jane ask herself  questions like: “Do I want a large image at the top of  the page?”, “How many columns do I want?”, “Where should the menu go?”, and so on.
She didn’t like it because it looks almost exactly like the existing design, but with the main content section broken into two columns.
Now it’s up to you to come up with a basic design Jane does like.
Draw at least three more concepts on your own sheets of paper.
This design is too similar to the existing site design for Jane...
Use the sketches to get your ideas down on paper.
Basic black and white sketches keep the focus on the main layout.
It’s time to show the basic layout concepts to Jane.
Design #3 has a plain textual menu in place of the tabs, and it’s switched the position of the portfolio and content sections.
Under the logo and menu, there’s space in the two-column design for a picture and the news section beneath that, while on the right are small thumbnail.
It leads with the main picture top left and the logo to the right.
Great, you’ve agreed on a basic design, what will you do next?
But, uh, can you show me some more detail? We need the site to be ready for the conference.
We’re going to stick to pen and paper for now.
What do you think about adding some color to those sketches?
Jim: Why would I do that? Can’t I just get going with the code and test different colors using CSS stylesheets?
Frank: Well, this way, you get a chance to see how colors interact with one another, how interface and layout elements play off  one another once they’re in color, how your navigation system looks in relation to the rest of  the layout, and generally whether content’s represented in the best way possible.
That sounds like a tall order for one little sketch.
Couldn’t we just have shown Jane a few color versions instead of going with the black and white sketches?
Frank: Clients can get distracted by color too early in the process.
It’s best to show them something that gives them an idea of  the functionality of  the siteJoe:—before we start on the look and feel part of  the design process.
The sketches provide us with a painless way to catch any potential design problems before we start coding our design, and they become major obstacles.
We’re going to do a ton, all in different colors, and show them all to Jane like we did with the first sketches, right?
What we’re actually doing is creating storyboards to test a few variations.
Frank: Yeah, these are like the storyboards—you know, that sequence of  little sketches that look like a comic strip—the film industry uses to test out shots before rolling the cameras.
Here, let me show you a neat trick for creating good storyboards.
So we’ve agreed on a basic layout with Jane, but what should our next step be? Firing up the ol’ text editor, grabbing some sample content from Jane, and working up an XHTML storm?
Here’s the space for the top level navigation, and we’ve left a space underneath the main image for important announcements or news items.
No need to add headings or body text at this stage.
Lines and blocks are fine as you’re looking at the overall design, not the detail, here.
A little bit of color in the storyboard helps to establish the personality of the site.
Yo, Design Program, can you clear something up for me?
Some people have started calling me “wireframe,” but I thought that was a term that’s used to describe code mockups...
It can be confusing, as people also use the term.
It saves a ton of  time as you can copy details right out of  the storyboards into the final design if  they work.
I guess you might have kind of  a point there, but are you really going to show your messy, smudged, coffee-stained, self  to the client, Pencil?
You might think you’re saving time by diving right into HTML, but it could end up costing you in the long run.
See, if your client (or you) doesn’t like the design you came up with and wants to go in a completely different direction, you’ve just invested tons of  time in to HTML (and probably CSS) that you’re not going to use.
It’s a lot easier to file a storyboard away and start with a fresh sheet of  paper.
I prefer not to get all hung up on detail.
The whole point of  storyboards is that they’re a quick and flexible way to brainstorm ideas and get some designs down.
Besides, why waste a ton of  time slaving over every pixel’s placement in several designs when the client’s only going to pick one?
I guess if  you’re preparing a pitch for a potential client, it might be a good idea to come up with something more polished and formal.
But I still think detailed hand-drawn storyboards should be your first stop when you start to design a new site.
Now it’s time to prototype the site in code Building a prototype in code has some great advantages.
First, even though your design might look great on paper, it might not work (technically speaking) when you code it up.
The prototype will give you an opportunity to quickly fix anything (code-wise) before you invest too much time in building a polished finished product.
Also, if  you’re working with clients, a code prototype gives you something to show them, and just like your storyboards, you can get useful feedback and make iterative changes.
Iteration is a design methodology that lets you test, analyze, and refine prototypes of  work in progress.
Go ahead and grab the files for the first code prototype from:
Repeat yourself Remember, you need HTML for every page in your IA diagram.
Once you've downloaded it, duplicate the code and name the files accordingly.
Once you’ve tested the site, show it to Jane to get some fast feedback on this iteration.
When your time’s up, write down what this text is about.
People are more conscious o f design than ever before.
People are not only mor e conscious of design, they a.
We specialize in: interface desig n - designing and building web i.
Don’t ruin a good design with bad copy All the awesome design work, storyboarding, and prototyping in the world is not going to save your site if  you don’t have any content (or if  the way you present your content stinks)
Writing for the web is different than writing for regular print.
Instead of reading your content from left to right, beginning to end, like a book, users scan the text for keywords and concepts—to give them an idea about the contents of the page.
When you combine this with the fact that users generally don’t spend that much time on individual pages, you know you are going to have to write differently.
There’s no reason to re-write some text, especially for a website...
What makes text scannable? There are several techniques you can use to make your text scannable.
Short paragraphs, headings, bullet points, and clear meaning will all help users scan your content more easily.
A brief introductory section provides an overview of the text.
That way, the reader knows what they are getting into right off the bat.
Short paragraphs are easier to read than huge blocks of text (which are harder to read and comprehend on a computer screen)
Bullet points are a super-fast way to give facts to your users.
Clearly written headers give the reader information about the whole article and its subsections.
Emphasis (bold and italic text) highlights important terms for the user.
You don’t have to use them all, just the ones that work for your content.
Use bold and italics to emphasize important words or phrases.
Use bold and italics to emphasize important words or phrases.
Your text might look a little different, but as long as you’ve used the techniques to make the text more scannable, your users will thank you.
But this version is short, to the point, and a lot more compelling.
It tells users exactly what Red Lantern does, and what they can expect from working together.
We edited out a ton of content—long words, sentences that you had to read three times to understand, and so on—that would have clouded this simple message.
Besides, worst case, we can compromise with Jane and put back in some of  her text...
Welcome to the New Red Lantern Design Red Lantern is a small web design and consulting firm specializing in standards-based web design and development.
Our goal is to build simple, beautiful webpages that make your information easy to find and your users happy.
If you or your company are interested in working with us, please check out our portfolio of design and branding work and contact us with your project details.
We look forward to hearing from you and making your presence on the web a little simpler and easier to find.
Note, you won’t need one at the top of the page, as the logo will serve as a header for the page.
These links will be a short unordered list with the bullet points removed by our CSS.
Won’t Jane be mad at you for cutting out all her carefully crafted words?
Once you’ve edited your text so that it’s more scannable, all you need to do is update the text in the code markup that you’ve already developed for Red Lantern, test it in your browser, and if you’re happy with it, show it to Jane.
Your skills are going to help put Red Lantern on the map! I can’t wait to start some new projects.
Web design is all about communication, and your USERS So how do the two versions of  Jane’s site compare? Every site’s ultimate aim is to communicate something to its users.
If  your website doesn’t communicate what you want it to, your audience will go to another site looking for the experience or content that you couldn’t give them.
When you build a website, you’re building it for your users, not for you.
You want to use every technique possible to bring users to your site, help them find what they’re looking for, make sure they have a rewarding experience, and keep them coming back.
Layout uses HTML and CSS to build the site’s interface (which you already came up with on paper back in the preproduction phase)
Writing “fills” the design up with the scannable content that your visitors come to the site for.
The old design didn’t communicate much at all to users...
The new site had users at the center of the design process from the get go.
As a result, it grabs the user’s interest and tells them a compelling story.
When you design sites, you should practice user-centered design—creating sites that focus on meeting the needs of your users.
Information Architecture is the process by which your website’s content is broken into chunks and then organized hierarchically in relation to one another.
Top level navigation usually links to those sections in your information architecture one tier below your home/main page.
Storyboards are used to visualize your design and test basic layout concepts before you jump into code.
Writing for the web is different than writing for print.
Paper covers rock Wow, you really can erase things when you use a pencil instead of a text editor.
Tired of  butting heads with a picky client? Yeah, you know the type...
In this chapter, you'll learn how to work smart before.
Coming up with a theme and visual metaphor for your.
After college, he took a year off  to backpack around Japan and experience everything the island nation had to offer–from sushi to samurai.
Now that he’s back, he wants to document his experience.
It's up to you to build Mark a great, engaging website detailing his trip to Japan.
Mark’s got a ton of  content, and all we know is he wants a great site.
How in the world can we make sure we build Mark something he’ll love, without wasting a ton of  time?
Think before you code Pre-production is all about getting things right before you dive into writing XHTML and CSS.
Its all about getting your site’s design right on paper.
That way, when you get to the point where you go to code, you know exactly what you are building.
For Mark's site, we can get our ideas down, before we spend a ton of  time fitting text and pictures into a layout scheme Mark might totally hate.
Pre-production is also about letting your user approve what you're doing—on the front-end, when you can still make changes easily.
There's nothing worse than investing days or even weeks into a design and then finding out the client hated it.
Jobs on the Wall just needs to be a simple job posting site.
One main column is all you need, maybe with some helper information in the sidebar.
The finished site reinforces the “job posting board” metaphor complete with cork board texture and Post-It note navigation.
One sure way to get your site looking right is to figure out what the site is about.
In other words, what is the site's theme, and how can you express that visually? A visual metaphor takes advantage of  familiar visual elements (likes images, interface elements, icons, colors, or fonts) and reinforce the site’s theme.
The postings could be made to look like an actual bulletin board using a good visual metaphor:
Visually, you’d want to use bright and bold primary colors with cartoony interface elements and fonts.
These design elements reinforce the subject matter of  the site: kid oriented, fun, etc.
The look of  the site actually tells you what the site’s about.
A visual metaphor can range from subtle (using colors that give the user an abstract feeling that the designer wants to associate with the site’s theme) to direct (using graphics that tie right into the site’s name or identity–like using graphics of  rocket ships for a site called Rocket Ship Designs)
Visual metaphors, themes, what's the difference? And I thought you said I should be designing on paper, anyway?
Bright bold colors and an arctic theme help set the visual metaphor for this site.
Cartoon penguins and comic-book style typography are definitely geared toward a younger audience.
A theme represents your site’s content The word theme is used to refer to all kinds of  different things in the world of  web design-–which can be kind of  confusing.
In this case, a theme is your site’s purpose and content.
So, the theme of  amazon.com is an online merchant that focuses mostly on books.
Here are a few more good examples of  theme and visual metaphor working well together:
IconBuffet creates and sells icons for use in web design and other interface development.
Icons are featured throughout and a takeout container is used to reinforce the site’s name.
Silverback is an application for performing user testing on websites.
Because a Silverback is also a type of animal, the jungle and gorilla theme is used throughout.
IconBuffet’s visual metaphor is subtle–but the design reinforces the clean, simple icons they produce, and their logo is a great literal interpretation of the site’s name.
They make the page look like a gorilla’s surroundings, complete with jungle color scheme, leaves at the top of the page and an amazing logo/ icon of a gorilla with a clipboard.
Write down the site’s theme and circle (yes, draw in the book) some of the design elements that are used in the site’s visual metaphor.
Remember, a site’s theme is its content/purpose, while the visual metaphors are the design elements that are used to reinforce the theme.
Your job was to write down the site’s theme and circle some of the design elements that are used in the site’s visual metaphor.
What did you think the theme of each site was? Here's what we wrote down.
The logo and bite marks on the navigation tabs help reinforce the food theme throughout the page.
Its multi-column, newspaper-style layout and simple design reinforce the news theme.
Bite marks used throughout the page remind you that this is a site about food.
The colors are bright and “appetizing.” Green, orange, red, peach–colors you’d want to "eat."
A multi-column layout similar to that of a news paper.
Also, the columns are staggered, with some spanning the width of two, others just one.
Generous use of whitespace and a grid-based layout help reinforce the newspaper theme.
Do a quick brainstorm for Mark’s site and write down any design, content or visual element ideas you come up with.
Remember, write down everything–you can filter out bad ideas later.
Brainstorming: The path to a visual metaphor Let’s get back to Mark’s site...
Not only that, but we want to figure this out without thinking too much about how many columns his site will need, or what sort of  navigation Mark might like.
And remember one thing: don’t discredit any ideas or concepts you come up with.
The brainstorm list can include design ideas, content considerations, site sections and even color and imagery.
A visual metaphor uses common visual elements (colors, fonts, icons, etc) to help reinforce a site’s theme.
Develop a theme and visual metaphor for Mark Coming up with a theme and a visual metaphor can be tricky.
Once you know what content you have to work with and have a few brainstorming sessions under your belt, it's time to start thinking about the best way to convey and display that content to your client's users.
Color, layout, and element placement are all important factors when deciding the best way to reinforce a site’s theme.
So once you're clear on a theme, here's what you need to do:
The use of imagery, iconography, and text can help reinforce the site’s theme by making the site “look like the content.”
Pick colors that work well with the content and support the theme of the site.
Use services like http://kuler.adobe.com to build palettes and see how different colors will work together.
The more columns you have, the more space you have to fill.
Use your list of ideas to come up with display elements that help emphasize your site's main themes..
Here's where time with a paper and pencil can pay off big-time when you get ready to dig into XHTML and CSS.
It’s ok if you came up with something diffe rent.
Just make sure your ideas are in the right ballpark for a site on Japanese culture.
Let's emphasize the trip Mark took, and what Japan was really like.
This could also turn out to be a great resource for others planning a trip or traveling to Japan.
That's a place where we can use visuals a lot.
Simplicity is key, and Mark doesn't have tons of trips to record...
We really don’t have enough content to fill multiple sidebars.
Your page elements shape your visual metaphor Once you have a general site theme and have started to think about what you want on your site, you need to consider where all your client's content is going to go.
How you lay out your site affects your overall visual metaphor a lot...
For example, if  you only have a single column, it may be difficult to make your site “feel” like a newspaper or magazine.
But add a few more columns and you can make that page mimic the gridlike, multi-column layouts of  your typical daily paper.
This is where the meat of the page goes and is what visitors come to find.
Used to separate elements and draw the eye to key parts of the page.
Sub Navigation displays content that lies under a main navigational item.
This is usually only needed for larger sites and more complex content.
This is where you put the stuff people are coming to see.
Whether it’s images, a blog post, or a YouTube movie, all that stuff goes in the body.
Navigation is essential for users to get around your site.
Whitespace (which is also called negative space) is the area between all the different design elements on your page.
Whitespace helps to break up blocks of content, gives the user’s eye a little rest, and.
The footer portion of your layout can hold anything from.
Users will often look to this section for links or content that can’t be located anywhere else on.
Sidebars can hold everything from link lists to extra body content.
They can also be useful for ancillary navigation and archive links for blogs.
Q: Do I need to use all of these elements for every site? A: Nope, these are just examples of the general page elements you might end up using.
In all cases, your client's content (and their theme) will determine what page elements you end up using in your final layout.
In fact, if you try to use all of these page elements on every site, you're going to end up with a design that doesn’t make any sense to you (or to your users)
Q: Does every site need a theme and visual metaphor? A: Yes and no.
Not every site needs a gorilla-themed metaphor or a snazzy newspaper layout to reinforce its content.
But in most circumstances, your site is going to have some sort of theme, even if it is only expressed through the content and writing on the site.
Remember, content is a design element and can be used just like whitespace and sidebars.
Q: What if I don’t start with any content? Or I want to just start a blog or something really simple?
If you’re starting a blog, what kind of topics are you going to write about? If it’s more of a journal, well then there’s your theme.
All websites have a theme, even if it’s just about you.
To finalize the visual metaphor for Mark’s site, we need to look at some different color and layout combinations and see how they will work with our content.
Check out the following layout and color mockups and write down your thoughts on how well each of them represent Mark’s content.
Remember to think about the themes and visual elements you identified in the previous exercise.
Here are a few pictures and items Mark brought back from Japan.
To finalize the visual metaphor for Mark’s site, we need to look at some different color and layout combinations and see how they will work with our content.
Check out the following layout and color mockups and write down your thoughts on how well each of them represent Mark’s content.
Remember to think about the themes and visual elements you identified in the previous exercise.
Although single-column sites are simple, this isn’t enough space to highlight all the content that Mark has brought back from his trip.
The two-column layout should give us enough room, but this color pattern still isn’t working.
These colors don’t really seem to fit the theme of a Japanese travel site.
The earth tones are nice, but a little dark for the theme.
Japan is an island, so shouldn’t we see some blue in there?
The other colors are more neutral and will allow us to be creative when placing visual elements.
Not only is this an interesting look, it will allow him to present lots of information to his users.
This layout/color combination gives us all the room we need to display Mark’s content.
It uses a simple color palette that emphasizes blue; it's perfect since Japan is an island nation.
A large map of Japan would look really good in the header.
When a visitor comes to the site, there would be no doubt as to the theme and content of the page.
Build a quick XHTML mock-up for Mark Just because you're focusing on pencil and paper doesn't mean you have to abandon XHTML altogether.
Now that we've got some well-thought out ideas, let's build a very simple mockup of  Mark's site in XHTML with some simple CSS to add color and formatting.
Fire up your favorite text or HTML editor and create a new file: XHTML Strict DOCTYPE.
Link to the CSS file (it just needs to be in the same folder as this file)
Both column <div>s and the sidebar use the “float: left” declaration to create a three-column look.
We'll need screen.css, too, a simple CSS stylesheet for displaying Mark's site:
I don’t know if I like the whole three-column layout thing.
You know: header, footer, one sidebar, that sort of thing.
I really can’t tell what you guys are going for here...
The end result when you join the XHTML and CSS from the previous two pages.
Still bare-bones and basic, but it will give Mark a good idea of where we are headed.
What!? Are you kidding? I thought the whole point of all this pre-production stuff was to get the client something he'd.
Joe: Can't we reuse some of  the work we've already done?
Jim: What, built another XHTML page using our theme? Then we'll be right back where we started...
And I don't even think our visual metaphor has to be totally scrapped, right? We just need to show Mark some different variations.
Joe: What about Photoshop? We could build the sites there and show him PDF versions of  the designs.
If  he likes them, we already have a leg up on the visuals and imagery needed for the final sites.
Jim: By the time we finish a handful of  comps in Photoshop, we could have done them in XHTML and CSS, too.
Frank: What if  we just draw some ideas out on paper? We can sketch our site ideas, add a little color, and send them to Mark to get his approval.
If  he doesn’t like them, we can draw some more.
So we can reuse our theme, but deliver two or three different designs on paper and give Mark some nice choices.
Jim: The drawings don’t have to be really detailed, either, right? They just have to give Mark an idea of  what his finished site is going to look like.
Ok, it’s clear that Mark isn’t really happy with our design, and we have to come up with something different.
So now we have to throw everything away and start over.
Use storyboards to develop ideas and save time without code One of  the most important things in pre-production is the storyboard (sometimes called concept art)
Storyboards are used to visualize your design in its entirety.
They give you a chance to see how colors interact with one another, how interface elements play off  one another, how your navigational system looks, how your visual metaphor plays out, and whether content is represented in the best way possible...
Marking them up is one of the advantages of testing designs on paper.
A basic hand-drawn storyboard can turn into a pretty detailed website.
Try creating your storyboards in a photocopy of an empty browser window.
This is a great way to give your client a "web" context for your ideas.
Don’t design for yourself! Remember, when you're designing for a client, it isn’t about you—it's about the client's needs.
And taking the client’s needs into account obviously starts as early as storyboarding.
Getting your client (that's Mark, remember?) involved in your design process could be as simple as sitting down for a meeting, having them fill out a design survey, or sending them early storyboard designs throughout the pre-production process.
Not only will this allow you to build designs that your clients really like, they will be appreciate being involved in the process.
We came up with things that we liked about Mark's content, but maybe we should have asked Mark what he wanted out of  his website...
Okay, even if we used storyboards, Mark still wouldn't have liked our design.
The geography is so cool, and I think it needs to be on the site somewhere.
I think one would look good as the main header image.
I’d really like a simple, two-column layout, like a lot of these blogs.
What did we do wrong? Based on Mark's thoughts above, how would you change the ideas we came up with on page 54? What would you keep the same?
Let's create a storyboard for Mark Let's build Mark a different version of  his site, on paper.
We know a lot more about what he wants, this time, too...
You might even want to use a piece of  graph paper, which has the grid built right in.
A nice grid provides a way to line up elements when you are creating your storyboard.
Grids also provide a foundation that allow you to lay out your site so that things line up, appear ordered and well-organized, and make sense to users' eyes.
You can use a printed blank browser to see how the site would look with window chrome.
Sketch out your design Here’s where you get let out your inner design geek.
Layout your site, and sketch logos, images, and anything else that comes to mind.
All of  the site’s text can be replaced by lines or a box with the words “text appears here.” The point of  the storyboard is not to see the actual content–it's to play with and finalize the layout.
Focus on the major elements, not slogans or text links.
Just give your client a basic idea of their site.
Add color and finalize your storyboard It's pretty important that you add color to your storyboards—color changes everything.
So break out your pencil crayons and add color to your storyboard.
Even though your favorite shade of  crayola blue might not be web safe, your colors should be close enough to see how they play off  of  one another when your idea goes digital.
When you are finished with the colors, fill in any missing detailsand Voila! One supremely awesome storyboard!
Here is what the storyboard looks like with browser chrome.
Make sure that each meets his needs, but are different enough to give him a choice.
This is the point in the process where you need to show the client your work.
Give them two, maybe three, options and tell them to give you as much feedback as possible (even drawing on them if need be)
This is great! I like the simple layout, and the map of Japan in the header is perfect.
We put this storyboard in a browser, so Mark could get an idea of how the finished site would look on screen.
Here's another design we did, but Mark didn't like this one.
Still, it only took about an hour to put together two full-color storyboards.
Q: Can I use Photoshop or another image editing program to do my storyboards?
A: You can create your storyboards any way you want.
The whole idea is to mockup design ideas as quickly as possible, though.
Photoshop will inevitably give you more control and detail, but might take you longer.
However, having digital versions of your designs, whether you create them in a program or scan your sketches into the computer, will allow you to quickly email ideas to your client for review.
In the end, do what you’re most comfortable and efficient with.
A: Text (content) really isn't that important during the storyboarding stage.
Your main focus should be on large layout elements and possibly color schemes.
Your text will come later, after you design your navigation and information architecture.
For now, just put dummy text–sometimes called Lorem Ipsum text–or thick lines that represent text.
A: If you're hand-drawing your boards, colored pencils work the best.
They are cleaner and more detailed than markers and won’t bleed through your paper.
If Photoshop is more your style, then the sky is the limit.
Either way, the point is to keep things simple, and represent how the site will look when it's online.
We'll talk a lot more about color in Chapter 5, so don't get too hung up on color right now.
Just do your best, and see what your client responds to.
When you pre-produce a site, you are able to try out design ideas on paper–thereby avoiding potential mistakes in coding which could cost time, effort, and possibly money.
Storyboards are hand drawn concept art storyboards that are used to visualize your design as a complete entity.
A little shaky on your site navigation? When it comes to the Web, users are impatient.
That’s why you’ve got to spend a lot of time getting your site’s.
By the time you’re done, you’ll have a site that.
Ted, honey, you don’t have any idea how to get to Margie’s loft, do you? Look, how hard can it.
Mark really likes the simplicity of this storyboard we built for him in the last chapter.
Fit your content into your layout On his voyages throughout Japan, Mark collected a lot of  material.
The big question is, how should all of  this content be organized into his new design?
How do these bits of content fit into the desig.
Organize your site’s information A website is all about communicating information.
No matter how good your design is or how cutting edge your layout is, if  your site doesn’t speak to your audience, it won’t be nearly as successful as a site that says something, and says that something clearly.
A huge part of  how well your website communicates its content has to do with how its information is organized.
If  a site’s content isn’t organized well, all sorts of  bad things can happen–like confused users leaving your site for someone else’s.
Organizing your site’s information well (and logically) is the difference between good and bad navigationwhich means the difference between your users finding what they want quickly and easily and your users being really confused.
Let’s explore how the organization of a site’s information can impact navigation.
Take the chunks of content below and place each of them under the top level navigation category that you think they are best associated with over on the right.
Take these content chunks and place them under the categories you think each belongs with.
These are the categories that Mark thought of for his content.
So you needed to take the chunks of  content and associate them with the most appropriate top level navigation category.
This seems like a good place for Mark’s thoughts about his travels.
Media is usually pictures and videos, but “Menus” and “Currency” wouldn’t be out of place here.
This is more text content to help people out while they are traveling in Japan.
Just because the category sounds good, doesn’t mean users will understand it.
What can the user expect to find in “Memories”? Photos? Video? Shouldn’t those be under “Media”?
Thinking about what to name your main navigation categories is important and should not be a last-minute decision or an afterthought.
Confusing categories will make it difficult for your users to find the information they’re looking for and make your site look unorganized and haphazard.
Let’s take a closer look at Mark’s top level categories:
Go back to your solution on the previous page, and write in better, clearer category titles.
You may also need to move around the chunks of content to match your new categories.
Having clear top navigation categories is the key to making information easier to find on your site.
Let’s see how some new main categories makes our organization more logical.
Navigation headings should always be short, concise and reflect (as closely as possible) the content that a visitor will find when they click the link.
Q: How long is too long for a category name? A: In a perfect world you’d be able to find one word that describes all the content a user would find under a specific category.
A good rule of thumb is to keep your category names short (one to two words), free of jargon, and as close to describing the content as possible.
Q: But I know what the link means, isn’t that all that matters?
You aren’t building a site for yourself; you’re building a site for your users.
Your number one goal is to make information on your site accessible and easy to find by your users.
If visitors can’t find what they came for, it makes no difference if you can.
Q: How can I tell if a category is ambiguous? A: Sometimes spotting category ambiguity is as easy as asking yourself if a user or visitor would understand what your categories mean without any background on the content or topic of your site.
In some cases, it’s not that easy, and you really have to step back and think about your content as a whole.
If you have information on your site that loosely fits the theme or might be slightly extraneous, your category names will reflect that and won’t immediately click with the user.
This is why thinking hard about your content before you choose your categories is so critical.
Q: What if I have content that fits in two different categories?
A: Most likely, content fits into different categories because you haven’t done a good job defining those categories.
Content should only appear in one place on your site.
Come up with five or six good categories, each of which is different enough that there’s not a lot of overlap.
If you’re still having trouble, you may want to try a card sort.
Joe: The organization isn’t the best, but I think users will be able to find their way around.
The headings are still a little confusing, but they’re an improvement over the originals, and I don’t think they’ll get any better.
We shouldn’t be spending so much time on something as trivial as categorization for a travel site.
Joe: Well, what else can we do? We’ve already done one revision of  the categories—or navigation, I guess—and like I said, it’s not going to get much better.
Frank: I think we’re too far into things to really know what problems we might have.
Frank: What if  we don’t just start over? What if  we approach things in a completely different way?
Frank: Let’s build up an information architecture, not just a bunch of  categories.
You know, I’m not sure this new content organization works.
Keep your site organized with information architecture (IA) Information architecture is just a way to organize the content you already have into groups that are meaningful and logical both for you and for your users.
Sometimes thinking about navigation, or categories, gets you too far into how a site is going to look.
Information architecture is all about taking a step back and really looking at what sort of  content you’ve got...
The content chunks that fit under the category headings could end up as sub-navigation or could be content within a page.
Park Hyatt Tokyo Information, images and thoughts from this hotel.
IA–The card sorting way How exactly do you organize your site’s information? Well, there are lots of  ways.
Card sorting is a cheap and easy way to impose a structure on your site’s information.
It’s also a great way to see how other people (maybe even your potential users) organize your site’s information.
Card sorting also takes a step back from XHTML or even the Web in general and lets you think about organization, not just navigation.
A pen and a clear table surface (or the floor)2
This should reflect exactly what the chunk of content is about.
We like to use yellow index cards; however, your basic white, lined card will work fine too.
Use anything, actually-just make sure you can write on it.
Create a new card for each piece of content you (or your client) wants on their site.
You talk a lot about helping people organize their information, why have you been so successful?
Card Sort: Well, first of  all, I think the main reason I help so much is that I just get people to write down all their ideas–good and bad.
This way, nothing is left behind, and you don’t end up in a situation where you’re trying to squeeze content in at the last minute.
Second, having the ability to physically move the cards around helps you visualize different scenarios for your content.
Head First: Is moving things around really that important? Seems like it might be a little trivial.
It’s probably the most valuable attribute of  a card sort.
It takes no time at all to completely rethink your content and navigation.
Plus, you can have other people do the sort, too, and compare their arrangement to yours.
Head First: Wow, I never thought about that! Do you always have someone else do a sort?
It really helps to have a second opinion on things.
Usually, having someone else perform the card sort leads to a content layout that you never would have thought of  on your own.
If  I could, I’d like to go back to the cards.
What exactly do people put on your index cards? Is it just random ideas, or is there some type of  template you follow?
Card Sort: Well, I wouldn’t go as far as saying they’re just random ideas.
You need to think of  my index cards as content chunks–bits of  information you want on your site.
For example, if  someone was building a personal site, their cards might include things like: “jobs,” “hobbies,” “family pictures,” and “vacation.” The cards can also be more detailed with terms like: “soccer,” “Disney World photos,” and “Grandparents.”
Head First: So the cards can be specific or more general?
Card Sort: Yeah, because some may end up as category headings and some may end up as individual content chunks.
The main goal is to get every conceivable content idea out of  your head and onto the cards.
Card Sort: Not always, but they’re good to haveespecially if  you have lots of  cards.
You don’t want to run into a situation where you’re trying to remember what you meant when you wrote down a content chunk.
More of  the getting your ideas down on paper methodology.
Its now time to do a card sort based on Mark’s content.
On each of the cards, write down a single chunk of information and a (very) brief description.
After you’ve filled out a card, set it aside–we’ll come back to these cards in a bit.
Continue doing this until you’ve got all of the possible content from Mark’s site written down on the cards.
You may need more cards than we provided, so use your own index cards if you need to.
Mark took video with his flip camera and lots of pictures everywhere he went.
He brought back menus and took lots of notes about what he ate.
Mark bought a rail pass and traveled all over Japan.
Don’t forget to give a brief description so you know exactly what each content “chunk” is about.
For now, just get all your content down on the cards.
Travel Diary Mark’s notes about Japan while riding the bullet train to and from day trips.
Restaurant Menus A collection of menus Mark picked up from various eateries around the country.
This could become a blog or might be a good category heading.
This is a more specific card, but sushi was an important part of Mark’s trip.
Short clips of video Mark took with his digital camera.
We’ll be using these cards in the rest of the chapter, but you’re welcome to use your own, too.
Advice and insight about traveling to Japan.Since Mark really liked food, we came.
We could probably have a card for each major city.
A look at the bars and nightlife in and around Tokyo and Kyoto.
Pictures of people and friends that Mark met along the way.
Travel What it’s like to travel to and around Japan.
Sort your cards into related stacks Once you’ve finished filling out your cards, you need to sort them into groups.
The cards in each group should obviously be related–and their grouping should make sense to you.
Here’s a little hint: These groups will eventually become sections within Mark’s website.
Group the cards you made on the previous page into logical groups.
Don’t worry if you have leftover cards—we’ll deal with those in a bit.
The two cards should definitely be in the same stack.
Give your stacks names that are short and descriptive After you’ve created your groups, it’s time to give each group a name.
These descriptions may end up becoming part of  your main navigation, so keep them focused on the content, but broad enough to contain the content they describe.
Look at the stacks you made in the previous exercise and come up with short, descriptive titles for each stack.
You can use an existing card or make a new one for the description.
You can reference the picture later and still move your cards around into different arrangements.
Users would expect to find both photos and videos here.
Seems like we have quite a bit of food-related chunks.
This could make for an interesting section of the site.
In this exercise, you needed to organize your cards into logical “stacks” and then give each a name that best represents that content.
Restaurant Menus A collection of menus Mark picked up from various eateries around the country.
Pictures of people and friends that Mark met along the way.
Short clips of video Mark took with his digital camera.
This might be good for a blog or online diary.
A look at the bars and nightlife in and around Tokyo and Kyoto.
Travel Diary Mark’s notes about Japan while riding the bullet train to and from day trips.
Orphaned cards force you to ask yourself: “Is this content really necessary?”
In some cases, you’ll find that cards don’t fit anywhere–these are called orphaned cards.
You might be wondering whether you’ve done something wrong, but don’t worry.
These cards are usually a sign that you are doing something right!
You can have orphaned cards that didn’t fit into another pile; however, you think that the content is important enough to your site that you create a new group with your single orphaned card.
Then there are cards that don’t fit into another pile but are so different from the other cards that you couldn’t come up with a group if  you tried (let’s call these the really orphaned cards)
Including orphaned content that doesn’t fit into your site’s information architecture always results in confusion for your user.
What if, for example, the produce section at your local grocery store had a pile of  toasters, a large display of  beef  jerky, and an entire wall of deodorant? Shoppers would get amazingly confused.
We interact with the world around us based on the predictability of  things.
There is no reason whatsoever for deodorant (or toasters and beef  jerky) to go in the produce section.
The same holds true for the organization of  a website’s information.
If  random content appears in a section of  the site where we never assumed it would be, we’ll be confused–and our experience with the site will be negatively impacted.
So, what do you do with orphaned cards? You’ve got two choices.
First, you could change the content in such a way that it fits into another one of  your groups.
However, more often than not, that strategy just isn’t going to work.
The other alternative is simply to recognize the fact that the content doesn’t fit into your website and toss it out.
I’ve got a bunch of cards that don’t fit into my groups.
A look at the bars and nightlife in and around Tokyo and Kyoto.
Friends don’t let friends sort alone Up until now, you’ve done the card sort all by your lonesome.
But doing a card sort by yourself  is not the (only) way to do things.
Why? Well there’s one really good reason: You aren’t designing for yourself, you’re designing for your audience! And if  you aren’t designing for yourself, why would you do a card sort by yourself ?
Ideally, you want to run the exact same card sort with the exact same cards–but have someone else sort the cards.
If  for some reason you can’t find someone from your target audience, enlist someone else to help.
At the very least, they will give you a second opinion on your site’s information structure.
Give them a very basic introduction to Mark’s site (careful, don’t try to influence them to choose one particular information structure), and let them organize your cards.
Did they do the sort the same way you did? What different decisions did they make? Ask why! The ultimate goal is to come up with an information architecture for Mark’s site that will not only meet the needs of the site (and Mark), but those of the user as well.
Write at least three things you learned from your friend’s card sort below.
Get your camera out again! Now you should have two pictures of two totally different organizations of Mark’s content.
Hey, why are we doing the sorting anyway? I thought that the whole point of UserCentered Design is that you don’t design for yourself, you design for your user.
Let’s see how our friend sorted the cards for Marks site:
Our friend agrees that “Culture” and “Language” seem like a good fit together.
Our friend added “Bars and Nightlife” to the Food stack.
This makes sense and might make for a better overall category.
Which card sort is right? Getting a second opinion on your sorts is important and often results in organization that you may not have initially thought of.
But how do you know which one is better or which one deserves more weight? Well, it depends.
If  five of  your friends do the sort and all come up with similar results, you can bet that’s probably the best way to organize things.
Sometimes having two or three options and just tweaking your original sort is all you need.
Make sure that when you’re done, though, you feel good about the organization you’ve come up with.
Arrange your cards into a site hierarchy Once you’re happy with your card stacks and titles, you need to put some structure in place.
Just take a bunch of  your leftover 3x5 cards and write the group names that you came up with.
Spread those out on the table that you’ve been using.
Then, line up each “content” card below the appropriate “section” card.
Create a new card that can act as an overall title.
Now just arrange the cards in your stack underneath the title card.
Once you’ve gone through a few iterations of your sort and had a friend or two try it out, arrange your cards as an IA diagram and take another picture.
It should help you focus on the site’s overall theme.
After considering the sorts our friends did and rethinking our original card sort, we came up with a final sort layout like this:
We removed the descriptions so everything could fit on the page...
We kept the cities in their own column but changed the heading to “Travel Notes” to better represent the results of our card sort.
All of our friends put culture and language in the same category.
These are good chunks for a section about general information about Japan.
This is also a place where Mark can add extra content if he wants to.
An IA diagram not only shows the organization of  your site’s content, but it shows the hierarchical relationship between sections and subsections of  that content.
The good news is, because you already took the time and did a few card sorts, most of  your work is done!
So all the lines are just links, right? Like a site map?
When you make your final IA diagram, make sure you order your main headings by importance.
The most prominent items should appear higher up in your IA.
We split the media into two sections and placed the appropriate content under each.
Think of an IA diagram as the final draft of your card sort.
Categories are broken down more, and headings are organized by importance.
It looks a lot like our card sort, but there are a few differences.
If  you were to try to create a diagram that showed links between sections, you would end up with a useless, spaghetti-looking mess that wouldn’t give you any kind of  information whatsoever about this vital hierarchical relationship between the site’s content.
There are lots of flowcharting programs out there that can help you create a slick and professional looking IA diagram.
On the Windows side of things, Visio is a good choice (though on the expensive side)
On the Mac side of things, OmniGraffle is a great choice.
The index page would link to every main page on the site.
The blog may have links to travel notes and media.
Based on your card sort, build an IA diagram of Mark’s site.
Remember, you aren’t showing links between pages, you’re showing the hierarchical relationship between sections and subsections.
Add content chunks from your card sort–but be more detailed.
Don’t be afraid to add extra subcategories to better organize Mark’s content.
Don’t forget to add a title to your IA diagram.
Your job was to to build an IA diagram based on your card sorts.
The blog should be the first link on the site.
This is where most of the new content will show up and it even could become part of the index page.
We grouped “Tokyo” and “Hiroshima” under cities, and put them all under.
Splitting video and photos will bring more organization to the media section.
Q: Is all this work really needed just to come up with some navigation categories?
A: Well, it is if you want to do it properly.
Some sort of thought needs to go into the design of your content and navigation.
Hastily designed IA can have a disastrous effect on the success of a website.
Even if you do shortened, “quickie” versions of card sorting and IA diagramming, your outcome is likely to be better than if you did nothing at all.
Q: What if I just want to skip right to the IA and not do a card sort?
A: That’s better than nothing, but you will really have no way of sifting through and auditing your content.
The reason a card sort is so important is that is helps you get rid of content that is irrelevant and makes you think about how all those content chunks relate to each other.
Q: If IA diagrams don’t show link relationships, what does? A: Most of the time, a site map is the best way to show what links are available on a site.
The problem with this is that a site map can’t really be made until the site is finished.
During pre-production, your focus should be on organizing content and not building links.
That work will come when you start to build out pages.
Q: Do all websites go through this same process? A: Actually, most probably don’t–and that’s why so many sites on the Internet are so difficult to use.
In so many cases, IA and content organization are a design afterthought, leading to unusable websites and content that’s difficult to find.
Skipping pre-production will only lead to frustrated users and dwindling hits.
Q: How does a site’s theme relate to information architecture?
The content of your site is what drives the overall theme, and the organization of that content is important.
If the IA is bad or focus is put on the wrong content, it will not only confuse users, but your theme won’t come across either.
Move from pre-production to production Coming up with an IA diagram and doing all those card sorts may have seemed like a lot of work for a simple navigation.
Mark will love you, though, especially when his users are easily navigating his site and finding all his content without any problems.
And now we’ve got a well-organized IA, a storyboard Mark likes, and a clear idea where we want to take the site.
This folder will hold all the files for Mark’s site.
This folder will hold all the images needed to make our layout work.
This is the directory structure we will use throughout the book.
This is the default HTML file for most web servers.
Right now we only have one, but that could change if Mark wants to add support for printing and mobile devices.
The “wrap” <div> is the container for all our content and will also allow us to center the page in the browser window.
The navigation is just an unordered list using the headers we came up with in pre-production.
For right now, just use dummy text to fill in the content and sidebar <div>’s.
We use another unordered list in the sidebar to help organize our content.
A footer gives us a place for more links and copyright information.
The end result is a nice gradient effect.You can declare multiple elements in a rule that share common attributes.
The background on the header is placed using CSS by moving the text over and setting the red dot as its background image.
Don’t worry, all this code can be downloaded from the Head First site.
We’ve provided all the images, too, so that your design looks as good as it does on the page.
You can also see Mark’s site online to compare your version with:
Our navigation is just an unordered list that is displayed in an inline fashion instead of a block style.
On links, you must set the color on the elements itself.
Links won’t take the color from their parent <div>’s or elements.
Make sure you clear the footer so that it displays below both the content and sidebar <div>’s.
This is amazing! I can’t wait to get my content up and watch the traffic start rolling in! Thanks guys!
The site looks great and has a sensible IA that won’t cause problems down the road.
The site looks a lot like the storyboards Mark approved, so we’re good to go on layout and basic color scheme, too.
Gather all the your content.1  Brainstorm a theme and visual metaphor ideas.
Do a few card sorts and create an IA diagram.
Park Hyatt Tokyo Information, images and thoughts from this hotel.
The point of a website is to communicate information–if that information is organized badly, your users will leave and not come back.
Card sorting is a cheap and easy technique used to impose an information structure on a site’s content.
You’ve got Chapter 3 under your belt, and now you’ve added.
Next up? We’ll dive into designing a site for your audience...
We’ve been talking about user-centered design for a few chapters, but here’s where you.
Find out how a few easy presses of the calculator, a ruler, and some.
Since I started listening to Sue, and giving her two-thirds of my attention, the results have been unbelievable! I get so much more attention and knowledgeable.
Design is about audience The design and layout of  your site is the lens though which your users view and experience your content.
If  you have a confusing layout, your users are going to have a bad experience.
However, if  you develop a design and layout that is both functional and aesthetically pleasing, your users are not only going to hang around your site longer, but they’ll want to come back.
The first step on the road to putting together a design which appeals to your users is to actually know your users.
It’s a lot harder to come up with a design that meets their needs if  you don’t know who they are (and what makes them tick)
Who’s your site’s audience? Take a look at these two sites, and write down who you think the specific audience of each site is.
Hop online to see these sites, and judge their audiences for yourself.
Let’s take a look at the possible audiences for these sites.
High-end food photography turns meals into models and shows the site’s passion for all things food.
In-depth food writing makes Delicious Days more than just a site to find recipes.
Walmart uses a very generic, centered, two-column design that seems to try and appeal to a wide audience.
The sidebar has links to all the products offered on the site–not favoring any particular group of items.
They not only want to bring their site up to date, but they want something that really meets the needs of  their customers.
The kicker is that they are also one of  the sponsors of  an upcoming progressive music festival, and they would look really silly if  they were still using their old site by the time the festival starts.
You’ve got to redo RPM, make it look great, and ensure current users can get around easily.
We’re really in a jam here! We need this site fast, and it has to.
How would you design a site that looks great and meets the needs of existing RPM customers?
When you’re designing for a specific audience, you’ve got to know what they like, and how they’d use a site.
But you can hardly deal with hundreds—maybe thousands, even millions—of  users all at once!
A persona is a single user that stands in for all of  your audience—a fictional user that has the most prominent characteristics of  all your intended users.
Those characteristics should relate to things that impact their web experience and browsing habits, like the browser your audience favors, or how long your audience spends online each week.
Her laptop (which is a little old, but all she can really afford right now) is her primary computer–and where she does all of her web browsing.
This attaches a face to a story and helps to reinforce the individuality of the user.
Give your persona a name - this helps to identify with them (as well as reference them)
The most important part of a persona is the details.
The specific details of the persona help us understand how each user interacts with a specific website.
So where exactly does all of  the data used to build personas come from? Well, it can come from a lot of  different places.
Technical stuff (like operating system and browser) can come from server statistics.
Information about how your users behave online can come straight from the users themselves—using tools like surveys and focus groups.
The point is that when you build a persona, you are not pulling characteristics out of  thin air.
Let’s look at some data about the RPM users that we can use to build accurate personas for the new RPM site.
The RPM owner had some old surveys he’s given us to work with:
Music Preference will tell us what our audience likes to listen to and help us decide on a theme and look and feel for the site, since it’s so music-dependant.
Age and gender give you the foundation on which to build the rest of your personas.
All other data regarding the technology and browsing habits of RPM’s users can help us create a more rounded and accurate persona.
These stats are from an old customer survey, and the logs from the RPM site web server.
This is what you call web design? Making up people out of thin air, and figuring out their hobbies? Come on!
Based on the RPM user data, create two different personas for the RPM Music Store redesign.
For the first persona, take the top value for each of the categories.
Paste in a Creative Commons photo, one you might have laying around, or anything you can find that seems to fit your persona.
Make up some fictional details about your persona (including occupation) - this helps give the persona a more realistic feel.
Q: So do I always have to build 2 personas? A: You don’t have to, but it’s a good idea.
You aren’t always designing for one specific type of person.
The second persona represents those audience members who are in the minority...
If your audience is diverse enough (as shown by your audience research), it might be a good idea to have personas that represent other audience characteristics.
Be aware, however, that you really don’t need more than three.
Too many personas just add confusion and detract from the project at hand.
Building two personas widens the audience you can build your site for.
When you are building a persona, you’re creating a representation of  the primary characteristics of  your audience.
But most of the time, your audience isn’t composed of  just one type of person.
You’ll have lots of  users who do not fall in line with the characteristics that you identified for your first (primary) persona.
A secondary persona represents the characteristics that are next in line behind the majority characteristics that you used to build your primary persona.
So you design first for your primary persona, but then you can also work on meeting the needs of  your secondary persona, too.
The result? A site that meets more of your audience’s needs and makes more of  them happy.
Two personas means we can deal with more common traits of our audience, right? So we end up with more satisfied users.
Based on RPM user data, here are two personas (a primary one and a seconday one) we can use for the design and implementation of the RPM Music site.
He uses the family computer to read news and a few architectural blogs online.
Occasionally, he buys books and music from Amazon when he can’t make it out to the store.
Males represent the primary RPM users - by quite a large margin.
Jon falls into the largest age group of the RPM users (18-24)
Because Jon has a busy career, he has little time for Internet leisure.
Jon is the “primary” persona for the RPM Music site and represents a typical user of the site.
He will be the main focus throughout the design and development of the site.
Just make sure your details line up with the stats for the persona.
She is very tech-savvy and likes to shop and buy music online for her MP3 player.
Her PC is a laptop so she can easily take notes in class and study outside her apartment.
Susan connects to the Internet using a Cable line from her apartment.
According to the server logs, this is the second most common way RPM users connect to the site.
Susan is the “secondary” persona for the RPM Music site and represents the second most common user of the site.
She won’t be the main focus throughout the design, but she’s still important.
So now you’ve got your two personas, and it’s time to ask: “What would Jon do?” “How would Susan react?” Instead of  designing for hundreds or thousands of  faceless users, you’re now designing for your personas...
So let’s look at the old RPM site once more, in light of  Jon and Susan.
RPM’s site is old and doesn’t adhere to alot of the standards of today’s e-commerce sites.
Susan doesn’t have time to learn how to use an outdated system.
Jon doesn’t use the old RPM site because it doesn’t render properly in his browser.
The site seems to be “bigger” than what will fit on his screen.
You know, I’ve been getting a lot of complaints about things looking “weird” or.
Jon uses an 800x600 screen resolution, which isn’t very big...
With a lower resolution like 800x600, parts of  the RPM site aren’t showing up, and Jon’s having to scroll all over the place just to see everything.
It sounds like RPM’s old site was designed without much regard for screen real estate...
Is it better to design a site that looks perfect on one specific resolution—the most common one used by your audience—or a resolution that looks pretty good on lots of resolutions, but not quite perfect on any?
Resolution impacts design and layout Screen resolution affects the screen real estate your site has to work with.
Let’s look at the old RPM site in several different resolutions:
At 1280x800 (a pretty high resolution that’s not particularly common), everything appears smaller.
In this resolution, the entire site layout is visible along with a ton of whitespace (or background) on the right side.
However, the elements still appear pretty large, and the whitespace on the right isn’t quite so prominent.
At a resolution of 640x480, the layout is absolutely huge - and the screen real estate simply can’t contain it.
Only the smallest portion of the layout is actually visible in the browser window.
If you wanted to see the rest of the page, you would have to do a whole lot of scrolling.
The first thing you’ll notice with the site at 800x600 is that everything appears larger.
The layout is actually bigger than the available space in the browser window.
There are scrollbars everywhere, and all the whitespace and background that appeared at higher resolutions on the right side are completely gone.
Screen real estate determines how MUCH of your site will display in your user’s browser.
Think about screen real estate as the size of  the canvas upon which you will build your website.
A higher resolution means that things appear smaller—and you’ll have more virtual space for your site to work with.
A lower resolution means that things on our site appear bigger, so you’ve got less virtual space to work with.
I love coming in and picking up some vinyl, but online...
It’s up to you, the web designer, to make sure a site looks right for your audience.
You can’t count on users changing their resolution or the device they use your site on...
Take a look at each one and write down a pro and a con of each.
Use JavaScript in your page to automatically detect a user’s current screen resolution, and direct them to a version of  the RPM site that works best with that resolution.
Use JavaScript to load a CSS stylesheet appropriate for each user’s screen resolution.
Design a single version of  RPM that works fairly well with a wide variety of  devices and screen resolutions.
Your goal was to write one pro and one con for each of the different methods for managing screen resolutions.
Use JavaScript in your page to automatically detect the user’s current screen resolution, and direct them to a site that works best with that resolution.
Use JavaScript to load a CSS stylesheet appropriate for your visitor’s screen resolution.
Design a single version of  RPM that works fairly well with a wide variety of  devices and screen resolutions.
Pros: Ability to handle a wide variety of screen resolutions.
Pros: One site with multiple stylesheets is better than multiple sites.
Cons: You must decide on a “base” resolutions that you will design for.
This is a better strategy than a site for every device and screen resolution.
Granted, you’ve got to create multiple CSS files, but you only have to create one XHTML file - which means less markup to maintain and update.
Relying on JavaScript for a critical task like making sure your pages are displaying properly isn’t such a good idea.
If there’s a script problem, or Javascript is off, both these techniques become useless.
Not only will you write less code, but you also won’t be relying on JavaScript to handle resolutions.
All you need to do is identify the smallest resolution that will work for your users and design for that.
All larger resolutions will render the site properly, and smaller screens will generate scroll bars (but hopefully this is a tiny portion of your users)
I think I want to be forward thinking and shoot for 1024x768
Q: I understand screen real estate, but I’m having some trouble with screen resolution.
A: Screen resolution is measured in horizontal and vertical pixels.
So a small display may have a screen resolution of 640x480
It’s also important to note that it isn’t just computer displays that measure their resolution in pixels.
Q: Are there really that many screen sizes and screen resolutions that I need to think about when I’m designing my site?
A: Absolutely! Even when it comes to traditional desktop computers, you’ve got to be concerned with a wide variety of screen resolutions.
Ultimately, it all comes down to doing your research and knowing your target audienceand developing a persona that takes the important user characteristics into account.
If you know that your primary persona generally views websites at a lower resolution, you don’t have to worry too much about designing for higher screen resolutions and larger displays.
Q: Ok, I get the fact that I’ve got to worry about lots of different screen resolutions and display sizes.
But is there one screen resolution that is most widely used?
If you’ve done your research and you know your audience, you can probably decide upon a target screen resolution that you can design for.
Q: How will I know if my site works on a certain screen resolution?
Build your site, and then change the screen resolution on your display to test out your design.
If you are designing for a specific resolution, build the site from the ground up in that resolution.
This dummy text is just temporary so we can make sure our page is setup properly.
Zero out the padding and margins, set a background color and a font, and establish a line height for site text.
This value will also allow your site to adjust to different screen resolutions.
As you change the resolution, the text stays centered on the screen.
Since we know that, we can build a site that actually looks ideal on 1024x768...
That’s the power of personas: you’ll have a good idea of  how the decisions you make may affect your audience.
Which of the RPM site features have we addressed? Any of them? None of them? Check off any boxes you think we’ve handled (or at least worked on)
Then write down your ideas about how to take on the remaining features for RPM Music 2.0
I actually think we’ve got a good handle on his first requirement: “Reach all my current users.”
But our personasJim: Jon and Susan? Enough with the fictional characters already!
I really think if  we can please them, we’ll have reached RPM’s core audience.
Joe: How do you please a persona? I mean, how do you know if  you’ve designed for them?
Jim: Maybe you can send a fictional survey to their fictional address.
But we know they’re young, that they’ve got modern computers...
Joe: ...so you’re saying that if  we design something that’s pretty modern, then they’ll like it?
Jim: Okay, just for a moment, let’s say I buy into all this persona stuff.
What is modern? I mean, how do you make a site look clean and hip and all that stuff ? Isn’t it just aesthetics? Like it’s all in the mind of  the designer?
In fact, I was just reading about something pretty cool: the Golden Ratio.
Frank: No, the Golden Ratio is a cool way to make sure a site looks pleasing to the eye.
Humans like things lined up and well-organized What makes a beautiful site appealing to us? What makes an ugly site so unattractive? Well, most of  the time, it’s all about how our eyes perceive the elements on the site.
There is nothing worse than a print document or a web page in which graphics and text have been thrown in haphazardly.
Our eye needs predictability and a certain amount of visual logic when absorbing information.
Imagine if  you laid out a grid on top of  your favorite sites.
Do things line up along a grid? Are there strong horizontal and vertical spaces that allow you to group the page into sections? Take a look at a grid-based site...
Subtraction.com takes a gridbased approach to its home page design.
Notice the invisible lines that travel from the navigation down through the rest of the page.
Notice how the sidebar border falls in between two gridlines, and the LP covers don’t quite line up.
Notice how elements at the very top of the page...
No matter how you position a grid over RPM, nothing lines up!
How wide should my grid be? Use the Golden Ratio The grid is one of  the oldest graphic design tools out there.
Way back during the Renaissance, painters started using a grid based on the Golden Ratio in order to compose their paintings.
Golden Ratio? What the heck is that? Well, if  you take a length of  a line and multiply by .62, you get a ratio that can be used to create a pleasing, natural-looking grid—that’s the Golden Ratio!
The whole idea behind the Golden Ratio is to use a balance that we’ve all seen around us our whole lives, and put that balance into use on a website.
The result? Sites just “feel” and “look” right to our eyes.
Just take a look at a few examples of  the Golden Ratio in action:
The footer and header represent the full length of the block.
The main content section is the larger number in the ratio and accounts for about 2/3 of the page.
The nautilus shell is an example of the Golden Ratio showing up in nature.
Da Vinci’s Last Supper is a great example of art that utilizes the Golden Ratio.
The rule of thirds: A shortcut to the Golden Ratio The Golden Ratio says that if  you take the entire width of  something, and multiply it by 0.62, you’ll get a nice wide area that you can put content into.
The remaining 0.38 is great for sidebars, extra content, things that the eye should look at second.
But multiplying by 0.62 isn’t that handy unless you’re carrying around a pocket calculator (Head First Algebra, anyone?)
So if  you divide something into thirds, two of  those thirds are perfect for your main content, and the remaining 1/3 is great for sidebars, navigation, blogs...
Step 1: Take a piece of  paper, and draw a rectangle to represent your site.
Then divide your rectangle vertically by thirds (use a ruler, or just estimate carefully)
Step 3: Divide each of  your vertical columns into thirds.
Step 4: Lay out your site, aligning things with your gridlines.
This is the page we built on page 129 to get started with the new RPM site.
Once you add all the vertical lines, you have the making of a logical grid that can be used to lay out page elements.
You can repeat the 2/3-to-1/3 ratio within larger sections, as many “levels” deep as you like.
This widest block represents the entire width of your site.
The navigation isn’t that far off, so we can fix that width pretty easily.
Based on the grid below, sketch out a storyboard for the RPM Music site.
Try and keep up with how your elements are laying out, not only against the grid, but in relation to each other.
The page elements in this example feel balanced on the left and right side.
But is that the only way to draw attention to something? Not at all!
When you’re laying out your page, you’re creating a balance between larger elements and smaller ones.
The larger elements have more weight, and the smaller ones have less weight.
I think we have to do more than just make things the right proportion to each other.
When you are laying out your web page, you need to consider two kinds of  balance: symmetrical and asymmetrical.
Symmetrical balance occurs when elements on either side of  a line (either horizontal or vertical) have the same weight.
Asymmetrical balance occurs when the weight of  a site’s elements is not evenly distributed around a central line.
So you’ve got one really large element only partially offset by other, smaller elements.
Is your layout symmetrical or asymmetrical? Do you think balancing (or unbalancing) your layout is an improvement? Make any changes you want to, and then turn the page to see what we came up with.
In this exercise, you had to draw a storyboard for the RPM Music site based on the browser grid.
There’s no right answer, as long as you came up with a balanced layout that follows the Golden Ratio.
The header will span the entire top of the page, and the upper left will hold the logo.
The main column will have images of LP covers and descriptions that go along with them.
The sidebar will be a series of paragraphs and headings and will make up the right 1/3 of the page.
Within the main content, we used the Golden Ratio again to split up text descriptions and album covers.
Remember, you should be designing for your personas, who have some pretty specific concerns.
Browser issues aren’t really relevant yet, but screen resolution certainly is.
Remember your client? The RPM owner also had a lot of  requirements.
Did your vision of  RPM 2.0 meet what he’s looking for?
Feature records on the home page.Look over your RPM 2.0 ideas.
Can you check off each of these boxes based on your design?
If you need to make changes to your design, go ahead! That’s why we’re working with paper, anyway.
Blueprint allows you to build grid-based layouts in just about any conceivable configuration.
This will give us a layout that fits nicely within a 1024x768 resolution.
So we’re ready to dig into some XHTML, right? Can we use CSS to actually build a grid that we can align elements to?
There are CSS frameworks that provide grids for our content to “sit” against.
When you’re actually building your page in XHTML, it’s not always easy to line things up as well as you can with paper, pencil, and a ruler.
Fortunately, there are a lot of  cool CSS frameworks that will provide a grid for you.
One of  the best things about Blueprint is that it provides an enormous amount of  flexibility in terms of  the types of layouts you can create.
It also provides support for styling form elements and status messages—something you don’t see in a lot of  other frameworks.
Add grid.css to your page, and you’ll see this nice grid overlaying everything else on your page.
You can Google “CSS framework” or “CSS grid framework” to find several other options.
In the unzipped directory, you’ll find a /blueprint folder that has all the files you need.
You can drop the stylesheets in this folder right into the stylesheets folder of  the RPM 2.0 site you’re building:
Create an rpm folder for your RPM 2.0 site, if you haven’t already.
Go ahead and create any parts of this directory structure you don’t have.
Download Blueprint and add in its CSS files to your site structure.
Then, link in ie.css and screen.css in your version of index.html.
Use the examples that come with Blueprint as a model, especially for how ie.css is referenced.
Here’s the main index.html page, which is what we’ve been focusing on in this chapter.
Go ahead and create any parts of this directory structure you don’t have.
Download Blueprint and add in its CSS files to your site structure.
Then, link in ie.css and screen.css in your version of index.html.
Make sure you add the Blueprint CSS links above the rpm.css file.
This way, our CSS rules overwrite any Blueprint CSS rules.
Q: What exactly is a framework? A: These days “framework” is really just a buzzword in web design and development.
A framework is just a set of tools, libraries, conventions, and best practices that are designed to abstract day-to-day, routine web design tasks into generic modules that can be reused.
Q: I get that Blueprint is good, but are there other grid-based CSS frameworks?
Some of the most prominent are 960 and Yahoo UI (YUI) Grid CSS.
Unfortunately, it doesn’t provide as much built in support for typographic styling as Blueprint.
Like Blueprint and 960, it provides a fair amount of flexibility in terms of the types of layouts you can create.
Unfortunately, YUI Grids CSS is somewhat complicated, making its learning curve a little steep.
On the plus side, the YUI Grids CSS site has the YUI Grids Builder tool, a visual, menu-based editor which allows you to rapidly create (and customize) layouts based on the YUI Grids CSS framework.
Q: I’m still a little confused about which framework to choose.
A: As with a lot of things, the framework you choose is entirely dependent on your needs.
A good rule of thumb is to choose a framework that balances simplicity (especially if this is your first time using a framework) with flexibility, in terms of the number of different layouts you can build.
So whichever one you choose, make sure it works for you, and you don’t work for it!
Each major element of the site needs a class with an initial value of “column”
The second value (span-xx) tells the framework how many columns to span the element.
Blueprint requires you to wrap your content in a div classed as “container”
These two <div>s are placeholders for content we’ll add soon.
With Blueprint CSS rules available, now you can go to work on RPM 2.0’s XHTML.
Go ahead and make these additions to your copy of  RPM’s index.html:
The column class is from Blueprint and lets the browser know to use Blueprint CSS rules for positioning this div.
This classic album will have you dancing all night long and is sure to become one of  the favorite records in your collection.
Hawaii with a Bongo Beat LeRoy Holmes has done it again with this Hawaiian-Nashville fusion album, sure to take you back to the islands or the country.
Pick up this record and listen to your favorite tropical classics, like “The Moon of  Manakoora” and the always delightful “Mahilini Mele.” Great music for the whole family.
Dreamin’ Wild The hunky duo of  Donnie and Joe Emerson bring you this psychedelic rock album for the ages.
Their smash hit “Don’t Go Lovin’ Nobody Else” will have you humming for days.
This is a collector’s item and is only being offered for a limited time here at RPM Music.
This just showed up one day in the RPM Music warehouse, and we’ve priced it to sell.
Can I see what the site would look like with some of my records in place?
Add the above content to the main <div> of the RPM site in the index.html file you’ve been working with.
Think about ways to insert your content to match what it is: a bunch of similar items that aren’t ordered, but may need to each be styled.
You can download the album covers from Head First Labs: http://www.headfirstlabs.com/books/hfwd/ch04
Tonight’s talk: Who’s more important to the user? Content and Style discuss who matters more when it comes to the user’s experience.
You know, I really don’t think that there’s much to discuss here.
I mean, the Internet is a visual medium, and people want something nice to look at.
No one is going to care about the content if  the site doesn’t look good.
But today, style and design are the branding of  a site.
What about navigation? Huh? If  I don’t get people from one part of  a site to another, they’d never even find you.
Not to mention screen size, text size, and the usability of  all these things I’m doing.
It’s quite a bit to manage and not as easy as you may think.
What is this, 1995? Unordered lists and text links without CSS? Boring.
Nothing to discuss? How quickly you forget the humble origins of  the World Wide Web.
BernersLee proposed HTML to help researchers share and update information, specifically scientific research.
True, but even well-designed sites with the most cutting-edge CSS won’t hold up without wellwritten content.
Graphics and one of  those fancy three-column layouts can only get you so far.
I have to be clear, short, and easy to read.
And don’t even get me started on what happens if  I can’t answer the questions visitors are looking for.
Navigation? An unordered list and some text links should do just fine.
We were all young and stupid then, with a complete disregard for the separation of  markup and style.
So that was good? Now that I live in CSS documents, I’m much more useful and not so bogged down by all the stuff  that markup is doing.
Is that supposed to be a compliment? You know, it has been a lot easier for me not having to deal with all your <p>s everywhere.
Sorry, that markup guy has a tendency to follow me around sometimes.
You used to be just tags in the HTML mess.
You have cleaned up the files quite a bit by moving into the /stylesheets directory.
It really has given markup and me a chance to get to know each other better.
It’s amazing what you can do without all your meaningless style tags all over the place.
Here’s how we marked up the album covers, descriptions, and titles in our version of RPM 2.0
We put each album cover in a separate <div> so we can position these independent of the description text.
Album titles are in a heading element (h4) to indicate their importance and let us style them using our CSS.
This is really just a list of albums, so we used an unordered list (ul)
We need to add some style to these lists to sharpen them up.
The ul and #content rules will help get our records straightened out.
Usually bullets are good, but in this case we don’t want them.
The other important rule here is the bottom margin on #content li p.
This rule makes sure each <li> stacks nicely on top of the others.
How’s RPM 2.0 looking? Update your version of  index.html, and load it up in your browser.
Some simple additions to rpm.css should clean up things considerably:
A bottom border and font styling clean up the section headers and separate them from headers within the content.
With a modest margin below the <p> tag on each of the record descriptions, the list lines up with the grid, and our layout is much more orderly.
Update your version of  rpm.css, and reload the RPM site.
Sort of like Amazon.com, but I’d rather shop locally, anyway.
Later, we could pull these programmatically from the RPM blog, but for now, static text lets us show what things will look like.
A quick copyright notice is all we need in the footer for right now.
Notice that the footer <div> is outside the main container.
This lets us span the footer across the entire bottom of the page.
Let’s add a little more content to show the RPM owner just how far we’ve come.
We’re using Blueprint to put in the Golden Ratio horizontally.
But what about when we want a 2/3-to-1/3 ratio vertically?
It’s relatively easy to get your horizontal ratios right using a CSS grid framework like Blueprint.
But how do you get a vertical ratio going, like between a main header image and the rest of  a site’s content?
We want the main header image to take up 1/3 of the vertical space...
You can start by sizing your image to take up about 1/3 of the typical user’s vertical screen real estate.
But then you’re having to use a lot of  different images, and possibly even the dreaded 1-pixel transparent spacer.
And what about the parts of  the page within the header: a navigation bar, the site logo, any headings...
A better solution is to put together a background image that has things in the correct proportions, like this:
This image will be repeated across the top of the page, creating 3 “faux” rows of color: the navigation, the header body and the tagline.
You can apply your rule of thirds to even this tiny 1px wide image.
The 1px GIF image that will be repeated across the top of the page.
This is the overall background color of the site (below the header)
This bit of code will cascade header_bg.gif across the top of the page.
Add layout and typographic details with some more CSS Here are some more CSS rules to help clean up and format all the new XHTML you just added.
This navigation positioning will get the “tabs” to stay on the right side of the layout.
We want this to float over on the right side of the page.
Just adding a few CSS rules will give us a nice-looking, functional navigation that also makes the site easier to use.
This will highlight whatever <a> tag is classed with “active.” This lets users know what page they are on.
It’s okay if  you’re not 100% sure on all these CSS rules.
The <h2> element in the header is the RPM tag line.
This spans the entire page and is centered in the layout.
We need a little top padding to get this to line up properly.
These rules for the footer will allow it to span the entire bottom of the site, outside of the grid container.
Now RPM looks like it belongs on this side of 1999, and it’s pleasing to the eyes.
Update index.html and rpm.css, and download any images you don’t already have from Head First Labs.
This looks amazing! I never would have thought you could nail this so quickly...
A survey is an excellent way to get broad information about your audience.
Screen real estate refers to the amount of space on the screen of the device that the designer has to work with.
Block hover navs provide users with information as to where they will end up when they click on the link.
Now that my site has color, the checks keep rolling in.
A good color palette can draw your audience into your site, give them a powerful feeling of immersion, and keep them.
And when it comes to color and web design, it’s not just about.
By the end of this chapter, you’ll not only be intimately familiar with the.
Help support your local music scene The site you designed for RPM Music was a big hit.
Sam, the store owner, has received such good feedback that he wants to extend his reach and create a new site called SampleRate that offers coverage of  the local music scene—and he wants you to design his new website.
If  this new site is chosen to be part of  the network, it would mean a lot of  exposure for the store and the site (and you as a designer)
Here’s the storyboard we already worked up and got Sam to sign off on.
The problem is that there are so many that it’s hard to know where to find the good ones.
Rules (http://9rules.com) is a cross between a blog aggregator and a blog network.
It syndicates the posts of  its members (which are conveniently organized by topic categories, such as music, photography, science, design, and games) and provides a one stop shopping spot for those wanting to find top quality blogs.
During this time, site owners can submit their blogs to be reviewed for membership.
The bottom line is that getting accepted into 9Rules is a huge deal and the goal of  many designers, content producers, and bloggers.
Getting SampleRate on the 9Rules Music site will mean lots of traffic and potential business for the RPM Music store.
It takes more than just a great design to get on 9Rules.
What are three really effective way to get a site noticed online?
No matter what else you come up with, you’ve got to make the new SampleRate site mesh with the existing logo Sam’s picked out.
That means we’ve got some choices taken care of  for us, like colors.
This is the logo that Sam’s set on using for the SampleRate site.
Sam personally chose this typeface, so we may want to use that font within the site, too.This is a take on.
For us, though, it sets the colors we’ve got to work with on the rest of the site.
The SampleRate design is fairly straightforward: one main column for content with a left-aligned sidebar for additional details.
Sam loves the idea of some kind of guitar visual in the header.
Color has an emotional impact So how did you feel when you first looked at the SampleRate logo? No matter whether you liked it or hated it, you probably felt something.
For example, red is associated with excitement, purple is dignified and stately, yellow is cheerful, and blue is associated with comfort and security.
When we’re designing a site that involves strong colors, we’ve got to think about the emotions those colors generate.
Pages that use color well have a feeling that you don’t get from sites that don’t consciously use color as a design element or that use color poorly.
You should treat color as an element, one that’s just as important as navigation, images, or content.
Take a look at these bold colors and the sites that use them.
Take a look at these four screenshots and write down what you feel when you look at them.
This site does a really good job of reinforcing its visual metaphor with color.
I also like the wood grain as the background for the content—kind of like a cutting board.
Color is probably the single most important design element on this page.
Without the light blue (representing the sky), the page loses its “airy” feel and the entire visual metaphor breaks down.
The red in this site takes the color of the lobster and uses it as the foundation color for the whole page.
The page is bright, fun, and represents the content perfectly.
The color wheel (where it all begins) Before we can even think about what colors we’re going to use for SampleRate, let’s get acquainted with the mother of  all color tools in the design world: the color wheel.
The color wheel (or color circle as it’s sometimes called) is a circular diagram that displays different colors and shows the relationship between those colors.
Let’s start by finding some of  the colors in the SampleRate logo on the color wheel:
The wheel is based on three primary colors (red, green, blue), three secondary colors (yellow, cyan, magenta), and six colors formed by mixing the two.
The red and green in the SampleRate logo are located across from each other on the wheel and are referred to as complimentary colors.
Take a look at the sites below and circle each site’s main colors on the accompanying color wheel.
Once you’ve circled the colors, try drawing lines between them.
Don’t worry if the color’s not exact, just get as close as you can on the wheel.
Use the color wheel to choose colors that “go together” You might already be thinking, “Yeah, the color wheel is cool and all, but how do I use it to actually pick colors that work together and don’t look like a dog barfed on my web page?” This is where color schemes come into the picture.
A color scheme is a certain grouping of  colors that goes well together.
And here’s the kicker: all good color schemes start with a single color and your handy-dandy color wheel.
First, choose your BASE color The site above has a fairly deep green all over the place.
That’s the base color of  the site: the color that most represents the visual metaphor and that all other colors are based on.
For SampleRate, we’ll need to begin by choosing a base color.
Then, we base everything else—other colors, their depth, their hue—off of  that base color.
But don’t get too stressed out! There’s no right or wrong base color...
This is the base color for the Le Moulin site.
Sometimes you’ll hear an individual color in a scheme called a “swatch” of color.
Don’t worry, once you get past their names, they’re really just pretty simple ways to pick different kinds of  color palettes that you can use for your site.
Think of  color schemes as just another helpful tool in your web design toolbox.
The triadic color scheme is one of  the most commonly used color schemes around.
Triadic uses three colors, equally spaced around the color wheel.
So once you pick your base color, you can just draw an equalateral triangle (three equal sides), and pick your other two colors:
When using the triadic scheme, each color should be equally spaced around the wheel.
For you math buffs out there, that’s 120 degrees all the way around.
Because all the colors in a triadic scheme are equally spaced around the wheel, any color in the palette can be the base.
Create a three-color palette based on the SampleRate logo that Sam provided.
Make sure you start with a base color and build your palette from there.
What colors did you choose? Did the combinations surprise you?
This green seems like a logical choice for a base color.
Both these colors are about the same distance from our base color.
Did it surprise you that some of the colors in your triadic scheme were so different from the SampleRate logo? Do you think that’s a problem?
Make sure to include your stylesheet, which should be located in a directory called /stylesheets.
You may want to add some more dummy text to fill out the page as we add color and style.
This is the guitar image that the owner wanted to see on the site.
If  you don’t want to type all this in, you can download the SampleRate files from the Head First Labs website.
You may want to work through these examples on your.
Later, we’ll add more color and some detail to let Sam really get a feel for our design.
Like we’ve done before, use margin: 0 auto to center the layout in the browser.
Content chunks below floated <div>’s must be cleared so they appear below those elements.
Color output is given in multiple formats, including HEX and RGB.
Sliders allow you to make small adjustments to colors, and Kuler automatically adjusts your other colors to fit the color scheme you’ve chosen.
Great, I’ve got circles on my pretty little color wheel.
How do I turn that into CSS? I need those funny hex values, right?
A hex value tells the browser how much red, green, and blue to display.
So we need a way to take the values we chose on the color wheel and turn them into hex.
Kuler not only has a digital color wheel and hex-conversion tool, it lets you check out other people’s palettes and even export your own palettes.
The slider view lets you adjust colors with more detail and also displays the selected color in multiple formats.
Kuler’s color wheel lets you interactively select base colors and then build palettes with different schemes.
Use Kuler to take the base color you selected in the previous exercise and build a digital color palette based on the triadic scheme.
Once you have your palette, add the hex color values to your SampleRate CSS file and see how they work together.
Use your colors for the background colors of the various <div>s in the SampleRate site.
The handle with the white ring represents your base color in Kuler.
There are more <div>s than colors in a threecolor triadic scheme.
Try picking some extra colors that are a little lighter or darker than your main three colors to fill out SampleRate.
Kuler’s a lot more accurate than choosing colors by hand.
You might get different colors than we did back on page 172 when we chose colors by hand.
Your job was to pick some colors on the color wheel and fill in the CSS for SampleRate using those colors.
What did you come up with? Here are the colors we chose:
Notice that the white-bordered circle is around our base color.
Our “base” green ended up as the background color for the page.
Each color in this palette is represented in the wheel below.
Once we finalize a color palette, we can change the logo so that it matches the header.
We made the wrap <div> background white so the content of the page stands out a bit better...
We just couldn’t find a natural place to use that color, although it might work well for the link color for text.
Just because your scheme results in three colors, you’re not bound to use them.
Always trust your judgment over a color wheel or best practice.
A: Kuler gives you lots of varying colors when you’re choosing a scheme, including lighter and darker versions of colors you’ve already chosen.
Those additional colors will go well with your scheme, and that’s where our light green came from.
A: Good! Your sites should reflect your choices and your client’s tastes.
So what do we do about a site feeling heavy? Well, we try and make the site feel lighter.
The great thing about the triadic color scheme (or any other type of  color scheme) is that as long as you stick to the general location of  a color on the color wheel, you can change its saturation.
Saturation is just a fancy design term for the darkness or lightness of  a color.
So we can lighten the saturation of  our color scheme...
Moving closer and further from the center of the color wheel will produce vastly different results while remaining within the bounds of the triadic scheme.
To change the palette as a whole, move all the colors the same distance closer or further away from the center of the color wheel.
The feel of this site really changes as the color saturation is adjusted.
Adjust the saturation of the colors on the SampleRate site and change the values in your CSS file, starting with the colors below.
How do the new colors change the feel of the site?
You can grab the circles and move them around on the wheel.
Because you have “Triad” selected, you don’t have to worry about messing up your scheme.
Each color in this palette is represented in the wheel below.
Even though this is a triadic scheme, five colors are possible because 2 of them are lighter shades of two triadic colors.
Create a richer color palette with the tetradic color scheme When people find a site boring, that may mean the colors are too light...
In other words, go from a three-color scheme to a four-color scheme.
One of  the most common four-color schemes is the tetradic color scheme.
The tetradic color scheme (which is sometimes also called the double complementary scheme) is the richest of  all the schemes because it uses four colors arranged into two complementary color pairs.
Four different colors is a lot to deal with, and you can’t use all four colors equally or your site will look like a mess.
But for adding some extra complexity and energy to a site, a fourth color can really make a difference.
Colors in a tetradic scheme are in pairs across from one another and about 20 degrees to the left or right of the other pair.
Choose a swatch from the logo colors to set as the base color of your palette (any one that you like, it really doesn’t matter)
Set this as the base color in Kuler and play around with the controls until you find a palette you like (make sure you select the “Compound” option from the Rule menu)
Create a new color palette for SampleRate based on a more complex color scheme like tetradic (split complimentary)
Use Kuler to find the hex values for the colors you choose.
You should see this setup when you work with compound color schemes in Kuler.
Notice the four handles on the color wheel you can adjust now.
We’re going to use tetradic, but if you want to experiment with another color scheme, go for it!
We used a tetradic scheme based on the dark green in the SampleRate logo.
Kuler gave us four colors in the tetradic scheme, and we also took a lighter swatch of one of the greens Kuler provided for a little more variety.
Q: Are there only two color schemes? Triadic and tetradic?
Most of the them are simpler schemes: monochromatic, analogous, complementary, and split complementary.
All of the schemes follow the same general principles as triadic and tetradic.
They find colors related to each other by certain angles that go well together.
For more information on these and other color schemes, check out http://www.color-wheel-pro.com/colorschemes.html.
Q: Do I really need to use a color scheme to create a good color palette? Seems like a lot of work to go through when I can just pick some colors off the color wheel.
A: Sure, you could randomly choose some colors off of the color wheel for your color palette.
However, most of the time you are going to get at least two colors that clash.
Color schemes are based on solid color theory that has been around for ages.
They are designed specifically to help you create harmonious color combinations.
Q: What if I want lighter colors than the ones available on the color wheel?
A: Color wheels can either get progressively lighter or darker as you get closer to the center.
If lighter colors are what you’re after, just drag your colors toward the center of the wheel.
Or you can adjust the hue or opacity of a darker color until you’ve got the lighter swatch you’re looking for.
If  you want to separate different areas of  your layout (say a main column and sidebar), use contrasting colors.
That border lets users know that the two areas are different and probably have different functions or uses within the context of  the site.
If  you want to emphasize certain areas of  your layout, use the most dominant color in your color palette.
If  you surround an important area of  content (like a header or page title) with the palette’s dominant color, that area will be emphasized.
The background of the page and the text area use highly-contrasting colors.
This makes the content of the page clearly separate from the overall site background.
There’s a contrast between the Home tab and the dark background.
But the tab is emphasized against the very dominant brown background.
So once we’ve chosen our colors, aren’t there some rules we can apply to make sure we use them correctly on the page?
There really isn’t a set of  rules that will always work for all sites.
What looks great for one site’s structure could look awful for another site’s layout and design.
On top of  that, you’ve got to match your site’s theme and visual metaphor.
The colors for the design are blank (and represented by the grey bars)
Get the CSS linked up with your XHTML and double check the layout.
Write the hex values for your colors in the spaces where you think the color fits best.
Think about contrast and the best way to make the content stand out.
We’ll build these colors into our actual design in just a few pages.
Remember, white space is your friend! Use #ffffff for white.
Choose colors from your scheme for each of the <div>s on your page.
Sometimes a light gray is perfect for text, without going all the way to white.
We used the color pulled from the logo on the header, which ties the logo into the rest of the page.
The new “Web 2.0” version of the SampleRate logo is complete with gradients and bold fonts.
We’ve got a whole new logo! Your job is to update your color palette to fit the new design and add the new hex color codes to your SampleRate CSS file.
Select a base color from the new logo (your choices are a bit more limited this time).1
Use Kuler to develop a color palette that meets the new SampleRate site’s needs (and that of  the site’s content)
Write the hex color codes you chose in the blanks below:
Color schemes are tools to help you choose a harmonious color palette.
Thanks to my on-bike navigation, I’m no longer getting lost on my evening rides.
What would the Web be without navigation? Navigation is what makes the Web such a powerful information medium.
They’ve just paid a bundle to a web design firm to redo their site.
The college needs you to unravel their navigation nightmare, and do it fast.
We don’t need a new design, but this navigation deal is a mess.
Take a look at the screenshot of the current CNM site.
Then list any problems you find in the blanks below the screenshot.
Be thorough and remember, both students and faculty are using this site.
The titles of these links leave users wondering what to expect when they click them.
Will this always be a title? Will more navigation show up here? I’m confused...
Your job was to find all the potential navigation problems on the CNM website.
Each numbered item refers to a problem we wrote down below.
Most of this is about crappy link names, right? Can’t we just go in and fix those?
The first step to good navigation is good IA The names of  your links are more than just helpers for your users.
And most of  the time, a bad link name means someone wasn’t thinking about navigation way back at the information architecture stage.
The IA of the CNM site seems to be organized fairly well...
What in the world do they actually mean? Look at the content under each category and give that category a new, clearer title.
Be sure to think about how users will interpret your titles:
Flip back to Chapter 3 if you need a refresher on content organization and information architecture.
Your job was to come up with new titles for the main navigation elements of the CNM site.
In other words, names are a really big deal on the Web.
You should put a lot of thought into the name you use for each of  your IA categories and navigational elements.
Here are some general guidelines to help you come up with good names:
Make sure that your names are as short as possible.
You want your user to be able to scan a name quickly.
Only use two if  you really need that extra word.
Avoid using words like “the” or “a” in names, too.
Make sure that the name you choose is as clear and straight to the point as possible.
You don’t want your users to look at a link and be confused.
If you’re not 110% sure what a name means, your users sure won’t be, either.
This item can be left alone because it works pretty much as is.
The content in this category all seems to be for students.
They also represent a large chunk of the site’s users.
Q: What if I simply can’t make the name of the navigational element one word?
A: More than one word is ok as long as its completely necessary to tell your user exactly where they will end up when they click the nav element.
Pick a name that won’t lead the user down a path they didn’t want to travel, rather than one that’s just clever and articulate.
Visit http://www.headfirstlabs.com, find the Web Design link, and click through to the Chapter 6 sample files.
Check out the site and make sure things look right.3
Update the links in the navigation paragraph to reflect your new category titles from the IA diagram.
By giving the link of the page we are currently on an active state, we can add a style that helps users know what page they are on.
Give the <ul> a unique ID so that we can style it differently from other lists that may appear on the site.
This is what the link list will look like with no CSS applied.
A standard link tag goes in between each list item creating the list of links.
I’ve been taking a close look at these nav links.
They’re just in <a> tags, right? Should we do anything to make those links related to each other? They’re all navigation, right?
We’ve mostly been focusing on how sites look, but there’s another element to the Web: the semantic Web.
Right now, our navigation links look good, but they’ve got no meaning.
Really, those links are a list of  items that are all part of  the site’s navigation.
What we need is a way to give some semantic meaning to our list of  links.
Of  course, XHTML gives us a couple of  list elements, so let’s start there:
This id also uniquely identifies this list as a list of navigation elements: that’s semantic meaning.
Q: Why do semantics matter if things look good on screen? A: Good question.
For one thing, you can write much more specific and functional CSS rules if you’re identifying sections of your site semantically.
But even more importantly, semantics are a big deal when disabled users access your site.
We’ll talk a lot more about site accessibility in Chapter 8, so hold that thought a little longer.
Before we can start updating the look and feel of the CNM navigation, we need to get the main nav into an unordered list.
Take a look at the main XHTML and CSS for the site file and update the markup and rules to work with an unordered list.
Once you change the markup, you need to adjust the CSS so that your navigation looks the same.
Add some rules to get the navigation looking like it did before you changed the markup.
Now that you’ve got a good idea about the primary and secondary navigation, it’s time to put your newfound knowledge to work.
We floated the whole navigation to the left so it appears next to the logo in the upper left corner.
Like the nav <ul>, we floated each link to the left so that they appear inline instead of in block form (which is the default)
Well this is clearer, but people are still getting lost.
I don’t think people even notice those links up top.
Update your versions of  index.html and screen.css, and take the new CNM site for a test drive.
Where else could the links go? Write down at least three ideas for a different style and/or location for the CNM’s site navigation.
This type of  design works great with a one or two-column layout (though they tend to get a little stretched out the wider a layout gets)
Tabs also give the impression of  the site having different sections—which it does.
Here’s what horizontal tabs usually look like in XHTML and CSS:
Like before, these links are in a list and semantically marked as navigation.
This rule changes the <li> tags from a block element to an inline element, allowing them to appear next to each other instead of on top of one another.
The active and hover states allow us to define rules that change the navigation when the link has an “active” class or when it’s hovered over with the mouse.
This navigation has a main set of links on the left and a supporting (secondary) group of links on the right.
Approach #2: Vertical navigation Vertical navigation designs are just as popular as horizontal ones—and show up in a lot of  two-column designs.
Vertical navigation isn’t inherently better than horizontal navigation designs; it’s just a different way to display your site links.
Some single-column designs just don’t play nicely with vertical navigation...
Here’s what vertical navigation looks like in XHTML and CSS:
Just by slightly changing your CSS, you can create a whole different navigation layout.
This allows us to create nice block rollovers and active states.
The nav runs the length page, and when a link is active, it’s background matches the body content.
This is a simple stacked vertical navigation with a cool wraparound effect on the links.
Notice how the navigation pulls its theme from the header logo of the site.
Q: Is it better to put vertical navigation on the left or right side of my page?
A: Lots of usability studies show there doesn’t seem to be any real difference if you put your navigation on the left or the right side.
If your layout works better with the navigation on the left, you should put it there.
If your layout works better with a nav on the right, then that’s okay too.
I don’t want to radically change our design, so let’s stick with horizontal navigation.
But can you make the links a lot more obvious? It seems so confusing right now...
We base the way in which we interact with the world around us on the predictability of  events.
Every day millions of  people pull up to a red light, wait for it to turn green, and then continue driving.
But what if  you pulled up to a red light and instead of  it turning green, it turned blue? You’d probably have absolutely no clue what to do.
When a navigational system works right, people rely on it.
In the CNM system, the navigation isn’t what users are expecting.
That’s because it probably violates at least one of  the following three principles:
Navigation should be in a place users expect it to be: usually the top of  a page or along either side.
Links should be clearly identified and separate from each other.
How does the CNM site navigation hold up to the principles above? Next to each principle, write down some notes about that principle relating to the current CNM navigation.
Using the header overlays below, sketch three different navigation designs for the CNM site.
Think about consistency and how familiar your scheme is going to feel for a typical user.
How did your navigation design go? Were you able to come up with some ideas that clearly followed the three navigation principles we looked at back on page 208?
Tabs would be a familiar option for users, but they wouldn’t quite work with the overall theme of the site.
This block-style navigation is a nice fit with the CNM site and will be quick and easy to implement.
It’s basically a cleaned up version with a rounded background on the active and hover states.
Tabs are intuitive, clearly clickable, and distinct from one another.
These are a lot like tabs, and the dividing lines make each link look more clickable to an average user.
The big change here was making sure the links stood out more and were more obviously something that could be clicked on.
Joe: I thought the registrar said they really liked the current design and just wanted to fix the navigation?
Frank: Besides, I think navigation should fit into your design, not make you change it.
Jim: Why not? I thought we all agreed that navigation should start way back when we’re doing IA.
Frank: Well, when we were doing IA, we just needed to make sure our category titles were shortJoe:—and descriptive.
But that’s got nothing to do with how navigation actually looks on the page.
It’s pretty nice, you know? I just don’t think we need to mess with something that’s working already.
We’re not getting paid to do all that extra design work.
And I don’t suppose the school would give us extra cash out of  the goodness of  their heart, huh?
I think going with a simple, block-style of navigation is our best bet.
Joe: That’s where we just have some dividing lines between our navigation links, right?
Why don’t we go with those, and just update the rest of the page’s design to match a tabbed look?
You’ll rarely get paid for doing “extra” work unrelated to your core assignments.
Block elements are your friends Block elements (like paragraphs and headings) literally form a block from one side of  the page to the other.
And by default, block elements are as tall as the content they contain.
We’ve got our links in block elements already—those <li>s we added earlier:
The container <div> is a block element that holds together all the nav content.
But you can float these to change the default display, too.
Inside the <li> is a link that can either be displayed as a block or floated, and given a height and width to fit within the available navigation space.
This is why when you apply a background image to a heading.
The image stretches well beyond the text within the element.
But we can adjust the height of  a block element, as well as its position.
The nice thing about blocks—and why they’re great for navigation elements—is that they all automatically line up horizontally:
To fix this, we need to float the <ul> left and give it a fixed width so it displays next to, not below, the header logo.
Like the <ul>, the links need to float to the left to mimic a block style.
We’ll give the links a fixed height and width that will give the nav items a consistent look regardless of the length of the text.
This CSS gives us a simple, clean navigation that catches the user’s eye.
All the links are now clearly separated from each other too.
A dark background on the “active” class will give the current page link a distinctive look and let users know where they are in the site.
If  we think of  each <li> in our navigation as a block, then we just need some CSS to style those blocks.
We can add borders to separate each block and make sure each block is positioned related to the previous block.
One was video gamesJim: Oh, I bet that was the little icon that looks like a game controller, right?
If  the icons are good, I should be able to figure this out for myself, right?
I didn’t even know you could click on them at first!
Alright, you had a good point about using block navigation.
If something’s confusing to you, it will probably be VERY confusing to your users.
The problem is, when used for navigation, they can cause some serious problems.
What does an icon mean? What happens if  you click on it? Where will the site take me?
What one icon represents to you might be completely different from what it represents to another person.
And if  you use an icon as a navigational element, your users might get the wrong impression about where they will end up if  they click the icon.
The end result? The user’s taken somewhere they didn’t mean to go, and now they’re a lot more likely to move on to another site.
Write down what you think each icon represents, or what you may see if you click on that particular link.
Here is what the College of New Media says each of the icons mean.
How close were you? If you got even two of these right on, then you get the Ambiguous Icon Detective award for the day...
This icon represents a web page and is meant to indicate the web design program at CNM.
The gamepad was used to represent the video game design program.
This icon is supposed to represent a man running on a computer screen.
This is a commonly used icon–the classic pen and paper.
In this case, it represents the digital writing and rhetoric program.
Woah, those icons are in all of our promotional material.
Sometimes you’re gonna get stuck with a bad display element, or perhaps just some meaningless or confusing icons.
If  you’re not able to make major changes, one easy fix is to simply add text, clarifying the icons or explaining how to use a particular page element.
A little bit of  clarifying text goes a long way to let a user know what to click or where to go on.
Add icons to your text, not the other way around Right now the four CNM icons are little images inserted into the XHTML.
If  we want to add text descriptions of  those icons, we’d need to squeeze the text between each icon, potentially resize the icon, align the text with the image...
By default, an image in the background property will repeat.
Use the “no-repeat” value to make an image only display once, and then position it centered on the left side of an element.
So what can we do? Suppose we started with text, like “Web Design” and “Computer Animation.” The icons are meant to be links, so we can surround the text with <a> tags.
But once we’ve got <a> tags, we can style those with CSS.
What width should our icon images be to work with text?
Game Design Now we’ve got all kinds of alignment issues with the text connecting with the image.
Game Design A This <a> tag can by styled now...
With stylable elements to work with, we can get around all the position issues and actually insert the icons as background images to the <li> text items.
We can set the background image property of each <li> to the appropriate icon and make sure things line up just right.
This link list should be very similar to the main nav link list.
Just make sure that you give the container <div> a different id.
This list item has a special class so that we can style it differently from the rest of the links.
This will act almost like a title for the sub-navigation.
When we have files to link to, we’ll replace the # sign.
Each link has its own class so we can assign the right icon to the background.
Update the CNM XHTML to use textual links Let’s open up index.html and remove the icon images from the XHTML.
We’ll use the textual link name, and then in a moment we can update our CSS to style each link.
Go ahead and make these changes to your copy of  index.html:
For the sub-navigation, we gave an ID to the <div> that contains the link list.
We need to get rid of the default bullet points–those aren’t going to work here.
Each link has its own class which allows us to assign a different background image to each.
Make sure you use the no-repeat vlaue so you don’t tile the image in the background.
This is the rule for the special list item that acts like our subnav heading.
Notice the use of the background image to make the faux arrow.
Now you can add these rules to screen.css to style the subnav and related elements:
This is looking good, but what happens to the program links when someone clicks off the.
Suddenly those confusing icons are clear, and you’ve managed to keep the icons intact...
Primary navigation is the navigation that provides links to the main sections of  the site.
So with CNM, our primary navigation is the top-level blocks, with Home, Students, Faculty, and About displayed.
These links should be displayed on most (if  not all) of  the pages in your site.
On the home page, the sub-navigation gives us links to the various course programs available.
Secondary navigation is navigation that links to subsections of  the site.
Secondary navigation should apply to what’s going on with the page and where the user is at a specific time.
Suppose someone clicks the Faculty link on the CNM page.
The primary navigation links still make sense, but the secondary navigation—the program links—probably don’t anymore.
Secondary navigation applies to the CURRENT SECTION of a site you’re on.
Create a page for each main section of the site: Students, Faculty, and About (you’ve already got Home as index.html)
Just copy and rename index.html over to three more files.
Then for each new page, change the title to match what that page is about.
Next, use the IA diagram on page 198 to update the secondary navigation on each new page (don’t worry about the main text content for now)
We keep the option class and change the label name to Students (which is our current active nav element)
Each sub-page gets its own secondary navigation Open up the page you created for the Students section.
We need to change the title and update the secondary navigation based on the CNM’s IA diagram:
The title of the page should match the link name and possibly provide a little extra detail.
We added a “page” class so we can style section pages differently than the main index.html page.
Notice the .page declaration? That’s telling CSS to only apply these rules if the <body> has a class=“page”
This lets us style body elements for sectional pages differently than for the main index.html page.
This padding will make sure that our active and hover states fill the whole block.
This dark green will give the hover and active states a nice effect for secondary links.
Let’s style the navigation with our CSS Now that we’ve got some actual secondary navigation in place, we can add some CSS rules to style the sectional pages.
Each sectional page will have a body with a class of  “page,” so we can style those separately.
Test Drive Create students.html and update index.html to link to your new section page.
This time open up index.html and select one of  the main links: Students, Faculty, or About.
On each sub-page, you should see secondary navigation that matches the site’s IA.
You also should get a nice green color when you hover over a link:
Hovering over a secondary link changes the background color of the block to green.
Use your site’s information architecture as the foundation for navigation.
Primary navigation is the navigation that provides links to the main sections of the site.
Secondary navigation is navigation that links to subsections of the site.
Horizontal navigation designs work particularly well with one and two-column layouts.
Breadcrumb trails give the user a visual indication as to the location of their current page in the site’s overall information architecture.
Writing for the Web is just like any other kind of  writing, right? Actually, writing for the Web is completely different than writing for print.
People don’t read text on the Web like they read text on a printed page.
Instead of reading text from left to right, beginning to end, they scan it.
If not, users won’t waste their time on your site, and they’ll go somewhere.
In this chapter, you’ll learn a bevy of tips and tricks for writing scannable.
I wish they were available online so we didn’t have to share this paper.
Coleco Industries, which was originally named the Connecticut Leather Company, was founded in West Hartford, Connecticut in 1932 as a shoe leather company by Russian immigrant Maurice Greenberg.
Moving into plastic molding in the 1950’s, Coleco eventually sold off  their leather business, and became a publicly traded company.
By the beginning of  the 1960s, the company was one of  the largest manufacturer of  above-ground swimming pools.
In 1976, after an unsuccessful attempt to enter the dirt-bike and snowmobile market, they released Telstar, a clone of  the home PONG unit being sold and marketed by Atari.
Despite the fact that Coleco was certainly not the only company releasing home PONG clones, they enjoyed moderate success and went on to produce nine more varieties of  the Telstar unit.
Coleco president Arnold Greenberg ignored this near disaster and directed his Research and Development team to begin work on a new home videogame system, the ColecoVision, which he felt would set the standard in graphics quality and expandability.
Text on a screen reads differently than text on page.
This is kind of a big deal when it comes to writing for the Web.
But don’t take our word for it, give it a try.
Now, read the version below and make a note of how long it takes.
C’mon, just because I read the online text a little slower doesn’t mean that people always read slower on the web!
See, text on screen reads slower than text on a printed page.
People read about 15% slower on the Web than they do from a print document.
You read slower on screen because computer display devices have a far lower resolution than print does.
I read slower because my eyes are trying to make up for the blurry text?
And you’ll probably experience eye strain faster than you would if  you were reading from a print document.
So people read text on screen differently than they do other kinds of  text to avoid eye strain and headaches.
Jim: But they don’t know you’re doing that? Reading slower?
But how does this help me write text for my websites?
Frank: Users scan your text, looking for keywords, sentences, and paragraphs that are meaningful to them.
So if  you write text that’s specifically designed to be scannable, your users will read your faster and understand and retain your message better.
Scannable text gives users a better experience on your site—which means they’ll stay longer and come back more often.
And that’s the whole goal of  user-centered design: giving your users what they want and keeping them coming back for more.
Coleco Industries, which was originally named the Connecticut Leather Company, was founded in West Hartford, Connecticut in 1932 as a shoe leather company by Russian immigrant Maurice Greenberg.
Moving into plastic molding in the 1950’s, Coleco eventually sold off  their leather business, and became a publicly traded company.
By the beginning of  the 1960s, the company was one of  the largest manufacturers of  above-ground swimming pools.
In 1976, after an unsuccessful attempt to enter the dirt-bike and snowmobile market, they released Telstar, a clone of  the home PONG unit being sold and marketed by Atari.
Despite the fact that Coleco was certainly not the only company releasing home PONG clones, they enjoyed moderate success and went on to produce nine more varieties of  the Telstar unit.
Coleco president Arnold Greenberg ignored this near disaster and directed his Research and Design team to begin work on a new home videogame system, the ColecoVision, which he felt would set the standard in graphics quality and expandability.
Grab a stopwatch and take exactly 20 seconds to read the block of text on this page.
But don’t cheat: look at the questions only after you’ve read the text.
What was the name of the home PONG clone that Coleco released?
What was the name of the man who founded Coleco?
Now try the same thing with this block of text.
Don’t cheat! Be sure to read the text before you look at the questions.
The ability to display 32 sprites on-screen at the same time.
Donkey Kong: The Key to the ColecoVision’s Success The key to this new system’s success was its included cartridge.
In the case of  the ColecoVision, Coleco successfully negotiated the right to release the smash arcade hit Donkey Kong.
With a large sum of  money already invested in the license, Arnold Greenberg agreed to pay Universal 3% of  the net sale price of  the game.
Nintendo argued that in a previous case, Universal had argued that King Kong’s characters and plot were in the public domain.
Nintendo successfully argued its claim and was awarded $1.8 million in damages.
This prompted Coleco to file as well, earning back a portion of  the royalties they had previously paid to Universal.
So you took exactly 20 seconds to read two blocks of text and answer questions on each.
Text written specifically to be scannable is easier to quickly read and understand.
One of the blocks of text was written for scannability, one wasn’t.
What was the name of the home PONG clone that Coleco released?
What was the name of the man who founded Coleco?
That’s because the answer was early in the first paragraph of text.
Did you get as far as this bit of info in twenty seconds?
This was in the first bullet, so it’s easy to recall.
This was repeated several times as well as starting the second and third headlines.
Again, easy to get, as it was in a headline.
A local alternative newspaper was so impressed with the successful launch of  the RPM record store site that they’ve decided to hire you to create an online version of  their print newspaper.
Although the paper’s always had well-written articles, they’ve been struggling lately to keep their readers.
The Editor-in-Chief  also wants to cover more than just news on the paper’s website.
He thinks adding hip articles on computing and gaming pop culture (geek chic) will appeal to readers.
The biggest challenge for this project isn’t layoutit’s writing text for the Web.
This new site’s the last chance to save their paper, so they really need your help...
I can’t thank you enough for taking on this project.
Before things get started, could you show me a concept on paper for how the site will look?
Hipster Intelligencer Online: project specs Before you get started, the paper’s sent over some specs.
This will help you refine the look and feel of  the site you’re building for them.
There must be an area on the home page to.
Use at least a three-color scheme in the fina l.
Chapter 6 of Head First HTML covers this in detail.
The problem is TEXT None of  these specs look like that big of  a deal.
However, there’s one major issue not in these specs: the Hipster is mostly text—lots and lots of text.
So we’ve got to build a text-heavy site that still feels usable and hip.
You put together a polished storyboard based on the specifications for the site.
The heading is at the top left  of the page, just like a printed newspaper.
We’ve got a header to hold the title in the top fold, as well as three columns for the main content (two for content, one sidebar for links to more content) and an image in the center column, also to add some visual interest to the main article on the page.
Here’s some basic HTML and CSS to get you started implementing your storyboard.
Remember the # sign represents an id in the HTML file.
Now we need some content so we can add some style...
Stop! Be sure and create these two files before you move on.
Kaye founded Tactical Studies Rules in order to publish the rules for Cavaliers and Roundheads, a miniature war game based in the English Civil War.
While Cavaliers and Roundheads was the initial focus of  Tactical Studies Rules, Gygax and Kaye also wished to publish the rules for Dungeons &
While Dave Arneson was brought into the partnership as a game designer, and left shortly thereafter, Brian Blume entered as a funder.
Blume believed that Cavaliers and Roundheads was not generating enough revenue, and encouraged Gygax and Kaye to focus their efforts on releasing Dungeons & Dragons.
There is considerable debate as to the contributions that Dave Arneson made to the initial development of  Dungeons & Dragons.
While Arneson has labeled himself  “The Father of  Role-playing,” and has said that he was responsible for writing.
Wow, this is coming along great! Could you use this article I’ve written to show me how content will look in the design?
Now that you’ve got the framework for your site built in markup, add the content that the Editor-in-Chief  has provided to the main content section of  your HTML page.
Remember, you can download all the copy from the Head First website.
Q: Do people really read that much more slowly online?
Lots of scientific studies have come to the same conclusion, but you did your own experiment with the 20-second reading test and found the same thing, right?
Okay, but that two blocks of text didn’t seem all that different to me.
How come I remembered so much more from the second one?
A: It’s all thanks to chunking—breaking down content into smaller easier to read and understand bits.
Sounds simple, but it’s a killer tip for getting people to read more of your site.
We’ll take a look at how over the next few pages.
Q: So you mean I can apply these principles to my blog? It’s not just for online newspapers and long articles?
A: Absolutely! You can apply this to your blog or any other text you know folks will have to read on a computer screen.
Improve your content with the Inverted Pyramid A low percentage of  people scroll beyond the information that’s initially visible in their browser window.
Even if  your users are willing to scroll, most of  them decide whether they want to read the page based on what they see in the browser window when the page loads.
To account for this, you should structure your text like an inverted pyramid.
Start with a short conclusion so that users can quickly get the gist of  the page, and add detail afterward.
This way, users can stop reading at any time and still be confident that they’ve already read the important pieces of  information.
Put the most important stuff at the top of your text.
Users should be able to read your first paragraph and get the idea of the whole piece.
Main Heading A little body text to give the user some context and a.
Content that’s progressively less important, even though it’s still well-written.
Stuff that’s not essential to the user’s understanding of the article can go down here.
One was written using the inverted pyramid, the other was not.
Read both, but stop reading when you feel that you’ve gotten the gist of what the article contains.
Avalon Hill, now owned by Hasbro and operating as a division of  Wizards of  the Coast, was a tabletop game company specializing in war games and strategic board games.
They were not only responsible for pioneering many of  the key concepts of modern tabletop wargaming–such as the hex grid and zones of  control–they were also responsible for publishing some of  the most recognizable titles in the board game industry such as Civilization, Axis and Allies, Runequest, and Dune.
In 1958, Charles Roberts founded Avalon Hill in order to capitalize on the success of his game Tactics.
Self-published in 1952, Tactics was particularly noteworthy because it was based on actual war tactics and scenarios.
As such, Tactics is considered to be the first modern tabletop war game.
Shortly after the company was founded, it released Tactics II, the sequel to Roberts’ original game.
Shortly after the release of  Tactics II, Avalon Hill published Gettysburg, which is widely considered to be the first tabletop wargame based upon an actual historical battle.
However, during the mid 1990s, the board game industry as a whole began suffering a downturn in sales.
Not only had overall sales of  their board games decreased, but the company had also lost the rights to two of  their most popular games, Civilization and 1830, in a legal battle with the computer game publisher Microprose.
Hasbro continued to publish games under the Avalon Hill name.
In late 1999, Avalon Hill was made a division of  Wizards of  the Coast, who had been purchased by Hasbro earlier that year.
The game rules (as well as storyworld material) are published and released in a series of  books (some of  which are core to gameplay, while some of  which are supplementary)
The game itself  is generally played on a surface, the standard size of  which is 4x6 feet.
While the game can be played with just the miniatures, players will often use model scenery, such as trees, buildings, and topography, in order to add realism and depth to their game.
Each unit (either a single miniature or a group of  miniatures) has a point value based on their power or skills.
Players build (or “draft”) an army based on an overall point value set by the game type.
Movement across the playing surface, which is turn-based, is measured in inches and combat between units is accomplished through use of  six-sided dice.
Victory in Warhammer is most often determined by victory points, which earned by killing enemy units and meeting scenario based special objectives.
It’s important to note that Warhammer is not a collectible game.
As a result, miniatures are not sold using a closed-box, random model.
Players simply pick and choose the miniatures they want to have in their armies, and buy them individually or in large sets.
It is also important to note that Warhammer miniatures do not come pre-painted.
It is the responsibility of  the player to paint their own miniatures.
As such Warhammer is somewhat of  a niche product as it requires specialized skills to fully experience the game.
In addition, unlike other pre-painted tabletop miniature games, such as WizKids’ HeroClix, Wizards of  the Coast’s Star Wars Miniatures, or Fantasy Flights Games’ Mutant Chronicles CMG, the Warhammer community has a unique system (which is both formal and informal) that recognizes particularly talented miniature painters.
Generally speaking, Warhammer is most commonly played in game stores, hobby stores, and comic stores.
In addition, Games Workshop organizes a Grant Tournament season each year in which players compete against one another for community-wide recognition and prizes.
Which was easier to read? Can you identify the text written using the inverted pyramid? How do you think the inverted pyramid makes text easier to read?
You read two pieces of text until you felt you’d gotten the gist of what each article contained.
Which one did you stop reading first? Let’s take a look at the first two sentences of each opening paragraph: Text block        was written with the inverted pyramid.
The game rules (as well as storyworld material) are published and released in a series of  books (some of  which are core to gameplay, while some of  which are supplementary)
We learn a lot about what we can expect in this article from the first two sentences.
Boring stats like the size of plastic miniatures aren’t good opening material.
Avalon Hill, now owned by Hasbro and operating as a division of  Wizards of  the Coast, was a tabletop game.
Copy Magnets Organize these chunks of text from the Editor-in-Chief ’s copy using the inverted pyramid.
Remember to keep the most important information at the top.
Tactical Studies Rules in order to publish the rules for Cavaliers and Roundheads, a miniature war.
Tactical Studies Rules, Gygax and Kaye also wished to publish the rules for...
Eventually, both Kevin and Brian Blume were removed from the board of  directors after being accused of  misusing corporate funds and accumulating large debt in the pursuit of  unapproved and inappropriate acquisitions.
In the wake of  the Blumes’ departure from the board of  directors, Gygax assumed the role of  CEO and regained partial control of  the company.
However, unbeknownst to Gygax, Kevin and Brian Blume were in secret negotiations with Lorraine Williams, a potential investor who Gygax had brought into the company previously as an officer, to acquire their majority stock...
In addition, in an effort to compete in the emergent collectible card game market, TSR released a series of  products, such as Dragon Dice and Spellfire, which simply did not sell...
Copy Magnets Solution You organized chunks of copy from the Editor-in-Chief using the inverted pyramid.
How do you think users would react to the text as it is here?
Tactical Studies Rules in order to publish the rules for Cavaliers and Roundheads, a miniature war.
Tactical Studies Rules, Gygax and Kaye also wished to publish the rules for...
Eventually, both Kevin and Brian Blume were removed from the board of  directors after being accused of  misusing corporate funds and accumulating large debt in the pursuit of  unapproved and inappropriate acquisitions.
In the wake of  the Blumes’ departure from the board of  directors, Gygax assumed the role of  CEO and regained partial control of  the company.
However, unbeknownst to Gygax, Kevin and Brian Blume were in secret negotiations with Lorraine Williams, a potential investor who Gygax had brought into the company previously as an officer, to acquire their majority stock...
In addition, in an effort to compete in the emergent collectible card game market, TSR released a series of  products, such as Dragon Dice and Spellfire, which simply did not sell...
Compress your copy One of  the easiest things you can do to make text more web-friendly is remove unnecessary content.
If  your text’s clear and concise, your users will spend less time reading and will be happier.
So what’s the best way to write less but still keep the relevant content in your article? It’s a matter of  careful editing.
Get to the point quickly with short words and phrases and concise two to three sentence paragraphs.
You’d be surprised how many words don’t have to be included in copy for it to make sense.
If  you can’t work out what it says, what hope do your users have of  understanding it?
Take the article that the Editor-in-Chief gave you and edit it down so it’s shorter.
They won’t realize why, but you just saved them strained eyes!
You edited the article that the Editor-in-Chief gave you so it’s shorter.
Don’t worry, the “After” looks longer because all the stuff you deleted hasn’t been taken out yet, it just has a line through it.
Q: So if people don’t like to read on the Web, what’s the point in editing my text down? Won’t users just go ahead and print it to read offline?
A: Sure, some users print pages for future reference, but think about how you use the Web.
When did you last print a page to read later? Most people surfing the Net want quick answers, so it pays to give them text that’s quick to read.
Won’t that mean they spend less time on my site, not more?
Sure, the occasional browser who was looking for something specific will read the page then head on out never to be seen again, but the majority of users are hooked by good content.
Once you’ve got them hooked, you can feed them more content with carefully placed links to related articles.
How do I work out what’s most important about my content so I can present that to users after a general introduction?
If it’s content you wrote, you should have a good idea of the two or three main points you want readers to take away.
If it’s content you received from someone else, read it through and see if you can find the main takeaways.
Q: So if my content’s ordered by importance, how do I know when to stop?
A: If some bit of content’s so far down the importance line that you’re not sure whether to include it, that may be enough of a hint to get rid of the text.
Of course, if you’re still not sure, be the user.
Does that last little bit of detail help you understand the main gist of the text? If it doesn’t, you know what to do: Dump it!
Q: So how much content should I have removed when I edited my text? You made some changes I didn’t even think of...
A: There’s no perfect answer to this, but if you follow the rules to create 2-3 sentence paragraphs and remove unnecessary words, you’ll find your text will be significantly shorter.
Practice will help here, but you can learn a lot by looking at other sites like yours to compare their writing style.
Chances are, if you’re following the rules, you’re already seeing places where they could slim down their content a little!
The inverted pyramid and editing are useful tools, but so is re-reading.
Once you’re done editing, take another pass through and see if you can shave off just a little bit more.
Update your XHTML so that it contains only your edited text.
That’s much better, but it still looks like way too much in my browser.
What do other sites do to break up content and make it manageable?
Jim: How would that work? Doesn’t a list just add a bunch of  different-sized chunks of  text for user’s eyes to scan?
Frank: Lists break up large blocks of  text into smaller chunks that are easier for the user to read.
And they give the user’s eyes something to lock onto when they scan the page.
I’ll write out some text then show you how it can be broken down into a list.
Looks like the first paragraph of  an article about lists, using the inverted pyramid to get all the important points up top.
But it could be much quicker to scan and readJim: —in a list?
Those bullets summarize three sentences of  your text into just three bullet points.
Lists do a great job of breaking up text and making the content on your page more scannable.
Lists can break up paragraphs that seem to have lots of list‑type items in them, and lists can even break larger paragraphs into smaller chunks, essentially building a list of paragraphs.
Lists can be used in the main content body, sidebars, navigation, forms, and pretty much everywhere else on your page.
Breaking text into a list allows readers to quickly glance at the text and extract information.
So we still need to break the text down some, huh? How about using a list to make the content more scannable?
Which of these sites use the inverted pyramid? Why do you think any of the sites wouldn’t use the inverted pyramid? Do any of the sites use lists and bullets? Why or Why not?
Yours may be a little different, but check the sites again if your annotations are a LOT different than ours.
The most recent, most popular “diggs” act as bullets to grab your eye, and they provide a nice clickable link to the story.
Newsvine doesn’t use lists as its main layout tool but does a great job of placing them in sidebars and extra content.
Which of these sites use the inverted pyramid? Why do you think any of the sites wouldn’t use the inverted pyramid? Do any of the sites use bullets? Why or Why not?
Original Signal breaks its content into two sets of lists.
The second is a list below each site’s heading with the most recent stories first.
Slashdot and Newsvine use the inverted pyramid to present content to their users.
Take this paragraph from the Editor-in-Chief ’s copy you already edited and make it more readable by turning it into a list.
Hint: You can use a sentence or two to explain what the list is.
The departure of  Gygax from TSR irreparably changed the face of  the company.
In addition, the company released popular new role-playing settings including Dragonlance, Ravenloft, Forgotten Realms, and Greyhawk, all of  which have had an enduring impact on the tabletop roleplaying landscape.
The departure of Gygax from TSR irreparably changed the face of the company.
In addition, the company released popular new role-playing settings, including: Dragonlance.
All of these have had an enduring impact on the tabletop role-playing landscape.
This content already uses the inverted pyramid (most important content first), but now it’s broken down even further into lists.
The content that we used to create the lists already listed a number of items, so it was perfect for, uh, lists!
Notice how a little text before each list gives the list some context.
These lists items are fragments, so they don’t need punctuation, but notice that the first word after each bullet is capitalized.
The last sentence needed a small edit now that it follows a list.
You made this edited paragraph more readable by turning it into a list.
Leaving a sentence or two to explain what the list is helps give the user context.
The departure of  Gygax from TSR irreparably changed the face of  the company.
In addition, the company released popular new role-playing settings including Dragonlance, Ravenloft, Forgotten Realms, and Greyhawk, all of  which have had an enduring impact on the tabletop roleplaying landscape.
Go ahead and edit the rest of  your text to add lists where appropriate.
When you’re done, alter your XHTML so that it uses lists, too.
You can use unordered and ordered lists to give you bulleted or numbered list items:
Stop! Create lists in your XHTML before you move on.
So you’ve applied the inverted pyramid to your article, edited it some, and now you’ve added lists.
A definition list, <dl>, lists words and their definitions, but we used it here for the list of the four new companies and their responsibilities.
What can you do to improve the look of the copy?
So you’ve used lists to break down some paragraphs and sentences into bullets, but what else can you do to help users scan your content? Headings are a great way to make blocks of  text more scannable.
Headings reduce large blocks of  text into more manageable chunks, and they announce exactly what that chunk of  text is about—which lets your users decide whether they want to invest their time in reading that bit of  text.
Sub-headings in the body text help to break up the page and emphasize ancillary content...
Another two headings announce more feature content towards the bottom of the top fold to encourage users to scroll down.
Sidebar headers let the user know where the links go or why this content is different from the main column.
Notice also how the sidebar breaks down linked content into a list.
Today’s date is a heading on the top left of the page.
The main site heading appears on every page and gives the users context if they arrived there through a search engine or any place else that wasn’t the home page.
There’s no bullet, but it’s clearly still a list.The site navigation is also.
Another unordered list holds links to articles related to the lead story.
Now that you’ve got a good idea why headings are important (and what makes a good heading), it’s time to try headings out on your own.
Write a short heading for each of the blocks of text below.
Remember to create headings that are straight to the point and scannable.
Acoustic guitars are used in a variety of different genres across the globe.
Because of the long history of the acoustic guitar, there are many different kinds; some kinds are rarely considered guitars, such as the ukulele, which was based on the four-stringed braginho or cavaquinhos from Portugal.
The Protestant movement may have commenced earlier, but the publication of Ninety-Five Theses by Martin Luther in 1517 spurred on the revolution within the Church.
Luther attacked the Church’s theology, which, he believed, misrepresented the Bible and placed too much authority in the hands of the clergy, and he wished to reform the Church.
The surface of Mars is a lot like a desert on Earth; it is very dry and dusty, but it is also very cold.
There are a lot of loose rocks and dunes of fine sand.
Crater impacts mark the surface, but these are not as common as on the Moon.
It is about half the size of the continental United States.
The southern half of the planet has more craters than in the north.
You wrote headings that are straight to the point and scannable for the blocks of text.
Is this enough to give the copy that newspaper feel that the Hipster Intelligencer’s staff wanted?
Acoustic guitars are used in a variety of different genres across the globe.
Because of the long history of the acoustic guitar, there are many different kinds; some kinds are rarely considered guitars, such as the ukulele, which was based on the four-stringed braginho or cavaquinhos from Portugal.
The Protestant movement may have commenced earlier, but the publication of Ninety-Five Theses by Martin Luther in 1517 spurred on the revolution within the Church.
Luther attacked the Church’s theology, which, he believed, misrepresented the Bible and placed too much authority in the hands of the clergy, and he wished to reform the Church.
The surface of Mars is a lot like a desert on Earth; it is very dry and dusty, but it is also very cold.
There are a lot of loose rocks and dunes of fine sand.
Crater impacts mark the surface, but these are not as common as on the Moon.
It is about half the size of the continental United States.
The southern half of the planet has more craters than in the north.
This text isn’t just about acoustic guitars, but the different types of guitar that have evolved around the world.
This text is about Luther and his role in the Protestant movement, so if you have a heading that focuses on either, that’s probably fine.
Q: Doesn’t adding a bunch more small items on the page make it longer? Won’t that strain my users’ eyes more than a shorter page?
In fact, lists help your users scan the page faster and take in more information, more easily.
Lists break down sentences and paragraphs that contain a lot of information into easy-to-read chunks.
Lists might add a little to the length of a page, but your users will be happy to scroll down if the content’s relevant to them.
And since you’ve already edited your text so it follows the inverted pyramid structure, they’ll know right away if the page is relevant to them.
Q: When should I use lists? You had a couple I didn’t have, and I added some in that you didn’t.
A: Lists are great for breaking long paragraphs down into two or three more manageable chunks.
If you broke down more paragraphs than we did, that’s fine, but be careful not to overuse lists.
It’s good to try and keep a balance between short, focused sentences and lists.
Q: What about the definition list in your solution, what made you decide to use that where you did?
A: Definition lists aren’t just for definitions! Sure you can use them to give a word or phrase and provide a definition, but we chose to use the <dl> to list each of the four new companies and their responsibilities.
Q: What if I didn’t catch all the lists and headings in the New Yorker exercise?
A: Hey, don’t be too hard on yourself! Seriously, there are a lot of headings and lists on that page.
If you didn’t catch them all, it’s no big deal.
Just keep practicing, and soon you’ll be writing web copy like a pro—and recognizing the same tricks at work on other people’s sites, too.
The more web copy you write and edit, the better you’ll be at slimming text down and making it scannable.
Use your newfound expertise to write headings for the first four sections of your copy.
Cavaliers and Roundheads was the initial focus of  TSR, but Gygax and Kaye also wished to publish the rules for Dungeons & Dragons, a role playing game developed by Gygax.
As Cavaliers and Roundheads began generating revenue for TSR, the partnership was expanded to include Dave Arneson and Brian Blume.
Dave was brought into the partnership as a game designer, but soon left, while Brian Blume entered as a funder.
Blume believed that Cavaliers and Roundheads was not generating enough revenue and encouraged Gygax and Kaye to focus their efforts on releasing Dungeons & Dragons.
The immediate result was that Blume and Gygax dissolved TSR and founded a new company named TSR Hobbies, Inc.
Unlike the equal partnership of  TSR, brothers Brian and Kevin owned a majority of  the new company’s shares.
They moved into domains such as board games and toys, and began to diversify into unrelated areas.
The best evidence of  this was the unapproved acquisition of  Greenfield Needlewomen, a needlepoint business owned by one of  the Blumes’ relatives.
Also, Kevin Blume had printed millions of  copies of  the previously successful multi-path Dungeons & Dragons adventure books, which couldn’t be sold.
In an effort to mitigate the mounting financial problems, TSR Hobbies, Inc.
Continued to manufacture the company’s core Dungeons & Dragons role playing products.
Unfortunately, TSR Entertainment’s only success was the short lived Dungeons & Dragons cartoon.
Gygax claimed the separate corporations were Blume’s attempt at keeping foreign income away from US taxation.
Now write the headings for the rest of your article, and when you’re done, change your XHTML file to match.
When you’ve done that, download the content for the center <div> and sidebar.
You should now have headings for all of your copy including the center and sidebar <div>s.
How are those headings and lists looking in the browser?
I love what you’ve done with the text, But the site doesn’t feel “newspapery” enough.
Even though we’re changing the format a little, I still want to keep it looking like the printed version.
What can you do to make the two look more alike?
Go pick up your local paper and think about how the type looks.
Is it serif or sans-serif? Are the lines spaced far apart or close together? What about the look of the newspaper’s typography makes it look “newspapery”?
Mix fonts to emphasize headings and other text Using a different font for your site can dramatically change the feel and emotion of  the design.
On top of  that, different fonts can make your text more readable and make life easier for your users.
There are two distinct categories of  fonts for the Web: serif and sans-serif.
A mix of  serif  and sans-serif  fonts can add a nice touch to pages and help separate content from headings.
It also allows you to render serif  fonts at a larger size and keep the body content in a sans-serif  that can be safely displayed in a smaller size.
Serif fonts used as large headings can create nice contrast from body content.
Because sans-serif fonts are easier to read at smaller sizes, they work well for main content sections.
Sans-serif means “without (sans) serif” and is composed of font families like Helvetica and Arial.
Sans-serif fonts are easier to read on screen because the relatively low resolution of computer monitors makes serif fonts look blurry, especially at smaller sizes.
This doesn’t mean you can’t use serif fonts on the Web; they just need to be used properly and rendered large enough so that they can be easily read by your users.
That’s not exactly what I’d call “subtle.” Couldn’t we introduce some variation by making the headings different sizes?
Remember, HTML’s a markup language and isn’t intended to convey style information.
The different heading levels are used to signify importance in your content.
This will ensure that the site is semantically correct and search engines are interpreting your content correctly.
Always remember that the heading number is a function of importance, not size.
Just because you can style the lower-level headings in larger fonts with CSS, does that mean you should?
Tonight’s talk: Serif and Sans-serif discuss readability and who makes the better web font.
I’ve worked with newspapers and books for years, so I can’t understand why I wouldn’t be a perfect fit for the Web...
Plus, the user can resize the text in their browser.
And what do you mean I look blurry on a computer monitor.
I thought this was supposed to be a civilized conversation? Can you back any of  that up with proof, big guy?
But you have to admit that there are some nice-looking serif  fonts, including.
Listen, just because you’re easier to read in a book or magazine, doesn’t mean you’re better for the Web.
All those little “serifs,” as you call them, make you look blurry on screen.
And don’t even get me started on how you look at small font sizes.
First of all, not everyone knows how to resize text in their browser, and there’s a huge difference between screen and print resolution.
Those fancy flat screen monitors still don’t even come close to matching the resolution of text printed on a page.
Ever try to read a whole book on your fancy computer monitor? The eye strain would be so bad, you’d never finish.
It is kind of  nice being the default browser font.
I couldn’t ask for better publicity right out of  the gate.
But you know, ’s out there spreading the good word on sans-serif, and ’s made some noise on the Web lately.
You could do wonders for my pages if I use you in the right place...
Keep this page open and tick off each to-do as you complete it.
Change up your XHTML to use the different heading levels.
Do you like how your lists look out of the box? If not, use CSS!
Don’t rely on your CSS to show what level each heading is.
Visit us here, tell us about your entry, and give us a URL so we can check out what you’ve done.
You changed up your XHTML and added CSS styles for your headings, body text, and maybe even lists, but how did you do? Why not tell us!
People read text off of a screen 15% slower than off a printed page.
Not only do they break up large blocks of text, but they also tell the user what the paragraph is about.
Sans-serif fonts are easier to read on a screen than serif fonts, especially at smaller font sizes.
You’ve got Chapter 7 under your belt, and you now know.
Will that hold you over? Please, I just need to order my <div>s, and you’ll.
Who’s missing out on experiencing your website right now? You may have a beautiful, well-laid out, easily navigable site...
Whether it’s someone who’s visually-impaired or just a user who.
But the owner’s got a problem: his site doesn’t work for those who can’t see! It turns out that the firm who did his site didn’t know anything about accessibility, and now he’s losing customers faster than you can say, “But I can’t see what your site looks like!”
It’s up to you to take Audio-2-Go to its audience: those who depend on accessibility every day.
These books are available in audio form for the visually impaired.
Do you see this site in full color at high-resolution? Then you’re probably not in Audio-2-Go’s core audience!
Accessibility means making your site work for EVERYONE So what exactly is accessibility? When a website can’t be used by someone with a disability, the site’s inaccessible.
When your site can be used by someone with a disability, then your site is accessible.
So, basically, accessibility is both the process and the techniques used to create a site that can be used by someone with a disability.
Web accessibility usually deals with visual, auditory, physical, speech, cognitive, and neurological disabilities.
And on the Web, accessibility also includes designing for older individuals whose abilities are changing due to age.
Accessibility is thinking about how DISABILITIES affect how people experience and enjoy YOUR website.
It sure seems like nobody considered I’d be using a screen reader for this site...
This site is a real pain to use without a mouse.
Both these users are having problems using the Audio-2-Go site.
How does your site READ? When you think about disabilities, one of  the first things you probably think about is the visually impaired or the blind.
Those disabilities have a huge effect on how your site is perceived.
The majority of  people who are blind use a screen reader to browse the Web.
A screen reader is a piece of  software that reads the text of  a website out loud.
While there are quite a few screen readers on the market, the most popular is JAWS (http://www.freedomscientific.com/jaws-hq.asp), a Windows-only product.
Mac users often use VoiceOver, a screen reader built right into the Mac OS X operating system (http://www.apple.com/macosx/features/voiceover/)
Regardless of  the product, a screen reader literally reads your page out loud.
A screen reader reads text on a web page based on the HTML markup.
Screen readers tell you what the heading level is before it reads the text.
You can’t begin to understand accessibility until you experience a website as someone who is blind or visually impaired does.
Open up JAWS (they’ve got a great free demo) if you are on a Windows machine, or VoiceOver if you are on a Mac, and turn your screen reader loose on your favorite website.
Now that you’ve got a bit of an idea about how the blind and visually impaired experience the Web, its time to see how Audio-2-Go’s website measures up.
Write down three things you learned about the site, and then what you think the overall site is about...
A site’s message should be clear...to EVERYONE Audio-2-Go’s message isn’t so clear verbally, is it? The whole point of  a website is to communicate something to your audience.
That means your job is to make sure your content is just as clear to someone using a screen reader as it is to a sighted user.
But when you “listen” to Audio-2-Go, a lot’s lost in translation.
Here’s what a few visually impaired users thought about the Audio-2-Go site:
My reader started listing what sounded like image names, or maybe filenames.
I heard a bunch of book names, and then some information about signing up.
Without your help, a screen reader will read image names, which is pretty confusing.
The order of your markup matters a LOT to screen readers...
Face it: computers are stupid! If  you want to get a handle on screen readers and accessibility in general, you have to accept that computers are stupid! A computer or a piece of  software can’t figure out that your image really represents a book, and that humans want to know the title of  that book.
So even though your page displays a book and an image that looks like a book, that’s not what a computer sees.
A human can look at a picture and describe what they see in clear descriptive terms.
Without any other information, all a computer sees is a filename and an extension.
How can you tell the computer what your image really is in a way you think a screen reader might understand?
A computer will read your image’s ALT text So what happens when a screen reader comes upon an image? Most of  the time it simply reads the filename...
Fortunately, img elements have an attribute that lets you provide your own description: the alt attribute.
If  a screen reader sees an image with an alt attribute, the reader reads the value of  the alt attribute instead of the image name.
A human still sees the image of a cute orange kitten.
The alt attribute goes inside the <img> tag and is used for short descriptions.
The computer (and screen reader) now see the alt text and read that instead of the filename.
Create an <img> tag based on the information for each image and the alt text that was provided by the owner.
Description: The Google Story: An inside look into one of  the World’s greatest technology startups.
The Google Story: An inside look into one of the World’s greatest technology startups.
Test Drive Try out the Audio-2-Go site with a screen reader.
Download the code for the Audio-2-Go site from the Head First Labs website.
Open up index.html in your text editor and add the alt tags from the last page.
Then fire up your screen reader and check out the Audio-2-Go site again.
Isn’t that description of the Google Story book a bit long? It’s gonna take like 10 minutes just to read the home page.
Nobody wants to see or hear a page that’s filled with text that’s not relevant.
Lengthy alt values are going to bog down your page and give information that’s not really needed.
What we need is a way to provide additional information about an element, but let a viewer or listener choose whether they want to access that additional information.
Most screen readers let you choose to hear the longdesc page of information.
Add a LONGDESC attribute to the Google book image tag.
Create an HTML file called googlestory.html and add a longer description.
You could even add more content from the book’s back cover if you wanted to.
Let’s convert the too-long alt text for the Google book to a longdesc...
Now the alt text is short and to the point.
The file you reference in longdesc should be normal XHTML.
Q: Does the page with the full text description need to have the same design as the site?
Description pages will only be viewed by users with screen readers.
So all you need is (semantically correct) marked up text.
A: longdesc is only “visible” for people using screen readers.
Sighted users won’t even know it’s there unless they view the source code for your page.
A: Unfortunately, longdesc is only recognized by newer screen readers.
Older screen readers didn’t have the feature built into them.
Thankfully, current versions of JAWS, by far the most popular screen reader, support longdesc.
Add the longdesc attribute to the image for The Google Story and create the corresponding XHTML file to hold the actual description.
Save your files and give Audio-2-Go’s main page one more run through with a screen reader.
Now your reader lets you check out more about the book without forcing you to listen to a long description if you don’t want to.
When I use a keyboard, it jumps right to the books, and I don’t know.
Mouseless users are still having lots of trouble getting around Audio-2-Go.
Your improvements are making a difference for SOME Audio-2-Go customers.
Lots of  folks out there have trouble with a mouse, or just prefer using the keyboard.
The Web without a mouse? Yup, it’s going on more than you might think.
And that means you’ve got to check your site out without a mouse.
Try getting around on the page just using your keyboard.
You’ll want to make heavy use of the Tab key.
Can you get around? What order do things appear in? Does that order match up with the visual order of elements on your page?
Use numbers to indicate the order that your keyboard lets you move through the Audio2-Go website.
TIP: If you’re using Safari, press Option-Tab to cycle through all the non-form elements on a web page.
Your job was to check out Audio-2-Go with only your keyboard.
How did your actual results line up with what your eyes were telling you? Did the Tab key do what you expected? Here’s the order of elements we cycled through:
Try using Audio-2-Go without a mouse and without your eyes.
Does the tab order seem more or less important to you when.
Tabbing through a page should be ORDERLY Whether you’re sighted or not, the Tab key should take you through a web page in the same order that your eyes would.
That’s the way most sites are laid out and the way we process sites visually.
For Audio-2-Go, then, we need to make sure the left-side text (Sign Up, Download, and Listen) comes before the book offerings.
That gives users more context and tracks with what they might be seeing visually.
All we need to do to fix this problem is add a tabindex attribute to our elements and explicitly order our elements:
So for each book link, we provide a tabindex attribute.
These books will come after any elements with a lower tabindex and before any elements with a higher tabindex.
Open up index.html and give a tabindex to all the elements that you feel need one.
Keep trying out your page using just your keyboard until you’re sure you’ve got the page just right.
Below is the majority of the Audio-2-Go index.html markup (we skipped the parts that aren’t relevant)
These links are further down in the markup, but this text should be tabbed to before the markup just above it (the book links)
These appear early in the markup but need to be ordered later for keyboard users.
These got tabbed to first, but we added explicit tab indexes just to be sure.
Test Drive What does a keyboardless Audio-2-Go feel like now? Update index.html to use correct tabindexes.
Then reload index.html and try working through it without a mouse.
The tab sequence should start with the page header and navigation.
The sequence should then jump to the page instructions (so users know what the site’s about)
Finally, the tab sequence should step through each of these books.
Remember, if you’re using Safari, you need to Option-Tab to make use of the built-in tab sequence.
The site seems more organized now that I can properly move through the site without a mouse.
With just a few easy changes to our markup, a large segment of our audience can now access and navigate Audio-2-Go.
You’ve turned a blurry, confusing site into a usable, clear business front-end.
Q: So without a tabindex, fields go in the order of my markup?
Browsers tab through elements in the order they are detailed in your XHTML, regardless of your CSS style.
Q: So why not just put things in my XHTML in the order they’ll appear on the online page?
Although with CSS making it easy to change display order, using tabindexes still isn’t a bad idea.
Q: The tabindex attribute can be geared toward people who prefer a keyboard over a mouse because they’ve got less motor control over their hands.
But what about people that have no use of their hands whatsoever?
A: There are lots of web users who for one reason or another—such as paralysis or amputation—simply cannot use a mouse.
Instead, they’ll use alternate input systems like pointing devices such as a head-mouse, head-pointer or mouth-stick; voicerecognition software; or an eye-gaze system.
Most of these systems will also pick up on your tabindexes...
Q: Not everyone who’s got a visual impairment is blind.
Visual disabilities not only include total blindness, but also include people who have types of low vision (also known as “partially sighted”)
This includes poor acuity (vision that is not sharp), tunnel vision (seeing only the middle of the visual field), central field loss (seeing only the edges of the visual field), and clouded vision.
Basically, color blindness is a lack of sensitivity to certain colors—such as red/green or blue/yellow.
Sometimes color blindness results in the inability to perceive any color whatsoever.
Q: Do we have to pay any attention to hearing disabilities?
A: Both deafness and hard of hearing are things that someone who is designing an accessible website needs to worry about.
This is especially important when you’re working on websites that include rich media content, such as video or audio.
Q: What other kinds of disabilities should be considered when designing an accessible website?
These include learning disabilities, such as dyslexia, attention and focus disorders, such as ADD, developmental disabilities that impact intelligence, and even memory disorders (things like unreliable short-term memory, missing long-term memory, or even the inability to recall language)
Q: How do you deal with all the cognitive and neurological disorders?
A: There are simple strategies that let you address cognitive and neurological disorders when designing an accessible website.
For those with developmental disabilities, include graphics and images as an alternate way of communicating information.
Also, sites with clear visual logic (something we covered back near the beginning of the book) help enormously to address many of the problems experienced by people with a wide variety of cognitive and neurological issues.
This whole accessibility thing is creating a lot of extra work.
It’s really easy to ask yourself  why you should care about accessibility.
It’s unlikely that your audience will have disabilities that impact how they experience your site, right? Is this really that big of  a deal?
Actually, you almost certainly have someone with a disability trying to access your site.
And if  that’s not convincing, consider just a few more reasons why accessibility is essential!
The law requires you to be accessible Section 508 of  the U.S.
Federal Rehabilitation Act requires that federal agencies make their electronic and information technology, including websites, accessible to people with disabilities.
In addition, many universities are requiring that all of  their official web content be accessible.
Everyone benefits from accessibility Many of  the enhancements and techniques used to make websites accessible to people with disabilities benefit those users without disabilities.
Accessible websites are often easier to navigate, more user-friendly, and download faster.
Accessibility can help your business Design studios with a strong understanding of  accessibility will have an enormous advantage over those that don’t.
For example, federal agencies who are required to abide by accessibility standards are sometimes unable to do so themselves.
This means that if  you have experience with designing accessible websites, you’ll have the opportunity to win those jobs.
Accessibility is the right thing to do Accessible websites represent an important step toward independence for many of  the disabled.
They provide crucial access to fundamental governmental and educational services and information that would otherwise be unavailable to individuals with certain disabilities.
Designing with accessibility in mind makes the Web a better place for everyone.
What can you find out about the WCAG online? What does this mean for the Audio-2-Go site? Summarize your thoughts below:
The W3C, the folks who come up with most web standards, have defined a set of guidelines that will allow you to build accessible sites.
Follow the WCAG guidelines and your site will be a lot more accessible than if  you don’t.
Ignore Priority 1 and you’ll definitely leave out some part of  a disabled audience.
The WCAG has to cover every conceivable possibility on almost every type of  site possible.
That means it deals with lots of  things that may not affect your site.
On top of  that, lots of  the WCAG checkpoints are things you should already be doing, like “Use the clearest and simplest language appropriate for a site’s content.” So many of  these checkpoints may already be done! To meet Priority 1, you just have to take care of  applicable checkpoints that aren’t already complete.
Take a look at the checklist on the previous page or visit the WCAG checkpoints online at http://www.w3.org/TR/WCAG10/full-checklist.html.
Ensure that all information conveyed with color is also available without color.
Organize documents so they may be read without style sheets.
Those stars that represent ratings on each book could be a problem...
But this time, the order has to make sense in the markup itself.
We’ve already done this by providing alt and longdesc attributes to our images.
To Do Provide a text equivalent for all non-text elements.
All color information must be displayed without color as well.
How does it compare with the list of things you thought we needed to do?
First, WCAG is a recommendation that was written by the W3C, the Internet’s governing body.
Although the W3C has no authority to enforce its recommendation, it is considered the standard in making sure sites are accessible to individuals with disabilities.
Q: Can you be arrested for not complying with WCAG? A: Not at all.
Plus, the W3C doesn’t have authority to arrest you (or fine you, for that matter)
Still, ignoring WCAG is like ignoring a part of your audience, and that’s not a good thing.
Even a few days spent on accessibility can have a huge impact on your site.
Q: Who decides if my site meets the guidelines? A: For the most part, you decide.
If you have followed along with guidelines and made an effort to make your site as accessible as possible to users with disabilities, you can call yourself accessible.
Because Section 508 is a law, there are online services you can use that check and make sure your code is accessible.
They will often allow you to post “badges” on your site that advertise the fact that your site meets the 508 requirement.
Think about accessibility as a CRITICAL PART of every website that you design.
The disability is far more common in men than in women.
To Do Provide a text equivalent for all non-text elements.
All color information must be displayed without color as well.
That’s why you must convey everything on your site with more than just color.
The rating stars for each book are colored based on the rating.
Color is the only means of getting that meaning, which violates WCAG.
I’m really having a hard time distinguishing some parts of this site.
Those are the colors that most people say are going to look consistent on different resolutions and monitors.
But is this palette really “web-safe”? Take a look a the same palette through the eyes of  someone with color blindness:
How do you think color blindness can affect your choice of color palette? Do the triadic and tetradic color palettes offer any help in dealing with color blindness?
These images are from a scan of a Visibone book (http://www.visibone.com/products/browserbook.html)
Here is the original color scheme viewed by someone with no color blindness.
This view shows a diminished color scheme, but most of the elements are still distinguishable.
Let’s take a look at Audio-2-Go through a few different sets of  eyes.
Depending on the cones available to the viewer, our nicely designed Audio-2-Go site can look totally different:
This is a rarer type of color blindness that affects yellow tones.
Protanopia looks very similar to Deutanopia when comparing the Audio-2-Go site.
The page looks bland, and the stars seem to blur together a fair bit.
Add a line break and a span to hold the rating number.
It’s not bad that they’re in color, but it’s bad that they only convey information through color.
Remember one of  the easiest ways to fix bad graphics or navigation? Add text!
So for the ratings, we can simply add in a textual rating.
Then, we can add the stars as a background image, just like we did with navigation back in Chapter 6:
Q: So we can’t use visual indicators, like the stars, anymore? A: You definitely can.
So if you use the visual of a thermometer, you’d need to put a textual description next to that thermometer.
Now there’s a graphical and textual indication of a book’s rating.
Depending on the class, we will display the appropriate colored star.
The rating class needs a 30px left padding to clear the way for the star.
To Do Provide a text equivalent for all non-text elements.
All color information must be displayed without color as well.
Now we can add the stars back into the page using CSS and the background property.
So we need to make some additions to our stylesheet screen.css:
Test Drive Color without depending on color? Update your versions of  index.html and screen.css.
Then reload the Audio-2-Go page and check out the featured ratings of  the books.
There’s more to ordering than just tabindexes You’ve already used the tabindex attribute to make sure that the Tab key moves through your document in the right order.
But the WCAG goes further: since there are certain accessibility devices that don’t use standard keyboards, your actual markup has to be in order.
In other words, to meet WCAG Priority 1, you’ve got to order your XHTML in the sequence your content should be viewed, regardless of any CSS and tabindexing.
Just because your XHTML is standards compliant doesn’t mean your XHTML meets this WCAG checkpoint.
Having your site validate as valid XHTML just means that your markup is correct and without errors.
The WCAG checkpoints make sure that you are using that markup to make your site as accessible to as many.
The two are related but not at all the same.
Here’s the same sequence of elements, but ordered how you’d want someone to view or hear the content.
To Do Provide a text equivalent for all non-text elements.
All color information must be displayed without color as well.
Hint: You may want to remove the tabindexes and use Tab to see how your page is “naturally” ordered.
Your job was to rearrange the chunks of the Audio-2-Go page so that it has a more logical flow when rendered without a stylesheet.
With your markup ordered correctly, go ahead and remove all the tabindex attributes from your index.html.
Not only are they unnecessary, they’ll let you ensure that you’ve ordered things correctly by using the Tab key.
Hey, doesn’t this mean we don’t need all those tabindexes now?
Rearrange the order of  your index.html and then reload the page.
Things should look the same, but now we’re WCAG compliant.
To Do Provide a text equivalent for all non-text elements.
All color information must be displayed without color as well.
Using the Tab key is a great way to verify your site stays in order even when you add new sections.
We’ve got another item we can cross of our list.
Can you take a look at our Books section? I just want to make sure we didn’t miss anything...
What WCAG checkpoints need to be taken care off on the Books page? Look back through the checklist on page 298 (or online), and see if there are any additional checkpoints that might apply...
To Do Provide a text equivalent for all non-text elements.
All color information must be displayed without color as well.
Now that you know what needs to be done to the Books page, open up books.html.
Update the XHTML to be WCAG compliant, and meet all priority 1 checkpoints.
Then turn the page to see if you caught everything.
These all have to be handled for the Top Titles page as well.
Your job was to update the books.html XHTML to be WCAG compliant and meet all priority 1 checkpoints.
To Do Provide a text equivalent for all non-text elements.
All color information must be displayed without color as well.
Did you get this one? Since the Books page has a table, we’ve got to add table headings.
We just need another table row, with a heading for each column.
This is the same change we made to the main page: we need text, not just images, for the book ratings.
This page was already ordered correctly with headings, then the Top Books list, and then the features.
It’s all well and good to implement accessibility measures, but you also need to test your site.
So how can you do this?  Well, there are a couple of  ways:
Get a copy of  the assistive technologies in question (like a screen reader) and take the site for a test drive yourself.
Or, even better, you can use software, such as Cynthia Says, that automatically checks a site for WCAG compliance (http://www.contentquality.com/)
Update both the home page and the Books page and see how Audio-2-Go looks.
You’ll never believe the email I just got! You really hit it out of the park with the updates you made.
Accessibility is both the process and the techniques used to create a site that can be used by someone with a disability.
To Do Provide a text equivalent for all non-text elements.
All color information must be displayed without color as well.
Good design is all about really listening to your users.
Your users can tell you what’s wrong with your site, what’s right with your site, how.
Ever since I started really listening to my users, people just can’t stay away from my site.
I barely have time to look at the stats over a.
They’re all complaining about the same problems with the site.
You built the site for me—now I’m going to have to ask you to fix it so it works...
How could we have missed these problems? We really need to find out exactly what’s going on from the users.
Let your audience speak to you through focus groups and surveys When you’re designing, redesigning, or fixing a site, you need to be able to ask your audience questions.
Who are they? How often do they use the Web? What kind of  computer do they use? What do they like about the site’s current design? Do they like the site’s proposed new design?
This is where focus groups and surveys come into the picture.
Both are great tools for giving your audience a “voice”—letting them give their opinions, answer your questions, and even give feedback in unexpected ways.
It’s important to know that surveys and focus groups have different strengths and weaknesses, and those could impact which you use.
Let’s take a look at some pros and cons of  both:
Can be administered in lots of  ways (paper, online, by phone, in person)
Participants can often complete the survey at their own leisure.
Collects information on a very specific topic from those who have a stake in the topic.
Benefits from a trained facilitator Public environment may intimidate some participants.
Remember, as we talked about in Chapter 4, surveys are a great tool for building personas at the beginning of your design process.
You’ve been hired to design a website for a local community access television station.
The client wants to add all sorts of cool—but bandwidth intensive—Flash interactivity and video.
You’re worried that this extra media might be too much for the site’s users.
You and some friends are launching a new social network for web designers and developers.
You’re at the point where you’ve got a couple of different visual designs (really polished storyboards), and you need to get some specific feedback on what your potential audience thinks of the site’s design.
You’re also pretty sure that your audience (who are designers themselves) will probably be up for sharing some their great design ideas with you.
You’re doing some volunteer design work for a local inner-city community center.
You really don’t know that much about the site’s users—gender, age, computer types, etc.—and you really need to find out so that you can target the design at the right level.
The director of the community center did tell you that some of your users might have a low literacy rate.
Read through each of the scenarios below and decide which method (survey or focus group) would be best for getting the information you need to make your design decisions.
You’ve been hired to design a website for a local community access television station.
The client wants to add all sorts of cool—but bandwidth intensive—Flash interactivity and video.
You’re worried that this extra media might be too much for the site’s users.
You and some friends are launching a new social network for web designers and developers.
You’re at the point where you’ve got a couple of different visual designs (really polished storyboards), and you need to get some specific feedback on what your potential audience thinks of the site’s design.
You’re also pretty sure that your audience (who are designers themselves) will probably be up for sharing some their great design ideas with you.
You’re doing some volunteer design work for a local inner-city community center.
You really don’t know that much about the site’s users—gender, age, computer types, etc.—and you really need to find out so that you can target the design at the right level.
The director of the community center did tell you that some of your users might have a low literacy rate.
Let’s take a look at whether a survey or focus group is the best choice for each of the scenarios.
Surveys are perfect for getting lots of information from a large group of people.
Surveys and focus groups aren’t free When you’re deciding whether to use surveys or focus groups to find out about your users, there’s another thing to consider: cost.
If  you start out doing user testing with the comparative costs of  surveys and focus groups in mind, that may help you decide which is the right route.
Printing and mailing (if you are conducting a paper survey)
Rent space to hold focus group (if you don’t already have it)
That doesn’t have to be money, but do you have the budg.
Now that you’ve got a good idea of the pros and cons of surveys and focus groups (and how much they could cost), write down the method you’d use to get feedback from the RPM Music site users.
A moderator will run the focus group–they’re highly skilled at what they do and generally don’t come cheap.
You can’t just open the door and grab the nearest person - you need to put a lot of time and effort into recruiting people who are representative of your site’s audience.
Which method for gathering feedback from the RPM Music users is probably the best, and why? Here’s what we thought:
A Survey! We need to get information from as many of the RPM Music customers as cheaply as possible (remember, we need to make the owner happy)
Also, using a survey will allow us to collect information on browsers and operating systems - which might just provide a solution to our problem.
You’re going to use a survey to try to get at the root of the problem? Ok, that sounds good.
You can use my customer database to get in contact with my customers.
Surveys are cheap and effective, especially when you give participants the option of completing them online.
We’re very excited to be talking to you today outside of  the World Wide Web.
Online Survey: I know, this is very exciting! It’s been years since I’ve appeared in ink.
Head First: So tell us, why the big move to the Internet? All those tags and hypertext seem a bit overwhelming.
Online Survey: Well, it just seemed like the right move.
I mean, sure, the initial setup took a little time, but after that I could just sit back and watch the data come pouring in.
Head First: Did you find that you received more attention as a web page than you did when you were printed on paper as a bubble sheet, say?
People have bad memories of  filling out all those bubble sheets in high school.
Also, being available online makes it easy for people to take me at their leisure.
Oh! And if  it’s a long survey, they can save their answers and come back later.
So where do you keep all that data? If  people aren’t writing it down, where does it go?
Online Survey: Sometimes I just send an email with the answers.
Most of  the time, though, I keep everything in a database so that I can go back later and quickly see the results.
How do you manage all that without losing your cool?
Online Survey: Well I’m going to let you in on a little secret.
I’m no wiz-bang programmer or database analyst, so if  it’s a complicated survey, I just use one of  the many free survey tools available.
They help me set up the questions, format, and even process the data, and then they send me the results.
In the end, I come out looking like the hero.
Don’t you feel like you’re cutting corners if  you don’t do all the work yourself ?
Online Survey: Hey, if  you want to spend all day writing code and HTML tags, that’s your business.
But time is money, buddy, and I just want to get my questions answered.
I don’t have time to deal with all those details.
Not only does an online survey save my users time, it also saves me time.
Head First: Well that seems fair, and who can pass up all those colorful charts and graphs?
Believe me, going online was the best move of  my life.
We wouldn’t be talking if  it wasn’t for the Web.
I’m sure we’ll be seeing you soon in some reader poll or career questionnaire.
Surveys Exposed This week’s interview: An online survey tells all.
Ask the right questions in your surveys So you’re going with a survey, but there’s a problem.
What questions are you going to ask, and how will you ask them? Oftentimes online surveys either ask the wrong questions or ask questions that return unreliable data.
You really need to invest some time in crafting your survey questions so that you get the best possible data you can.
Let’s take a look at what makes a good survey question.
Give your users an A, B, C, and D and make the options clear and concise.
If you confuse your users, they aren’t going to provide you with accurate information.
Q: What if I want to ask an open-ended question? A: Just don’t provide answer choices, and phrase the question so it’s clear that you want the participant to answer in their own words.
But if you asked survey participants to describe the technical problem they are having with a website, each of the responses will be different, and the results will not be numerically based.
If you ask an open-ended question, be prepared for more work when you put your results together.
Each response will be different, and you won’t get the same statistical (numerical) results that you’d get with other kinds of questions.
A good survey question does not lead the participants to any particular answer.
A good survey question is easy to read and understand.
A good survey question asks for knowledge or an opinion, but never both at once.
Now that you’ve seen what makes for a good (and not so good) survey question, it’s time to put your skills to the test.
Below you’ll find some survey questions that could use a little work.
Have a look at them and write down the problems with each question.
There are many people who believe that designing with web standards is a waste of time—are you one of these people? A.
Do you believe that the current single column layout website in question is bad and should be changed to a two-column layout? A.
Biased questions encourage your participants to respond to the question in a certain way.
They may contain terms or may be worded in a way that leads the participant to a specific answer.
Here all of the associated options are Internet Explorer (though different versions)
What if the respondent uses a different browser? Well, their only option would to choose “Other,” if it were available as option D.
That would ultimately skew the results (because you won’t get any differentiation between browsers besides Internet Explorer)
This question may also mislead participants into choosing Internet Explorer just because they have it in their system (as opposed to being their primary browser)
To make sure this question is not biased, we need to offer choices for different browsers (not just IE)
Let’s take a look at the survey questions and see what we can do to make them better.
Does your website code validate as standard XHTML or HTML? A.
Although this question if focused and simple, it falls into a common trap.
The terms “CMS” and “W3C-compliant” are only used by a small group of people within web technology circles.
Even though some users may recognize the terms, most won’t and you risk confusing and frustrating your survey participants.
Avoid using jargon in your questions and always try to write to the broadest audience possible.
Even without the jargon, it’s good to give users an “I don’t know” choice just in case.
Q: How do I know if I’m using jargon? And how can I get rid of it in my questions? A: Jargon is pretty subjective.
What is jargon to one person isn’t necessarily jargon to another.
There are two things you can do to make sure your questions are clearly written.
First, re-read your questions and think about your audience—try to phrase things as simply as possible.
Second, give your questions to someone who isn’t familiar with the subject matter.
They’ll tell you if they don’t immediately understand something you’ve written.
This will always skew the results and make the survey less credible.
It’s a strong opinion that you’re being asked to agree or disagree with, and that could lead your respondents’ answers.
Let’s take a look at the survey questions and see what we can do to make them better.
There are many people who believe that designing with web standards is a waste of time–are you one of these people? A.
Do you agree of disagree that designing with web standards is a waste of time? A.
This question’s problem is that it assumes what it asks.
This is a type of biased question that leads your participants to agree or respond in a certain way.
Instead of asking two things in one question, ask two questions.
These questions will be easier to understand and will result in more accurate data.
If you offer yes and no options, always give an “undecided” option to cover respondents without a strong opinion either way.
Do you like or dislike the current one-column layout in the website in question? A.
Do you believe that the layout of the website in question should be changed to a two-column layout? A.
Do you believe that the current single-column layout website in question is bad and should be changed to a two-column layout? A.
The problem with this question is that it’s two questions.
What if they agree with one but not both, or disagree with part or all of the question...
How do they answer then? This can make them feel frustrated and could lead them to quit the survey without finishing it.
It’s time to start building your user survey to help RPM Music.
Make sure you write questions that have answer choices, are short and straight to the point, and don’t lead the respondent.
How many hours/week do you spend on the internet? A.
Let’s take a look at some possible technical and demographic/usage questions you could ask RPM’s users.
This is an important question because some browsers have peculiarities in how they render CSS.
As you discovered back in Chapter 4, screen resolution can have a big impact on how your users view your site, so it’s important information to have.
Do your users even buy music online? This may seem like an obvious question, but if you don’t know, ask!
Gender’s one of those questions that all surveys ask, regardless of their subject matter.
Depending on the site’s content, gender can play a large or small part in your design decisions.
How many hours per week do you spend online? A.
The amount of time a user spends on the Web speaks to their experience online–which impacts how they use your site.
These questions will help us get a better idea of the types of technology our visitors use to access the RPM Music site.
Here’s the completed survey ready to upload to the site (or use a survey service to conduct it for us)
How many hours per week do you spend online? A.
Please provide any other feedback about the new RPM Music site:
Q: Is there a limit to the number of open-ended questions I can include? A: Not really.
Open-ended questions are a great way to get specific answers and feedback from your users.
However, because there are no answer choices, they take more time to analyze and interpret and can sometimes be vague or not answered at all.
Also keep in mind that these types of questions take longer to answer and require more commitment from your users.
Let’s take a look and see how our users responded to the RPM Music online survey.
The results in this column are also very typical for other sites and the Internet as a whole.
Looks like the RPM audience spends a fair bit of time on the Net every week, too.
That means they'll be more savvy about how websites work than if the results had skewed towards lower weekly hours.
It would be really nice if I could buy digital tracks—ya know, like iTunesinstead of just getting the CD shipped to me.
I really like talking with the people who work there as well as other customers.
I guess the site is ok—it looks good—I just won’t use it that much.
Parts of the pages don’t look like they're in the right place, and things don’t make sense.
Can you fix this? I want to keep buying stuff from you guys, but it’s a little difficult with a messy site.
When I went to look at the site in Explorer, it looked all weird.
Now that the results from the survey are in, start thinking about how all the information relates to each other.
Finding patterns and connections can help shed some light on why RPM’s users are having trouble with the site.
Browsers are the lens that you see the Web through–and not all browsers are created equally.
Jim: Oh, is one “brand” better than another? Is that why a lot of  the RPM users seem to be using Internet Explorer?
What I mean is that some of  the browsers have peculiarities (in some cases, you might even call them bugs) that result in pages looking slightly different on one browser than they do on another.
And since we want all of  our users to have the same experience regardless of  what browser they have, we need to take the peculiarities of  each browser into account when we’re designing the site...
Frank: Web standards are part of  the big cross-browser compatibility picture.
Because the W3C works collaboratively with browser developers (among other people and companies), web standards are (mostly) baked right into the browsers themselves.
So when you design to web standards, you can be fairly confident that your site will look the same browser to browser.
Frank: Ok, bugs—that won’t display standards based XHTML and CSS the same way.
Frank: Well, first off, you should always use standards compliant CSS and XHTML.
Finally, there are some code-based workarounds—you may have heard of  them already, they’re also known as CSS “hacks”—that will help you bypass cross-browser computability problems (just like the ones the RPM Music site is experiencing)
OK, looking at the results from the survey, it seems like our IE users are saying they’re having the most.
Q: What if I don’t have an easy way to find out what browsers my visitors are using?
A: If you can’t get ahold of reliable browser statistics for your site, you can always use generic stats.
Q: Where can I get generic browser stats? A: There are lots of sources out there.
The thing you have to realize is that no web statistics are completely accurate, and they may not be reflective of your users.
But in the absence of any other kind of data, this is a start.
Q: If I don’t have a specific browser on my computer, how do I test to make sure the design looks right?
Not everyone has every browser on every operating system available for testing designs.
The best thing to do is to check your site on all browsers available for your system.
For example, if you’re using Windows XP, check your design on Internet Explorer and Firefox (available as a free download)
This will be a good start and probably get you 90% there.
To check the rest of the browsers out there, use a service like Browsershots (http://browsershots.org), which will take screenshots of your site on every browser/operating system combination and then allow you to download the results.
One of the biggest issues with IE is that it has some pretty serious bugs that impact how it displays CSS.
Fix RPM’s CSS bug by moving the hover property IE 6 doesn’t handle the :hover pseudo-property very well (actually, at all)
We need to move our “active” class to the link tag instead of  the list item and update our CSS file to apply the background to the correct element.
When we mouseover nav items, we should see a background appear.
Because IE6 doesn’t support the :hover property on anything besides links, our navigation won’t work properly in that browser.
Make sure you also update the CSS file to reflect your changes.
Open up the index.html file and move the “active” class in the navigation to the link tag.
Open rpm.css and change the location of the :hover pseudoproperty to the correct element.
Launch the site in a browser and make sure everything looks as it should.
If you’re running Internet Explorer 6, you should see that the hover now appears properly.
One of the biggest issues with IE is that it has some pretty well-known bugs that impact how it displays CSS.
Let’s take a look at the quick fix for the RPM :hover problem.
Nice work! I think this is going to put an end to the frustrated emails from users.
Not only is this semantically correct, but it won’t mess with IE6
Don’t forget to change the XHTML for the other pages as well.
Both the active and hover states share the same background color, so they can appear in the same rule.
If  you want to know how your audience is actually using your site, you need to do some user testing.
User testing, also known as usability testing, lets you evaluate a website by testing it out on actual users.
You’ll see where users go, which pages they spend the most time on, where they get confused, how they move from point A to point B on the site, and a lot more.
User testing can identify known problems, locate unknown problems, and pinpoint usage patterns that could inform a redesign.
But you don’t just have to watch users interacting with your site, you can give them tasks and evaluate how they accomplish each task.
Always remember it’s the site you’re evaluating, not the user.
This is important because you don’t want to give your participants (who are taking time out of  their schedule to help you) the perception that you’re testing them.
User Testing: Let your users tell you how they use your site.
You don’t have to wait until you have a finished product to do usability testing - you can do it at any time during the design process.
Wait, what about the emails from users who were having trouble finding info on the site...
Surely you’re not going to fix that with CSS, too?
I think we should have paid more attention to the people who are actually using the site.
We need to go back and do some usability testing on the RPM site–and do it quickly.
We really should have baked usability testing right into our design process from the get go, but there’s no reason we can’t test the site after the fact.
Usability testing’s a great way to figure it out a design problem because you’re looking at how actual users are using your site.
Jim: Okay, I hate to rain on your parade, but testing sounds expensive...
Joe: I have a friend who works in professional user testing.
It’s big business, and her company doesn’t just do websites—they user test all kinds of  products.
But professional companies like that cost tens, even hundreds, of  thousands of  dollars.
Joe: They often have dedicated usability labs with computers that capture every keystroke and mouse movement, microphones that record every user comment, cameras that record the entire test, and even eye tracking devices that record where the user’s eye was focused at any given time.
Plus, they’ve also got a horde of experts who can process all of  the data from the tests and provide comprehensive reports and recommendations.
Any chance your friend shared a few of  her secrets, Joe?!
Just because you don’t have a fancy lab doesn’t mean you can’t do useful usability testing.
There are lots of  budget-minded techniques we can use to test how real people use the RPM website.
All you really need to do your own usability testing is a solid plan, a computer, a few people to run the test and some willing participants.
There’s even been some pretty impressive and inexpensive software—like Silverback, http://silverbackapp.comthat’s been coming onto the market recently.
These applications can help you do some pretty sophisticated user testing without a crazy expensive lab.
In a real usability test, you wouldn’t have to write down your thoughts or findings.
Instead, you would just “think out loud,” and someone else would write down or record what you said.
Don’t forget to write down the prices of the flights.
Selecting dates and times for the flight was pretty straightforward.
The “Morn” and “Eve” options should be at the top of the dropdown list.
If you don’t know the exact airport, Expedia asks you to choose one.
That particular screen is crowded and the “submit” button is hard to find.
Switching from Economy to Business class was easy, but that option should also be on the home page.
You might get different results, but these should be close.
We had both negative and positive experiences with the site.
Picking the flights was straightforward, but option switching became a problem.
Sometimes the interface works well but something is missing or feels out of order.
The building blocks of budget usability testing So what exactly do you need to do a decent usability test on a budget? Here are the basics:
What are your goals (what do you want to accomplish with the usability test)? How are you going to accomplish those goals? What are your tasks going to be? Who are you going to recruit to be your participants? If  you don’t have a solid plan, your usability test will be a mess from the get go.
Moderator Script: A moderator script is basically the script for the entire usability test.
How it will run, what the tasks are, and what needs to be told to the participants.
Moderator: The moderator is the person who runs the usability test.
They talk to the participant, tell them what they need to do, and give them clarification if  they need it.
Note Taker: The note taker is the person who records what the user does, what they say, etc.
They basically collect the data that will be analyzed after the test is finished.
If  you don’t have a lab, this could be your office, a quite coffee shop or even the corner of  a local library.
Participants: You need someone to actually participate in the test.
It won’t do you any good to select participants who would never use your site.
You also need to compensate participantsgive them something for their time.
Use a moderator script to organize the test If  you want to get the best results from your user test, you need to make sure you’re well organized and that the test runs smoothly.
That means knowing the exact sequence in which everything happens, what you’re going to say to the participants, and what tasks you’re going to have them perform—and that’s what’s in a moderator script.
We’re trying to understand how people interact with multiple air tr avel websites during.
In this session, we’ll first discuss why and how you use the Internet in your daily life and how you might.
Then I’ll ask you to complete one task scenario on two air travel.
As you’re completing the scenarios, please speak aloud to let me know what you are doing.
I’ll ask you some questions after you have filled out a brief  feedback questionnaire.
Remember that this is an evaluation of  the website’s ease of  use and not of  your ind ividual performance.
When you do the usability test, you’ll actually read this portion to your participants.
A schedule will keep you on track and make sure the test runs as smoothly as possible.
Background Interview A background interview provides information about the participant’s general internet usage as well as their experience with the kind of  site that’s being tested.
What time(s) of  day do you tend to use the Internet?
What types of  work or school-related activities do you perform using the Internet?
What are the main issues you have when you visit websites in general?
What is a scenario in which you might use a website like the one being tested?
These are the tasks that the user will perform, which you will observe them complet e and record what.
The tasks you come up with are the “test” portion of  a usability test.
Think of some user tasks for the RPM Music site that a typical user might go through.
Do the background interview with your participants before you run the test.
Post-study questions are designed to get the participants overall impressions of  the s ite (or sites) being.
To what extent did the content of  the website meet your expectations?
Overall, how easy was it to understand the organization of  the website’s sc reens, especially the menu.
Let’s take a look at some possible tasks ( that a typical music site user might do), which you can use for your RPM Music usability test.
Search for Chicago’s Greatest Hits and place an order with RPM Music (test payment information will be provided)
Make sure that the tasks you pick don’t focus exclusively on one section of the site or one specific feature.
These questions cover the participant’s experience during the test and their opinions about the site in question.
Now that you’ve got all the parts of your moderator script, put it all together in a document.
Fill in any missing pieces, and you should be good to go.
Write a quick schedule and study overview that includes what you’re going to say to your participants about the test.
Write a quick background interview to find out a little more about your participants.
Come up with some tasks that you think might help you solve some of the site’s problems.
Finish up the script with some post-study questions that tie the user test together and get some final thoughts from the participant.
This may seem unimportant, but when we say moderator script, we mean everything.
Gather and have ready any consent forms you may need for the test.5
This is only necessary if you’re doing this for a large company or university.
In our case, we’re just using friends–so we don’t have to worry about this.
These will be your demographics that will allow you to look for trends in your users.
Let’s take a look at what your RPM Music usability test moderator script might look like.
We are very interested in obtaining feedback about the RPM Music website and online store.
In this user test you will be asked to complete a series of tasks on the RPM Music website that will help us evaluate the efficiency and usability of the site.
After the task portion of the test, you will be asked to complete a short survey about the site and your experience using the online store.
While taking the test, please be sure to “think out loud” so that our moderators can record your reactions to the tasks.
Finally, the moderators will not be able to assist or speak with you once the test starts.
A background interview provides information about the participant’s general internet usage, as well as their experience with the kind of site that is being tested.
Make sure you’re staying on track and not wasting your friends time.
Use this script so you don’t forget to tell your participant something.
But what exactly do I do with it? Don’t I need someone to actually interview?
Two to three tasks is enough–your friends probably have places to be.
Remember the Expedia task you did earlier in the chapter? Now it’s your turn to have a friend or family member perform the task, so you can get a taste of what it’s like to be the moderator.
Make sure you have them speak out loud and record your observations below.
Wait a second, should we really be using our friends? What if they aren’t part of the target audience?
Friends and family can be a problem When you’re doing usability testing on a small budget, you’re probably thinking that it would be easy to grab some friends or family and have them do the test.
And you might also be thinking that you could persuade them to skip the compensation (because they are friends and family, y’know)
The problem is that when you use friends and family for a usability test, you introduce bias into your study.
Because they’re close to you, they might not be willing (either consciously or unconsciously) to give you unbiased feedback.
Also, when you’re choosing your participants, you need to choose people who would actually use the site.
It’s more than likely that the people close to you aren’t part of  the intended audience of  the site, and, therefore, if  you choose them, you may not get the results you need.
Q: How many participants do I need for a user test? A: The more participants you get, the better (and more representative) your results will be.
If you only have one or two participants, you’re really only testing it on them.
The results won’t be representative of a large population; they’ll just be their own opinions.
Q: No, really, how many participants do I need? A: There’s no real right answer for that question.
But, generally speaking, you should shoot for a minimum of 8-10
Q: What if I can’t recruit that many participants? Should I just avoid the user test entirely?
A: No, even a usability test with a small number of people (or even one) is beneficial.
The results of the usability test–what the users are telling you.
Why don’t you have a contact section? You have a whole page about the company but never tell me where you are.
The design is nice, and I think it’s a huge improvement over the old site.
I especially like the blog–it’s cool to hear what you guys are up to.
I had a hard time finding the contact information–it took me forever! Who puts contact.
Users who can’t find what they’re looking for probably won’t come back.
Looks like our users are a little confused by the navigation menu.
They’re having trouble finding the contact information because it’s buried below a nav item that’s incredibly confusing.
What does “etc” mean? This could be anything and is confusing our users.
How are they expected to know that our contact info is below this link? We need to change up the link text.
The rest of the navigation seems to be getting users to what they are looking for.
Just tell them what they can expect when they click the link.
And we found the problem by conducting the usability tests and listening to the users.
Hmmmm, do you have any hard data—numbers—to back all this up? I’m a little skeptical that one little link was the cause of the problem.
Site stats give your users (another) voice Site statistics are a handy way to find out more about what your users are doing—which pages they're hitting (and how often), which are their favorite pages, where they’re coming from (referrers), and what searches they might be running while they’re on the site.
You can get at your site statistics by using an application (either on your server or on another server) that captures, measures, and reports all sorts of  information on your site’s traffic.
Whatever name you use, website statistics or analytics, it’s a great way to get information about how your site’s being used by your audience.
The great thing about Mint is it can be extended by plugins called Peppers.
These Pepper plugins and widgets (which are available at the Pepper Mill http://haveamint.com/peppermill/) are developed by all sorts of  people all over the web and will work seamlessly with your Mint install.
Google Analytics Google Analytics (http://analytics.google.com) is a free service offered by Google that generates detailed statistics about the visitors to a website.
Although Google Analytics can provide detailed information about page views, referrers, browser versions, etc., it’s geared more towards marketers than designers or developers.
Google Analytics works based on a system called “page tagging,” in which a little bit of  Javascript is inserted into every page on the site.
Every time that page loads, the JavaScript collects anonymous visitor data, sends it back to the Google mothership for processing, and then displays it in a handy dandy dashboard format (at the Google Analytics site)
Google Analytics is free and has great data visualization, like line and bar graphs.
Bringing in the site statistics really clinched it for m.
Although some people were finding the contact information, it still had very little activity.
This is a direct result of users not knowing what to expect there.
Surveys are great for collecting information on a broad range of topics from a large number of people.
Open-ended questions are designed to provide qualitative data, but they can be complicated to deal with because each response will be different, and you won’t be given the same kind of nice, statistical (numerical) results that you’d get with other kinds of questions.
Usability testing is designed to evaluate how real people use your site.
Site statistics (site analytics) provide usage data about your website, such as page views, referrers, popular pages, and browsers.
You’ve got Chapter 9 under your belt, and now you’ve.
I’m so excited to be able to post pictures to my new blog! Our.
Now it’s time to kick back, relax, and watch the visitor numbers grow, right? Whoa, not so fast.
Take a moment to look over them and feel proud of  yourself.
But although it’s beautiful, you can’t sit around admiring your portfolio all day.
Working with Jane, you’ve got some truly impressive projects under your belt, and you’ve helped establish Red Lantern’s reputation for being an innovative and cutting edge design studio.
But to keep that reputation intact, you need to make sure the Red Lantern site’s up-to-date, too.
Keeping your site and content fresh keeps your users coming back If  you’re a web designer (either individually or as part of  a larger studio), your site is your own best PR.
It doesn’t just showcase your project work, but it also highlights your skills, aesthetic, and design sensibilities.
So you need to make sure that your site always represents your best and most progressive work.
This also means that you can’t let your site linger with the same content (and features) for too long.
A site that remains unchanged sends a message to your users.
It says “Hey, I haven’t changed in forever; there must be something wrong with the company.” Fresh content will sent a positive message to your users and keep them coming back.
Keeping Red Lantern’s site current should be no trouble with your web design skills, and I’ve brought in a junior graphic designer to help out.
The new graphic designer at Red Lantern has been hard at work on a couple of update ideas for the site.
We’ve left space for you to make notes on the pros and cons of each below.
There’s too little contrast between the background and main content.
What did you think of the graphic designer‘s ideas for the Red Lantern site? Are there elements of one (or both) you could use in a redesign?
Changing your site radically every three or four months can be problematic.
They’re used to the way the site looks and changing it radically could confuse them.
So how do you keep them interested and coming back for more? You can take an evolutionary design approach to updating your site, incrementally changing the design aesthetic and features.
This way, your site will still feel familiar to your users, but it will also be new and fresh.
This design gives a larger section of the page to the main content.
A single column better highlights the sites in the portfolio since each of them now has more whitespace to the left and right.
Positioning the tagline over the header image draws attention to it, but subtly, since the image is screened and still visible behind.
Use CSS to evolve your site’s design The great thing about designing with web standards is that when you want to change up your site’s design, all you need to do is edit the CSS.
Small updates to the HTML file (headers, adjustments to markup)
Make a copy of  the original CSS file and link it up in the HTML document.
This way, you can always revert back to the original CSS file.
Open up the current Red Lantern site files, copy the main CSS file and rename it to something different.
Now you can change the page style without affecting the original design.
The new file will hold the updated rules and allow us to go back to the old design if need be.
Make sure that you aren’t editing the original version of the CSS file.
Now that Jane’s settled on a new design for the Red Lantern site, it’s time to get to work revising and editing the site’s CSS and markup.
Remove the <img> tag (the header's background image will move to the CSS file)
Our text wrapped, but this is all one line in the file.
Because it’s an exact copy of the original, it will look the same but will act as the framework for the new changes.
The only changes you need to make to the markup are linking the new (copied) stylesheet and removing the header image from the HTML (we’ll use CSS to add it back later)
Update the new CSS file to reflect the following changes.
The code you need to change is on the next page.
Add a subtle rounded corner to the layout and slight drop shadow to separate the main layout from the background.
Move the header tagline from the body to a <div> in the header image.
Add new rules to screen_new.css so the Red Lantern site matches the comps from the graphic designer.
We crossed out the old rules; you just need to add the new ones.
The #masthead rule is where we need to put the rounded corner image.
Because the logo image has changed, you need to adjust the nav list so it’s positioned properly.
This is where you need to add the main image we removed from the header.
Then the <h1> can be repositioned to match the designer’s comp.
The columns are different widths now, so you need to break up this rule.
Style the <h2> to match the typography in the comp.
Let’s take a look at the changes you made to the Red Lantern CSS file.
Remember, rules that were not changed or removed can just be left the same as the old site.
Adding a height and background image, we can give the corners a simple rounded look.
Now that the main image file is no longer hardcoded into the HTML file, you can use a new image as the <h1> background in the CSS file.
This lets you keep the semantics of the <h1> tag but make the text appear as though it’s part of the image.
These final adjustments make the sidebar align and the overall look of the portfolio match the design comp.
Ok, now that we have the stylesheet thing taken care of, I have another gripe: I want the portfolio to be a little more interactive.
Right now, you just click the picture and it takes you to the site.
Take a look at the following ways to make the sidebar portfolio more interactive.
Match the technique with its list of pros and cons.
Cons: Some browsers may have this feature disabled or not fully support it.
JavaScript looks like a great way to add some interactivity to the sidebar portfolio.
Pros: All code is standardscompliant and will work in most browsers.
Cons: Some browsers may have this feature disabled or not fully support it.
Flash adds interactivity at the expense of hiding all your content in a single SWF file.
Although you can do some neat things with just CSS, it doesn’t offer the level of interactivity that the owner needs.
JavaScript is very flexible, and when it teams up with XHTML and CSS, it can be very powerful.
You don’t need to be a crack programmer to add interactivity with JavaScript.
It’s used for all kinds of things from screen effects (like image lightboxes) to UI elements (such as sliders or accordion menus)
The problem is, JavaScript can be intimidating for someone who’s only had experience writing XHTML and CSS.
These are pre-written JavaScript functions and controls that you can put in a directory on your server and call from within your markup.
The cool thing is that you don’t need to know very much JavaScript to take advantage of  these libraries.
Want to really dig into JavaScript? Check out this book; it’s pretty awesome.
Hold on a second—I have to write JavaScript? That’s complicated stuff, and I’m not a programmer!
Libraries like Facebox are a great way to add interactivity and highlight images and galleries on your site.
When you click a thumbnail image, a larger copy of the same image is loaded in the center of the screen...
Lightbox has come to mean any effect that takes an image or HTML page and displays it in a floating box in the middle of  the screen.
In some libraries, the background of  the site fades out to add emphasis to the floating box.
This particular type of  lightbox mimics the look of  the pop-ups found on the Facebook social networking site.
It’s going to look great with the updated Red Lantern design.
This will match how the files linked in the JavaScript.
The two main .js files will take care of the screen effects.
All we have to do is link these files to our HTML file, and we’ll be good to go.
Add the CSS file to the header of  the index.html file.2
Add the JavaScript links and code to the header of  your index.html file.3
The box that appears on the screen has its own stylesheet that controls how the box appears.
Add a link to the facebox.css file in the document after the Red Lantern stylesheet.
You need to add links to the new JavaScript files.
Below the links to the JavaScript files is a small bit of code that readies the Facebox JavaScript to act when a link with the proper rel attribute is clicked.
The Facebox code then takes over and uses the linked files and CSS to render the effect on the page.
Using this example above as a guide, add the Facebox effect to the rest of the list items in the portfolio.
Remember to link the thumbnails to their full-size versions and provide the proper rel attribute to the link.
Add links to the portfolio images that point to a larger version of the same file.
Basically, think of the image as if it were text inside the link tag.
The rel attribute describes the relationship of a link to the current page.
Here it's used to tell the Facebox JavaScript when a particular link is clicked.
The rel attribute is used to describe the relationship between two resources.
In the lightbox case, the link relationship is to the lightbox effect.
This is purely a semantic relationship, but other resources (like JavaScript) can use that attribute to treat those links differently then a normal site link.
Let’s take a look at what our portfolio markup needs to look like for the lightbox effect to work properly:
Each link needs to have the rel=“facebox” attribute for the effect to work properly.
Without that bit of code, the JavaScript wouldn’t know to execute.
Images aren’t the only thing that can appear in the lightbox.
Text content within a tag or complete HTML documents can also be displayed through the lightbox.
Add all the images and files to your own file structure and load up the page in a browser.
Q: You mentioned JavaScript might not be fully compatible with some browsers.
What will happen if a user’s browser doesn’t support it?
If that happens, since you added a link to the larger image, instead of displaying in the center of the existing page, the browser may still take a shot at displaying the linked image in a new blank page.
Users would need to use their browser’s back button to get back, but they may still be able to see the larger image.
Q: So if I can put text in a lightbox too, wouldn’t users miss out on that if their browser doesn’t support JavaScript?
Different browsers handle JavaScript differently, and as you can never be sure what level of support your users’ browsers will have, this is another good reason to use JavaScript sparingly.
If you’re going to use it, make sure the content that it displays isn’t crucial to your users’ understanding of the site and its content.
If you want rich, animated, multimedia sections, Flash is a good bet, but here we’re just showing a larger version of an image.
Of course Flash has its own set of limitations (browsers need plugins, not all content is 100% accessible, and so on), so if you’ve got a site that’s mostly contentbased, it’s best to stick with HTML and CSS for the main presentation and add touches of interactivity here and there with JavaScript or Flash.
I don’t know, are they going to keep people coming back to the site regularly? I know our designs are awesome, but I doubt users will be hitting.
What do you think? How else could we add new content to Red Lantern to keep users coming back over and over?
Blogs have become a powerful tool for creating two-way communication with your users.
You posting entries, and your users have the opportunity to comment on your posts and each other’s comments.
A blog is a relatively easy way to add a constant stream of  content to your site—which means that your site will always look fresh and give users a reason to come back.
Blogs also give your site a “voice.” Instead of  your site being somewhat anonymous, you can speak through your blog posts and reach out to other people.
If you’re going to start a blog, make absolutely sure that you’ve got the time to post regularly.
There’s nothing worse than your users coming to your site, only to find that the blog hasn’t been updated for 6 months.
The only way to attract readers is to give them something new and interesting to read on a fairly regular basis.
The JavaScript stuff looks cool, but it’s a onetime thing.
She thinks it would be a great idea for the new version of  the Red Lantern site to have a blog.
That way you guys can write design articles, post news about Red Lantern, and generally have a better avenue of  communication with your users.
Jane’s done some research and wants to use WordPress (http://wordpress.org)
This is default “Kubrick” theme that ships with WordPress and is designed to work with all of the special features of WordPress.
WordPress is open source–which means there are thousands (perhaps even tens of thousands) of developers around the world contributing their efforts to make it better with every version.
Add a WordPress blog to the Red Lantern site To get Red Lantern’s blog up and running, you need to download WordPress and get it set up on the server.
WordPress requires a server with PHP and MySQL (an open source relational database) to operate properly.
If you don’t have access to a server or hosting plan (most web hosts fully support WordPress), check out this site and learn how to run WordPress locally on your PC or Mac using XAMPP, an installable set of software that gives you a working web server on your desktop.
Download WordPress from http://wordpress.org and put a copy into the main site directory of Red Lantern.
Rename the folder “blog” so that you can access it at:  http://redlanterndesign/blog Copy all the downloaded files from the WordPress folder to the /blog folder.
Complete the WordPress installation and get the Red Lantern blog up and running.
Edit and rename the wp-config.php file so that the parameters match the ones from your own setup.
Following the installer, get the basic blog up and running on your local machine or server.
Follow the WordPress installer to get the Red Lantern blog up and running.
These four database parameters are needed so that WordPress can build the database tables that will hold the blog data.
To start off, I’ve got to ask, what’s with the name? Blog? Sounds like the sound a dog makes when it’s throwing up!
Blog: Really? Is that how this interview is going to go? Ok, I’ll bite.
The name “Blog” is a shortened version of  “weblog,” which is a combination of  the words “web” and “log.” Basically, back in the day when blogs first started out, they were just a log of what people were doing on the Web (cool sites they’d visited, funny photos, yadda, yadda)—hence the name weblog (and then blog)
Head First: Sorry, maybe that wasn’t the best way to phrase the first question.
You’ve certainly come a long way from those early days haven’t you?
Blog: You bet! Blogs have become a really powerful tool for communicating on the Web.
You see blogs everywhere—from personal sites to big corporate sites.
If  there are that many people using blogs out there, it must be super duper easy to set them up?
Head First: Yes and no? What kind of  answer is that?
The good thing is that blogs have become so popular, there are lots of  accessible solutions for a wide variety of  people with a wide variety of  tech savvy.
Head First: Ok, that sounds good–can you talk about some of  these solutions?
Blog: Well, blogs generally fall into two categories: hosted and installed.
Hosted blog systems are created, administered, and maintained by a third party (usually administered by the user through an easy-to-use online interface)
Because the service lives on the host’s server, you don’t have to deal with installation or server configuration yourself.
There are free hosted blog services (like blogger) and paid hosted services (like movable type)
Blog: Installed blog systems are basically software that you install on your own web server that run the blog.
The good news is that there are a handful of  installed blog systems out there (namely WordPress) that make it about as easy as it can get.
Head First: Wow, I never knew that there was so much to know about blogs.
Take a look at what the blog looks like after you complete the WordPress installation.
The sidebar will show links to pages, archives, links and categories within the blog.
WordPress installs a “Welcome” post so that something displays on the blog’s home page.
Hey, Hot Shot, I hate to rain on your parade, but this blog doesn’t look very red to me...
Change the look and feel of your blog with themes.
Themes for WordPress allow you to change the design of  your site by uploading new designs for use in the software.
The themes are a collection of  files in a directory that hold the PHP code, markup, style and images of  the new design.
Once uploaded, you can activate a new theme from the WordPress admin panel.
You can build your own themes for WordPress so that they better match the rest of your site.
Check out this tutorial to get you started on building themes:
This is the main blog folder that holds all the WordPress files and folders.
Once you upload the theme, it can be activated on the Design menu in the admin panel.
I think our users will be really pleased with what we’ve done.
A design update and some tweaking of images and CSS.
You’ve got Chapter 10 under your belt, and you’ve added.
Fresh content will send a positive message to your users and keep them coming back.
JQuery is a library of pre-written JavaScript functions and controls that are put in a directory on your server and then called from within your markup.
Hosted blog systems are created, administered, and maintained by a third party (usually administered by the user through an easy to use online interface)
Installed blogs are made possible by software you install on your web server—they require a database of some sort (like mySQL) and support for a server-side language (like PHP)
I can’t even afford a pair of pants since my design got ripped off by a rival web design firm.
Business in a web design book? Are you kidding me? You’ve mastered pre-production, information architecture, navigation, color, and even accessibility.
What’s left in your path to web design mastery? Well, you’re going to have to.
Let’s look at establishing good client relationships and understanding your intellectual.
The result? Increased profits and protection for your hard work.
The newest potential client: the Foo Bar Jane at Red Lantern just got wind of  a big potential client: the Foo Bar, a popular restaurant that needs an online presence.
After all the work you did for Jane with Red Lantern, she’d like you to take on the work.
She’s willing to pay you well and give you a stake in her company if  you can get the Foo Bar gig.
I don’t like doing work on spec, but I think this job’s in the bag...
A basic HTML mockup of  one page of  the site, showing off the site’s overall look, feel, and layout.
A color scheme for the site, including which design elements would have what color, represented in the HTML mockup.
A few succinct ideas for branding and logos that would fit in with the Foo Bar’s new online presence.
Here are some colors inspired by the building and bar.
Spec work refers to doing a lot of work before getting paid.
In this case, the Foo Bar owner wants a site mockup to look at before he commits to your work and Red Lantern design.
Why do you think Jane doesn’t usually do spec work?
By now, putting together a mockup should be a piece of  cake.
Let’s look at some XHTML for a simple version of  the Foo Bar:
Create a new stylesheet, screen.css, and add in color and font faces.
Use what you’ve learned so far to give Foo Bar a nice contemporary look.
Make sure you create a logical directory structure and link all the files properly in your index.html file, too.
Play around with different combinations of the colors the Foo Bar owner gave you and see what works best for the layout.
Here are the parts of the CSS file that needed our color treatment.
Let’s take a look at the final code and see what the finished site looks like.
We used the lightest brown for the background and a slightly darker color for the top border.
You can download all the files for the Foo Bar site from the Head First Labs website.
Create (or download) index.html, screen.css, and the Foo Bar images.
Fire up your browser, and show the Foo Bar owner your layout and color scheme.
Have you seen Foo Bar’s new site? They’ve totally ripped off.
Here are just a few of the similarities we found between the “two” versions of the Foo Bar site.
They used our logotype but removed the words below the text.
The navigation is no longer centered, and it appears that the fonts have been adjusted slightly.
Q: There’s no way this was an honest mistake, is there?
A: That’s a question you’ve got to ask, but it’s usually one that’s pretty easy to answer.
When two sites look this much alike, it’s hard to imagine a situation that doesn’t involve stealing designs.
Even if you had an exercise to develop a site that looked like the Foo Bar site, you’d probably make more changes than shown above.
A: Well, it’s like Mom said: just because your friends are doing it, doesn’t make it right.
When you worked hard on a design, you’re entitled to make sure it stays yours.
Welcome to the world of DESIGN PIRACY It’s been said that imitation is the highest form of  flattery.
Source markup is easily viewable (and copyable), images are easily downloaded to a desktop, and CSS is quickly copied.
So what exactly can you do? First, it’s important that you know that if  you created your site (and your design really is an original work), you own the copyright.
Second, you don’t have to put a copyright notice on the pages in your site for them to be copyrighted.
Ask the owner of  the offending website to remove your copyrighted material, or take down your copyrighted design.
And as angry as you might be, keep it civil.
It’s far more likely that the offender will respond to your requests if  you are polite.
Google is committed to responding to clear violations of  copyright.
In fact, they’re so concerned that their responses to infringement may include removing or disabling access to the site that’s infringing on your material.
At the very least, a lawyer can deliver a cease and desist notification on your behalf.
If you want to, a lawyer can even take your infringement site to court and possibly seek damages on your behalf.
Oftentimes the individuals that rip off designs are just hoping you’ll never notice.
But what does that mean? What should we actually do if our copyright’s being violated?
Be polite, firm, and don’t be afraid to mention “legal action” to get your point across.
Foo Bar obviously wasn’t expecting us to look at their site and seemed eager to avoid legal action.
Sometimes just the thought of legal trouble is enough to get people to comply.
Be clear, explicit, polite, and formal in any correspondence with possible design pirates.
Others have visions of  starting companies and pouring over spreadsheets.
There are lots of  different roles, even just in the web design universe.
Are you wondering what parts of  web design you need to worry about?
Which of  these types of  web workers do you think you are?
Front-end designers are part programmer, part graphic artist, and build much of a site’s user interface.
A programmer may be responsible for writing backend code that controls features of a website.
A graphic designer may design user interfaces offline, develop artwork, and work closely with the front-end designer to implement an interface.
User experience designers work with the whole team to develop a consistent, usable interface.
They may also be in charge of running and managing usability tests.
In some large design studios, a copywriter may be used to help build and write content for a project.
I have no desire to deal with all this infringement and copyright.
I enjoy writing code that supports the content management of sites and interacts with databases.
I want to make sure that users can find their way through a site and that the overall design looks great and works properly.
I like working with content and organizing information on a website.
I really like design, but I want to be able write some code.
Answer the questions in the Web Worker Job Poll to see what part of the web design universe you fit into.
Add your score up at the bottom of the next page and see where you fit.
I am good at writing HTML and CSS and enjoy taking designs and expressing them in markup and stylesheets.
I enjoy making web pages behave like desktop applications with Javascript and AJAX.
I like learning about user patterns by observing how others interact with websites.
I like to think about navigation and what content is most important to a particular project.
Use the following key to see where you fit in the web design world:
If  you scored 8 or higher on          and          then you might be a Programmer.
If  you scored 8 or higher on          and          then you might be a User Experience Designer.
If  you scored 8 or higher on          and          then you might be a Information Architect.
If  you scored 8 or higher on          and          then you might be a Front-end Designer.
Choose your job—and your business—based on knowing who you are in the web universe.
If  you’re happy being a designer for a web firm, then copyrights probably aren’t going to be a problem anytime soon.
Or if  you’re really into control and entrepreneurship, you may want to start a company yourself.
Knowing who you are helps you choose the right company and the right people to put around you.
And if  you are into starting a company, there are lots of  different types...
This is the simplest form of business structure because there isn’t actually any structure.
All income and liabilities are accrued by the owner on their personal finances.
LLC’s are a fairly new type of business organization, and their rules vary from state to state.
An LLC (or LLP) gives the owner the simplicity of a sole proprietor with the personal finance protection of a corporation.
The company itself becomes its own entity, and strict rules must be followed while running a corporation.
Corporations can also be expensive to start, and a good lawyer is a key ingredient.
Take a look at the different business descriptions and write in the blank whether you think they are a Sole Proprietorship, an LLC, or a Corporation.
Jim and a friend own a small design company together, which they work at full time.
Their company supports both of them, and they are thinking about bringing on a third designer to help them with projects.
Joe has a full-time job with a large computer company and builds websites in his spare time for small local businesses and friends.
He makes some money here and there but not enough to support him full time.
Green Giant Design employs 4 full-time people and has a six-figure annual revenue year after year.
The owner works as the creative director and likes the fact that her company has remained small and services local companies.
Nationalweb is a large design firm with offices in Chicago and New York.
Most of their clients are large multi-nationals, and they are even considering opening up a European office in London.
Write the business structure you think best fits the description of the company.
Let’s take a look at how these different companies are structured and organized.
Jim and a friend own a small design company together, which they work at full time.
Their company supports both of them and they are thinking about bringing on a third designer to help them with projects.
Joe has a full-time job with a large computer company and builds websites in his spare time for small local businesses and friends.
He makes some money here and there but not enough to support him full time.
Green Giant Design employs 4 full-time people and has six-figure annual revenue year after year.
The owner works as the creative director and likes the fact that his company has remained small and services local companies.
Nationalweb is a large design firm with offices in Chicago and New York.
Most of their clients are large multi-nationals, and they are even considering opening up a European office in London.
Because this is a partnership, a more formal business structure like an LLC would be best.
Joe doesn’t have consistent business, and building websites isn’t even his first job.
The extra income he makes on the design gigs will just show up on his personal income statements.
Although Green Giant Design could easily incorporate, an LLC is all they really need right now.
We’re really not big enough to incorporate, and LLC’s were inexpensive to start.
Besides, I’d rather spend my time looking for new business, not dealing with more paperwork.
Red Lantern’s got a new prospective client Jane’s just received an email from a little San Francisco-based startup called Trilobite Labs, who needs a new site ASAP.
Trilobite Labs is building a series of  really cool iPhone apps, and they need a site that really reflects their design sensibilities, but don’t have the time (or the expertise) to build it themselves.
They love Red Lantern’s site aesthetic, and Jane needs you to replicate success one more time.
A static website with a front page, an About page, a contact page, and three separate product pages.
Trilobite’s site has to work on all sorts of  devices, too.
Trilobite wants to appear cutting edge to represent their work on iPhone apps.
Several different designs to choose from (paper is fine), and an ability to provide design feedback that will get incorporated into the final site.
Low-key usability testing to make sure there aren’t any problems before the site goes live.
One of Trilobite’s iPhone apps lets you check lines at the Apple store so you don’t have to wait in line for that new 3G iPhone.
Besides, shouldn’t the cost be a result of our hourly rate? How should we come up with reasonable rate?
Now that you know what the requirements are for the site, take a few minutes and think about how much a site like this would cost and roughly how much time it would take you to complete.
This is pretty conservative if you’re trying to start a business, you know...
You need to know your hourly rate before bidding on any contract work.
Whether you’re working for yourself, Red Lantern Design, or a huge company, you should have an idea of  what your hourly rate of  work is.
Then, you can figure out the time it will take to complete a project and turn that into a real, fair price.
One will leave you out of  work, and the other out of  money! Here’s a really easy way to come up with a reasonable hourly rate:
Now think about how much time might go into each part of the web design process and write your estimate in the space provided.
This is the time spent initially meeting with clients and getting to know what their needs are and what they expect from you.
Pre-production is where you will look at site content, design an information architecture, and come up with storyboards.
This is where you will go through the draft and design revision phase, honing in on a final concept for the client’s site.
HTML, CSS and Javascript could all make an appearance at this stage.
These costs could include travel, supplies, and other time or material that should be billed to the client.
Q: Woah, I have no clue how long any of this stuff will take!
Think about similar projects where you’ve worked on the various stages, and try and remember how much time you spent working.
Q: And I only estimate actual time that I’m working, not breaks or anything, right?
A: Actually, your estimates should include the entire project time: that means including breaks, trips to get supplies, and anything else related to working on this particular project.
Q: What if I’ve got other people on my team?
In those cases, two people working for an hour each is two hours of work time.
Time in this stage can vary depending on how your client reacts to the drafts you provided.
Extra travel time, subcontractor fees, and expenses can all up the time in this category.
This is the time spent initially meeting with clients and getting to know what their needs are and what they expect from you.
Pre-production is where you will look at site content, design an information architecture, and come up with storyboards.
This is where you will go through the draft and design revision phase, honing in on a final concept for the client’s site.
HTML, CSS and Javascript could all make an appearance at this stage.
These costs could include travel, supplies, and other time or material that should be billed to the client.
This price represents the cost of a small-to medium-sized website done by an individual charging $50/hour.
Q: Do you need all the people in the web design universe to successfully complete a site?
If you’re a freelance web developer, you may wear many hats and be able to work with your clients throughout the design process.
If you need to, you can bring in a contractor to complete work that you can’t do yourself (like back-end programming)
A: The two types of structures are essentially the same thing.
Most of the time, you will see professional services like accounting and law firms organize as LLPs.
Q: Is $50/hour the average? What’s the range of hourly rates you can expect to find at design firms?
These rates vary depending on location, experience, and size of company.
Q: What happens if I underestimate the time it takes to complete a project?
Most projects are quoted on a job estimate and the final price can vary up or down from the original quote.
The most important thing you can do is communicate with your client and let them know where you are in your process and how close the final price will be to what you originally quoted.
Q: Is there a resource for finding out what other people are charging and what services cost in other design-related fields?
This includes web design and has information on salaries, hourly rates, and industry standards for the field.
Now that you have a better idea of the time and costs of a typical web project, let’s use the Red Lantern estimate worksheet to generate a quote for the Trilobite Labs project.
Check off the client requirements as they are covered in the estimate.
A static website with a front page, an About page, a contact page, and three separate product pages.
Trilobite’s site has to work on all sorts of devices, too.
Trilobite wants to appear cutting edge to represent their work on iPhone apps.
Several different designs to choose from (paper is fine), and an ability to provide design feedback that will get incorporated into the final site.
Low-key usability testing to make sure there aren’t any problems before the site goes live.
Copy this sheet! We know you won’t have any good ideas of all these costs.
The idea here is to see what a real bid sheet might look like.
In fact, you may want to copy this sheet for your own bids.
The next page has some sample entries for what a real web design job might cost, too.
A static website with a front page, an About page, a contact page, and three separate product pages.
Trilobite’s site has to work on all sorts of  devices, too.
Trilobite wants to appear cutting edge to represent their work on iPhone apps.
Several different designs to choose from (paper is fine), and an ability to provide design feedback that will get incorporated into the final site.
Low-key usability testing to make sure there aren’t any problems before the site goes live.
Now that you have a better idea of the time and costs of a typical web project, let’s use the Red Lantern estimate worksheet to generate a quote for the Trilobite Labs project.
Check off the client requirements as they are covered in the estimate.
A website with less than 10 pages that will be used to promote a product (software)
Client would like to see multiple design ideas before deciding on a final version.
This is mostly research looking at what other companies in your clients field are doing.
It’s also a nice refresher if you work on lots of projects.
Pre-production is important and can save you lots of time and headaches down the line if done properly.
Drafts and Production is where your design really starts to shine.
This is where the client will first see where all that time has gone.
Typically they are billed at cost plus some percentage of markup.
It’s pretty much a foregone conclusion that you’re going to have potential clients who’ll look at your estimates and immediately start to argue that the price tag is too high.
If  you’re experienced, confident in your design skills, and have done a good job estimating project costs, it’s part of  your job to explain to a potential client why the cost estimate is what it is.
It isn’t “against the rules” to respond to a client with a justification for your bid.
Unless you have a really solid reason, you shouldn’t let a client bully you into lowering your price.
This not only devalues your skills as a designer, but might put you in a position where you’re putting more work into a project than you’re actually getting paid for–which is a good way to ruin a business, rather than run one.
The guys from Trilobite Labs think your estimate’s a bit high.
Using the template below, outline the project for Trilobite Labs in a proposal letter so they can see what we’re doing and where their money is going.
Use a proposal letter to deliver a detailed quote to a client A proposal letter details all your costs to a client.
But it can also make it clear exactly how you came up with your bid.
Sometimes outlining individual costs is all a client needs to understand the value you could bring to their project.
We need to know who this is for and when we quoted it.
A breakdown of the services and costs will help the client understand what we are doing.
A tentative schedule so that the client knows how long the project is expected to take.
Let’s look at a completed proposal letter for Trilobite Labs:
Outline the service and cost so the customer knows exactly what they are getting into.
A schedule will help keep you on task and give your client an idea of when they can expect a final finished product.
Set terms so you get paid on time, and make sure that the client signs the letter to make it official.
A 6-8 page website using valid code which includes all information design, graphic design and XHTML page templates.
In the midst of  waiting for a decision from Trilobite Labs about your bid, you get a call for their CEO.
Over lunch a couple of  days ago, the guys at Trilobite came up with another idea that they want to throw into the mix: podcasting.
Trilobite really wants to start an official company podcast that covers all of  the intricacies of  developing for the iPhone and iPod Touch.
It’s up to you to work out how podcasting fits into the bid you’ve already put together.
But there’s a wrinkle: Trilobite’s really worried about protecting their podcast.
They want people to be able to download the podcast for free (and share it with anyone they want)
What they don’t want, though, is for some other website to take their podcast and re-sell it.
It’s up to you to handle this problem, along with the rest of  their web-related design issues.
The Creative Commons (http://creativecommons.org/) is a non profit organization dedicated to expanding the range of  creative works available for others to build upon legally and to share.
They’ve developed a series of  simple copyright licenses that protect the “base rights” of  the creator.
These Creative Commons Licenses have become an enormous force in the modern world of media production.
Creative Commons was founded in 2002 by researchers from MIT, Harvard and Stanford.
Can you come up with three things you’ve done in the last 12 months you might want to copyright and protect?
Trilobite wants to upload the company podcasts to the Apple iTunes Store.
This license lets others distribute, remix, tweak, and build upon your work, even commercially, as long as they credit you for the original creation.
This is the most accommodating of  licenses offered, in terms of  what others can do with your works licensed under Attribution.
This license lets others remix, tweak, and build upon your work even for commercial reasons, as long as they credit you and license their new creations under the identical terms.
This license is often compared to open source software licenses.
All new works based on yours will carry the same license, so any derivatives will also allow commercial use.
This license allows for redistribution, commercial and non-commercial, as long as it is passed along unchanged and in whole, with credit to you.
This license lets others remix, tweak, and build upon your work non-commercially, and although their new works must also acknowledge you and be noncommercial, they don’t have to license their derivative works on the same terms.
Attribution Non-commercial Share Alike (by-nc-sa) This license lets others remix, tweak, and build upon your work non-commercially, as long as they credit you and license their new creations under the identical terms.
Others can download and redistribute your work just like the by-nc-nd license, but they can also translate, make remixes, and produce new stories based on your work.
All new work based on yours will carry the same license, so any derivatives will also be non-commercial in nature.
This license is the most restrictive of  our six main licenses, allowing redistribution.
This license is often called the “free advertising” license because it allows others to download your works and share them with others as long as they mention you and link back to you, but they can’t change them in any way or use them commercially.
Based on the requirements below, choose the Creative Commons license that best meets the needs of the Trilobite podcast.
Circle the license that meets the needs of the Trilobite podcast.
Trilobite wants anyone to be able to download, copy, distribute, and broadcast their podcasts.
Trilobite wants to make sure that they always get credit for the podcast when it is copied, distributed, or broadcasted, in any format.
Trilobite wants to make sure that the podcast isn’t altered, edited, or mashed-up in any way, and when it’s distributed or broadcasted, it’s done so verbatim.
Trilobite wants to make sure that if the podcast is distributed or broadcasted, it isn’t for commercial reasons (for example, no third party can make money by reselling the podcast)
What license did you choose? Did it meet all four criteria listed below?
Creative Commons is perfect, especially when distributing online with a wellthought-out plan.
Trilobite wants anyone to be able to download, copy, distribute, and broadcast their podcasts.
Trilobite wants to make sure that they always get credit for the podcast when it is copied, distributed, or broadcasted, in any format.
Trilobite wants to make sure that the podcast isn’t altered, edited, or mashed-up in any way, and when it’s distributed or broadcasted, it’s done so verbatim.
Trilobite wants to make sure that if the podcast is distributed or broadcasted, it isn’t for commercial reasons (for example, no third party can make money by reselling the podcast)
Just got word that we won the bid for the Trilobite project.
They liked what they saw, and once they looked at the breakdown of costs, they realized that they were getting real value.
At this point, it’s time to take things out into the world.
We’ve really covered a lot of  ground in this book.
The thing is, there are some important topics and tidbits that didn’t quite fit into any of the previous.
We feel pretty strongly about these and think that if we didn’t at least cover.
But it’s an awesome appendix of the top ten best bits that we couldn’t let.
Cross-cultural & international design The Web is a truly global place—and that means your websites have to be too.
People from every corner of  the globe are checking out your sites.
The thing is, everyone has a different cultural, linguistic, and ethnic background—all of which might impact how they interpret your site’s design.
There are some things you should keep in mind when you are designing a site for an international audience (or an audience whose culture is different from your own)
Icons have different cultural meanings Icons are cool and can convey a lot of  information in a little bit of  space.
But what an icon means to you might be completely different from what that icons means to someone in another country or culture:
In many other parts of the world, shoppers bring their own shopping bags to the store.
So a shopping bag, and not a shopping cart, might be a more appropriate metaphor for “checking out.”
If  you originally design your site in English and then go to translate it to German, you’re going to find that the phrases take up more space—throwing your carefully planned design into chaos.
So what can you do? You either need to design your site so that an increased number of  characters doesn’t really have an impact on your layout, or you’ll need to reformat your site after you translate the content into the target language.
Either way, you can’t ignore language lengths if  your site is going to be translated.
Is that the month or the year? Even something as simple as how date and time are displayed can differ from country to country.
If  your site has the date or time formatted incorrectly for that national or cultural context, your users might get confused, or even miss an important event or deadline.
Here are just a few date and time formats you’ll want to think about:
Time displayed on a 24 hour clock is fairly standard in Europe.
Time displayed on a 12 hour clock, like you’ll find in the United States.
In the United States, the day-month-year format is used, while the month-day-year format is used most other places in the world.
Is that really the flag you want to use? It’s fairly common to see flag icons used to indicate language choice.
English might be represented by the Union Jack, and French represented by the flag of  France.
The problem with this is that nationality (and flags) don’t represent language.
There are lots of people who don’t live in France who speak French.
So some users might feel frustrated or even alienated that your site equates their native language with some other country.
Instead of  using flag icons to indicate language choice, simply spell the language out in the actual language—English, Francais, Deutsche, etc.
Does the Canadian flag mean English or French? They’re both official languages of the country.
South Africa has 11 official languages - which one does the South African flag represent?
Which flag represents English? There are lots of countries in the world whose official language is English.
The future of web markup The web is constantly evolving.
New markup and style specifications are being proposed, developed, and implemented by the World Wide Web Consortium (W3C)—all of  which will have an impact on how web designers do their thing.
The most important goal for the XHTML 2 working group is to further separate document content and structure from document presentation.
To these ends, the XHTML 2 working group has completely removed elements such as basefont, big, font, s, strike, tt, u, small, b, i, and hr.
The XHTML 2 group has also been less concerned with backward compatibility, which has led them to drop some of  the syntactic baggage present in earlier incarnations of  HTML.
So a lot of  the HTML 5 specification focuses on creating a more robust, full-featured client-side environment for web application development by providing a variety of  APIs (and elements that work specifically with those APIs)
Examples include the 2D drawing API, which can be used with the new canvas element, and an API for playing video and audio, which can be used with the new video and audio elements.
Navigation lists must start with a child label element that defines the list title.
In HTML 5, navigation lists look a little something like this:
In HTML 5, the new nav element has been introduced for the purpose of creating navigational lists.
The whole point of  navigational lists (especially in XHTML2) is to create simple, lightweight navigation markup that can then be styled using CSS.
So when will you see official releases? Honestly, there’s no good way to know.
Because of  the open and collaborative nature of  developing these sorts of  specifications, discussion and deliberation by the members of the individual working groups will go on until the job is done and everyone gets a chance to contribute.
In the grand scheme of  things, the release of the final specifications are not the issue.
What is important is when (and how fast) browser developers completely adopt the new standards.
One of  the most interesting things about CSS 3 is that it will be released as a series of  modules—instead of  one big single release.
This means that CSS can be updated faster, as modules can come out individually.
Modules can be changed and updated independent of  other modules, too, which means that you don’t have to wait for the next “big” revision of  CSS to get a particular update of  your favorite module.
While there are lots of  cool modules out there, one of  the coolest is the multi-column module.
It offers new CSS properties that let designers specify the number of  columns an element should have.
This not only allows designers to create documents that look more print-like, but it changes the process of  creating multi-column layouts entirely.
Designing for mobile devices Over the past couple of  years, design for mobile devices has become a really big deal.
Not only are new mobile network infrastructures coming online that allow for faster data transfer, but new and far more powerful devices are hitting the market and becoming widely available and adopted.
Devices such as Google’s Andorid-based phones or the Apple iPhone are changing the face of the mobile Web.
If  you are designing for mobile devices, there are some things you should think about:
These web applications don’t just display information, they actually do something.
To create a web app, you’ll need to work in a server-side scripting or programming language.
Each language has its own strengths and weaknesses, and with a little research, you’ll find the one that fits your needs.
The language you choose is determined by the server on which you’ll be hosting your web app.
Remember that some servers will support one web language but not another.
Remember, though, just because you may be coding a web app, you’ve still got to use good design principles.
Here are a few books that can get you started with web apps:
Rhythm in your layout Rhythm—the repetition of  design elements—is a term often used in print design.
Repetition allows you to create consistency, which contributes to the layout’s visual logic.
Repeat a common element or theme, and your site feels intuitive, more usable, and logical to users.
Let’s take a look at how repetition can be used:
Background pattern in the header repeats at a regular interval.
Each piece of content is in the same sort of structure, creating repetition down the length of the page.
All the text has silhouettes, even in the smaller content headers.
Text contrast Back in Chapter 7, we talked a lot about how to make content more scannable.
Legible text is text that’s easy to read because of  the colors and contrast, not because it’s easy (or hard) to understand.
There are a lot of  things you can do to make your text more legible.
Most importantlyt, make sure that you have a high contrast between the color of  your text and the color of  your background.
If  there isn’t much contrast between your text color and your background color, users are going to find your text hard to read the text.
However, the potential of  the web to deliver full scale applications didn’t hit the mainstream till Google introduced Gmail, quickly followed by Google Maps, web based applications with rich user interfaces and PC-equivalent interactivity.
The collection of  technologies used by Google was christened AJAX, in a seminal essay by Jesse James Garrett of  web design firm Adaptive Path.
The bursting of  the dot-com bubble in the fall of 2001 marked a turning point for the web.
Many people concluded that the web was overhyped, when, in fact, bubbles and consequent shakeouts appear to be a common feature of  all technological revolutions.
Shakeouts typically mark the point at which an ascendant technology is ready to take its place at center stage.
The first of  those principles was “The web as platform.” Yet that was also a rallying cry of  Web 1.0 darling, Netscape, which went down in flames after a heated battle with Microsoft.
What’s more, two of  our initial Web 1.0 exemplars, DoubleClick and Akamai, were both pioneers in treating the web as a platform.
People don’t often think of  it as “web services,” but in fact, ad serving was the first widely deployed web service, and the first widely deployed.
White text on a black background (called negative text) is very legible because there is a high contrast between text color and background color.
When there isn’t much contrast between the color of the text and the background color, the text is very hard to read.
Match link names with their destination page As we talked about back in Chapter 6, signposting is one of  the guiding principles of usable and intuitive navigation design.
However, there are many other ways to give users a clear indication of  where they are, where they can go, and a confirmation that they’ve arrived at the right place.
One simple technique is to make sure you match the name of  a link with the destination page’s title.
That way, users will immediately know they’ve arrived where they expected to be when they clicked on the link.
Contrast is a fundamental layout device Contrast applies to more than just text and background color.
Contrast, more broadly, is the juxtapositioning of  dissimilar graphic elements.
Contrast is commonly used to create emphasis in a layout.
The idea is simple: the greater the difference between a design element and its surroundings, the more that particular element will stand out.
In the context of  layout, there are generally two things that create contrast: color and containers.
So when you apply contrasting colors to an element and its surroundings, that element will stand out.
You can use contrast to obviously identify different parts of  your layout or focus the user’s eye towards a particularly important aspect of  your layout.
Both a container and color are used to emphasize the site’s identity.
A contrasting color is used to focus the user’s eye on important headers.
The contrast between the site’s background color and the background color of the main content area focuses the user’s eye towards what’s important in the site.
Both color and a container are used to focus the user’s eye towards the site’s important introductory information.
More tools for design There are lots of  great online and offline tools that will help you envision, create, and implement your design.
We’re not talking about visual markup editors like Dreamweaver here.
Instead, we’re talking about tools that actually help with the process of  design.
We’ve already talked about Kuler (a great little online app for creating color schemes), but there are so many more.
Pencil is an incredibly powerful little open source app that is designed specifically to create storyboards, interface prototypes and design diagrams.
It comes in two flavors: a Firefox add-on and a desktop app (only Windows and Linux—sorry, no Mac version yet)
Honestly, Pencil is pretty much an image editing application with features (such as built-in GUI stencils) geared specifically towards interface design and prototyping.
WriteMaps is a web application for building robust information architecture diagrams.
On top of  this, it allows you to share and collaboratively edit your IA diagrams with others.
Firebug is an open source (and free) Firefox extension, much like Web Developer, that puts a wealth of  web design, development, and testing tools at your fingertips.
With it, you can inspect and edit markup and CSS, view a page’s various CSS containers (box model), view a page’s response time (download time) broken down by file type, debug and execute JavaScript on the fly, and inspect JavaScript performance (among many other things)
CSSTidy is an open source desktop application (available for Windows, Linux, and Mac) which parses and optimizes CSS.
It can easily reduce the size of  your CSS by 25%—which is especially good if  you are obsessed with optimization or are designing for a platform where small file size matters (like a mobile device)
Web Developer is a Firefox add-on that puts a host of  web development and testing tools at your fingertips.
With it, you can directly edit the CSS of  a currently displayed web page, display all of  a site’s style sheets by media type, outline all block-level elements in a page, automatically resize the browser window, and directly edit the markup of  a currently displayed web page.
