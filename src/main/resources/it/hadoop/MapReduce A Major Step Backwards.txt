What parallel databases got right – parallel databases == shared nothing RDBMS.
Things people like about Hadoop (the open source MapReduce) – No IBM product but lots of use at our labs and customer feedback – Also IBM/Google/NSF university program – hosted Hadoop clusters.
A runtime job scheduler and load balancer – Doesn’t need to understand what’s going on in the UDFs or rely on.
Intra-job fault tolerance and straggler handling – Critical for long running tasks.
Use of a fault tolerant DFS – Over direct-attached storage, 3x replication – Any node can get to any block but expose block locations to enable.
Scalability and fault tolerance on commodity hardware – Easy to set up – Works ok without any tuning.
Freedom from the “Warehouse Priesthood” – Analysts like to load data in HDFS and  experiment with it – A rigid warehouse schema is often not what they want.
Open source brings innovation and choices – Query languages (Pig, Hive, Jaql, Cascading) – HDFS InputFormats (SequenceFiles, Thrift, Avro, ProtocolBuffers, …) – ML libs (Mahout) – R libs (R-Forge) – ...
Extensibility & Programmability of the platform – Able to do stuff they probably couldn’t do in a parallel database.
Text analysis, image mining, statistical machine translation, credit card fraud analysis, drug interaction analysis, entity resolution, monte carlo simulation…
Is it silly for MapReduce to try and be like a parallel database? – SQL on Hadoop: Facebook’s Hive.
Is it silly for a parallel database to try and be like MapReduce? – MapReduce in SQL: Greenplum, Aster Data, …
Is a collision coming? – Does anybody get run over?
